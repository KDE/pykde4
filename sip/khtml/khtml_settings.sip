//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module khtml  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KHTMLSettings
{
%TypeHeaderCode
#include <khtml_settings.h>
%End


public:

    enum KJavaScriptAdvice
    {
        KJavaScriptDunno, 
        KJavaScriptAccept, 
        KJavaScriptReject
    };


    enum KAnimationAdvice
    {
        KAnimationDisabled, 
        KAnimationLoopOnce, 
        KAnimationEnabled
    };


    enum KJSWindowOpenPolicy
    {
        KJSWindowOpenAllow, 
        KJSWindowOpenAsk, 
        KJSWindowOpenDeny, 
        KJSWindowOpenSmart
    };


    enum KJSWindowStatusPolicy
    {
        KJSWindowStatusAllow, 
        KJSWindowStatusIgnore
    };


    enum KJSWindowMovePolicy
    {
        KJSWindowMoveAllow, 
        KJSWindowMoveIgnore
    };


    enum KJSWindowResizePolicy
    {
        KJSWindowResizeAllow, 
        KJSWindowResizeIgnore
    };


    enum KJSWindowFocusPolicy
    {
        KJSWindowFocusAllow, 
        KJSWindowFocusIgnore
    };

                         KHTMLSettings ();
                         KHTMLSettings (const KHTMLSettings&);
    void                 init ();
    void                 init (KConfig*, bool = 1);
    bool                 changeCursor ();
    bool                 underlineLink ();
    bool                 hoverLink ();
    bool                 allowTabulation () const;
    bool                 autoSpellCheck () const;
    KHTMLSettings::KAnimationAdvice showAnimations () const;
    QString              stdFontName () const;
    QString              fixedFontName () const;
    QString              serifFontName () const;
    QString              sansSerifFontName () const;
    QString              cursiveFontName () const;
    QString              fantasyFontName () const;
    void                 setStdFontName (const QString&);
    void                 setFixedFontName (const QString&);
    int                  minFontSize () const;
    int                  mediumFontSize () const;
    bool                 jsErrorsEnabled () const;
    void                 setJSErrorsEnabled (bool);
    const QString&       encoding () const;
    bool                 followSystemColors () const;
    const QColor&        textColor ();
    const QColor&        baseColor () const;
    const QColor&        linkColor ();
    const QColor&        vLinkColor ();
    bool                 autoLoadImages ();
    bool                 unfinishedImageFrame () const;
    bool                 isOpenMiddleClickEnabled ();
    bool                 isBackRightClickEnabled ();
    bool                 isJavaEnabled (const QString& = QString::null );
    bool                 isJavaScriptEnabled (const QString& = QString::null );
    bool                 isJavaScriptDebugEnabled (const QString& = QString::null );
    bool                 isJavaScriptErrorReportingEnabled (const QString& = QString::null ) const;
    bool                 isPluginsEnabled (const QString& = QString::null );
    bool                 isAdFiltered (const QString&) const;
    bool                 isAdFilterEnabled () const;
    bool                 isHideAdsEnabled () const;
    void                 addAdFilter (const QString&);
    bool                 accessKeysEnabled () const;
    KHTMLSettings::KJSWindowOpenPolicy windowOpenPolicy (const QString& = QString::null ) const;
    KHTMLSettings::KJSWindowMovePolicy windowMovePolicy (const QString& = QString::null ) const;
    KHTMLSettings::KJSWindowResizePolicy windowResizePolicy (const QString& = QString::null ) const;
    KHTMLSettings::KJSWindowStatusPolicy windowStatusPolicy (const QString& = QString::null ) const;
    KHTMLSettings::KJSWindowFocusPolicy windowFocusPolicy (const QString& = QString::null ) const;
    static KJavaScriptAdvice strToAdvice (const QString&);
//ig     static void          splitDomainAdvice (const QString&, QString&, KHTMLSettings::KJavaScriptAdvice&, KHTMLSettings::KJavaScriptAdvice&);
    static const char*   adviceToStr (KHTMLSettings::KJavaScriptAdvice);
//ig     void                 readDomainSettings (const KConfigGroup&, bool, bool, KPerDomainSettings&);
    QString              settingsToCSS () const;
    static const QString& availableFamilies ();
    QString              userStyleSheet () const;
    bool                 isFormCompletionEnabled () const;
    int                  maxFormCompletionItems () const;
    bool                 isAutoDelayedActionsEnabled () const;
    QList<QPair<QString, QChar>> fallbackAccessKeysAssignments () const;
    void                 setJSPopupBlockerPassivePopup (bool);
    bool                 jsPopupBlockerPassivePopup () const;

};  // class KHTMLSettings

