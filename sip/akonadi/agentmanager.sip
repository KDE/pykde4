//
//     Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Akonadi
{

class AgentManager : QObject
{
%TypeHeaderCode
#include <akonadi/agentmanager.h>
%End


public:
    static Akonadi::AgentManager*  self ();
    Akonadi::AgentType::List  types () const;
    Akonadi::AgentType      type (const QString& identifier) const;
    Akonadi::AgentInstance::List  instances () const;
    Akonadi::AgentInstance  instance (const QString& identifier) const;
    void                    removeInstance (const Akonadi::AgentInstance& instance);
    void                    synchronizeCollection (const Akonadi::Collection& collection);

signals:
    void                    typeAdded (const Akonadi::AgentType& type);
    void                    typeRemoved (const Akonadi::AgentType& type);
    void                    instanceAdded (const Akonadi::AgentInstance& instance);
    void                    instanceRemoved (const Akonadi::AgentInstance& instance);
    void                    instanceStatusChanged (const Akonadi::AgentInstance& instance);
    void                    instanceProgressChanged (const Akonadi::AgentInstance& instance);
    void                    instanceNameChanged (const Akonadi::AgentInstance& instance);
    void                    instanceError (const Akonadi::AgentInstance& instance, const QString& message);
    void                    instanceWarning (const Akonadi::AgentInstance& instance, const QString& message);
    void                    instanceOnline (const Akonadi::AgentInstance& instance, bool online);

private:
                            AgentManager ();
public:
    ~AgentManager ();
    void                    synchronizeCollection (const Akonadi::Collection& collection, bool recursive);
};
// AgentManager

};
// Akonadi


