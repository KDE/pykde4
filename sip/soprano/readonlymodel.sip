//
//     Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
/* Not exported
namespace Soprano
{
namespace Util
{

class ReadOnlyModel : Soprano::Model
{
%TypeHeaderCode
  <soprano/readonlymodel.h>
%End

public:
                            ReadOnlyModel (Soprano::Model* parentModel = 0);
    void                    setParentModel (Soprano::Model* model);
    Soprano::StatementIterator  listStatements (const Soprano::Statement& partial) const;
    Soprano::NodeIterator   listContexts () const;
    Soprano::QueryResultIterator  executeQuery (const QString& query, Soprano::Query::QueryLanguage language, const QString& userQueryLanguage = QString()) const;
    bool                    containsStatement (const Soprano::Statement& statement) const;
    bool                    containsAnyStatement (const Soprano::Statement& statement) const;
    bool                    isEmpty () const;
    int                     statementCount () const;
    Soprano::Error::ErrorCode  addStatement (const Soprano::Statement& statement);
    Soprano::Error::ErrorCode  removeStatement (const Soprano::Statement& statement);
    Soprano::Error::ErrorCode  removeAllStatements (const Soprano::Statement& statement);
    Soprano::Node           createBlankNode ();
};   // ReadOnlyModel

};   // Util

};   // Soprano


*/