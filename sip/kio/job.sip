//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
#include <job.h>
%End

namespace KIO
{


enum LoadType
{
    Reload, 
    NoReload
};


KIO::SimpleJob*      mkdir (const KUrl&, int = -1);
KIO::SimpleJob*      rmdir (const KUrl&);
KIO::SimpleJob*      chmod (const KUrl&, int);
KIO::SimpleJob*      chown (const KUrl&, const QString&, const QString&);
KIO::SimpleJob*      setModificationTime (const KUrl&, const QDateTime&);

KIO::SimpleJob*      rename (const KUrl&, const KUrl&, KIO::JobFlags = KIO::DefaultFlags);
KIO::SimpleJob*      symlink (const QString&, const KUrl&, KIO::JobFlags = KIO::DefaultFlags);
KIO::SimpleJob*      special (const KUrl&, const QByteArray&, KIO::JobFlags = KIO::DefaultFlags);
KIO::SimpleJob*      mount (bool, const QByteArray&, const QString&, const QString&, KIO::JobFlags = KIO::DefaultFlags);
KIO::SimpleJob*      unmount (const QString&, KIO::JobFlags = KIO::DefaultFlags);

KIO::SimpleJob*      http_update_cache (const KUrl&, bool, time_t);

KIO::StatJob*        stat (const KUrl&, KIO::JobFlags = KIO::DefaultFlags);
KIO::StatJob*        stat (const KUrl&, KIO::StatJob::StatSide, short, KIO::JobFlags = KIO::DefaultFlags);
KIO::StatJob*        stat (const KUrl&, bool, short, KIO::JobFlags = KIO::DefaultFlags);
KIO::TransferJob*    get (const KUrl&, KIO::LoadType = KIO::NoReload, KIO::JobFlags = KIO::DefaultFlags);

KIO::FileJob*        open (const KUrl&, QIODevice::OpenMode);

KIO::TransferJob*    put (const KUrl&, int, KIO::JobFlags = KIO::DefaultFlags);
KIO::TransferJob*    http_post (const KUrl&, const QByteArray&, KIO::JobFlags = KIO::DefaultFlags);
KIO::StoredTransferJob* storedGet (const KUrl&, KIO::LoadType = KIO::NoReload, KIO::JobFlags = KIO::DefaultFlags);
KIO::StoredTransferJob* storedPut (const QByteArray&, const KUrl&, int, KIO::JobFlags = KIO::DefaultFlags);

KIO::MultiGetJob*    multi_get (long, const KUrl&, const KIO::MetaData&);

KIO::MimetypeJob*    mimetype (const KUrl&, KIO::JobFlags = KIO::DefaultFlags);
KIO::FileCopyJob*    file_copy (const KUrl&, const KUrl&, int = -1, KIO::JobFlags = KIO::DefaultFlags);
KIO::FileCopyJob*    file_move (const KUrl&, const KUrl&, int = -1, KIO::JobFlags = KIO::DefaultFlags);
KIO::SimpleJob*      file_delete (const KUrl&, KIO::JobFlags = KIO::DefaultFlags);
KIO::ListJob*        listDir (const KUrl&, KIO::JobFlags = KIO::DefaultFlags, bool = 1);
KIO::ListJob*        listRecursive (const KUrl&, KIO::JobFlags = KIO::DefaultFlags, bool = 1);



};  // namespace KIO

