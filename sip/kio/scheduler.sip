//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KIO
{

class Scheduler : QObject
{
%TypeHeaderCode
#include <scheduler.h>
%End


public:
    static void          doJob (KIO::SimpleJob*);
    static void          scheduleJob (KIO::SimpleJob*);
    static void          cancelJob (KIO::SimpleJob*);
    static void          jobFinished (KIO::SimpleJob*, KIO::Slave*);
    static void          putSlaveOnHold (KIO::SimpleJob*, const KUrl&);
    static void          removeSlaveOnHold ();
    static void          publishSlaveOnHold ();
    static KIO::Slave*   getConnectedSlave (const KUrl&, const KIO::MetaData& = KIO::MetaData ());
    static bool          assignJobToSlave (KIO::Slave*, KIO::SimpleJob*);
    static bool          disconnectSlave (KIO::Slave*);
    static void          registerWindow (QWidget*);
    static void          unregisterWindow (QObject*);
    static bool          connect (const char*, const QObject*, const char*);
    static bool          connect (const QObject*, const char*, const QObject*, const char*);
    static bool          disconnect (const QObject*, const char*, const QObject*, const char*);
    bool                 connect (const QObject*, const char*, const char*);
    static void          checkSlaveOnHold (bool);
    static void          emitReparseSlaveConfiguration ();

signals:
    void                 slaveConnected (KIO::Slave*);
    void                 slaveError (KIO::Slave*, int, const QString&);
    void                 reparseSlaveConfiguration (const QString&);

private:
                         Scheduler (const KIO::Scheduler&);
                         Scheduler ();
                         ~Scheduler ();

};  // class Scheduler

};  // namespace KIO

