//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module khtml  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KHTMLView : QScrollArea
{
%TypeHeaderCode
#include <khtmlview.h>
%End


public:
                         KHTMLView (KHTMLPart*, QWidget* /TransferThis/);
    KHTMLPart*           part () const;
    int                  frameWidth () const;
    void                 setMarginWidth (int);
    int                  marginWidth () const;
    void                 setMarginHeight (int);
    int                  marginHeight ();
    virtual void         setVerticalScrollBarPolicy (Qt::ScrollBarPolicy);
    virtual void         setHorizontalScrollBarPolicy (Qt::ScrollBarPolicy);
    void                 print (bool = 0);
    void                 displayAccessKeys ();
    int                  contentsWidth () const;
    int                  contentsHeight () const;
    int                  contentsX () const;
    int                  contentsY () const;
    int                  visibleWidth () const;
    int                  visibleHeight () const;
    void                 setContentsPos (int, int);
    QPoint               contentsToViewport (const QPoint&) const;
    QPoint               viewportToContents (const QPoint&) const;
    void                 viewportToContents (int, int, int& /Out/, int& /Out/) const;
    void                 contentsToViewport (int, int, int& /Out/, int& /Out/) const;
    void                 scrollBy (int, int);
    void                 updateContents (const QRect&);
    void                 updateContents (int, int, int, int);
    void                 addChild (QWidget*, int, int);
    void                 repaintContents (const QRect&);
    void                 repaintContents (int, int, int, int);
    void                 setZoomLevel (int);
    int                  zoomLevel () const;

public slots:
    virtual void         resizeContents (int, int);
    void                 layout ();

signals:
    void                 finishedLayout ();
    void                 cleared ();
    void                 zoomView (int);
    void                 hideAccessKeys ();
    void                 repaintAccessKeys ();
    void                 findAheadActive (bool);

protected:
    void                 clear ();
    virtual bool         event (QEvent*);
    virtual void         paintEvent (QPaintEvent*);
    virtual void         resizeEvent (QResizeEvent*);
    virtual void         showEvent (QShowEvent*);
    virtual void         hideEvent (QHideEvent*);
    virtual bool         focusNextPrevChild (bool);
    virtual void         mousePressEvent (QMouseEvent*);
    virtual void         focusInEvent (QFocusEvent*);
    virtual void         focusOutEvent (QFocusEvent*);
    virtual void         mouseDoubleClickEvent (QMouseEvent*);
    virtual void         mouseMoveEvent (QMouseEvent*);
    virtual void         mouseReleaseEvent (QMouseEvent*);
    virtual void         wheelEvent (QWheelEvent*);
    virtual void         dragEnterEvent (QDragEnterEvent*);
    virtual void         dropEvent (QDropEvent*);
    virtual void         closeEvent (QCloseEvent*);
    virtual bool         widgetEvent (QEvent*);
    virtual bool         viewportEvent (QEvent*);
    virtual bool         eventFilter (QObject*, QEvent*);
    virtual void         scrollContentsBy (int, int);
    void                 keyPressEvent (QKeyEvent*);
    void                 keyReleaseEvent (QKeyEvent*);
    void                 doAutoScroll ();
    void                 timerEvent (QTimerEvent*);

protected slots:
    void                 slotPaletteChanged ();

};  // class KHTMLView

