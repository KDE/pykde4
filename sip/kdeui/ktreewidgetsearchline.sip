//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KTreeWidgetSearchLine : KLineEdit
{
%TypeHeaderCode
#include <ktreewidgetsearchline.h>
%End


public:
                         KTreeWidgetSearchLine (QWidget* /TransferThis/ = 0, QTreeWidget* = 0);
                         KTreeWidgetSearchLine (QWidget* /TransferThis/, const QList<QTreeWidget*>&);
    Qt::CaseSensitivity  caseSensitivity () const;
    QList<int>           searchColumns () const;
    bool                 keepParentsVisible () const;
    QTreeWidget*         treeWidget () const;
    QList<QTreeWidget*>  treeWidgets () const;

public slots:
    void                 addTreeWidget (QTreeWidget*);
    void                 removeTreeWidget (QTreeWidget*);
    virtual void         updateSearch (const QString& = QString ());
    void                 setCaseSensitivity (Qt::CaseSensitivity);
    void                 setKeepParentsVisible (bool);
    void                 setSearchColumns (const QList<int>&);
    void                 setTreeWidget (QTreeWidget*);
    void                 setTreeWidgets (const QList<QTreeWidget*>&);

protected:
    virtual bool         itemMatches (const QTreeWidgetItem*, const QString&) const;
    virtual void         contextMenuEvent (QContextMenuEvent*);
    virtual void         updateSearch (QTreeWidget*);
    virtual void         connectTreeWidget (QTreeWidget*);
    virtual void         disconnectTreeWidget (QTreeWidget*);
    virtual bool         canChooseColumnsCheck ();

protected slots:
    void                 queueSearch (const QString&);
    void                 activateSearch ();

};  // class KTreeWidgetSearchLine


class KTreeWidgetSearchLineWidget : QWidget
{
%TypeHeaderCode
#include <ktreewidgetsearchline.h>
%End


public:
                         KTreeWidgetSearchLineWidget (QWidget* /TransferThis/ = 0, QTreeWidget* = 0);
    KTreeWidgetSearchLine* searchLine () const;

protected slots:
    virtual void         createWidgets ();

protected:
    virtual KTreeWidgetSearchLine* createSearchLine (QTreeWidget*) const;

};  // class KTreeWidgetSearchLineWidget

