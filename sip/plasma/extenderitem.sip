// Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Plasma
{

class ExtenderItem : QGraphicsWidget
{
%TypeHeaderCode
#include <plasma/extenderitem.h>
%End

public:
    explicit                ExtenderItem (Plasma::Extender* hostExtender, uint extenderItemId = 0);
    KConfigGroup            config () const;
    void                    setWidget (QGraphicsItem* widget);
    QGraphicsItem*          widget () const;
    void                    setTitle (const QString& title);
    QString                 title () const;
    void                    setName (const QString& name);
    QString                 name () const;
    void                    setIcon (const QString& icon);
    void                    setIcon (const QIcon& icon);
    QIcon                   icon () const;
    void                    setExtender (Plasma::Extender* extender, const QPointF& pos = QPointF(-1,-1));
    Plasma::Extender*       extender () const;
    void                    setGroup (Plasma::ExtenderGroup* group);
    Plasma::ExtenderGroup*  group () const;
    bool                    isGroup () const;
    void                    setAutoExpireDelay (uint time);
    uint                    autoExpireDelay () const;
    bool                    isDetached () const;
    bool                    isCollapsed () const;
    void                    addAction (const QString& name, QAction* action);
    QAction*                action (const QString& name) const;
    void                    destroy ();
    void                    setCollapsed (bool collapsed);
    void                    returnToSource ();
    void                    showCloseButton ();
    void                    hideCloseButton ();

protected:
    void                    paint (QPainter* painter, const QStyleOptionGraphicsItem* option, QWidget* widget);
    void                    moveEvent (QGraphicsSceneMoveEvent* event);
    void                    resizeEvent (QGraphicsSceneResizeEvent* event);
    void                    mousePressEvent (QGraphicsSceneMouseEvent* event);
    void                    mouseDoubleClickEvent (QGraphicsSceneMouseEvent* event);
    void                    mouseMoveEvent (QGraphicsSceneMouseEvent* event);
    void                    mouseReleaseEvent (QGraphicsSceneMouseEvent* event);
    void                    hoverMoveEvent (QGraphicsSceneHoverEvent* event);
    void                    hoverLeaveEvent (QGraphicsSceneHoverEvent* event);
    bool                    sceneEventFilter (QGraphicsItem* watched, QEvent* event);
public:
    ~ExtenderItem ();
protected:
    QSizeF                  sizeHint (Qt::SizeHint which, const QSizeF& constraint) const;
public:
    void                    setGroup (Plasma::ExtenderGroup* group, const QPointF& pos);
signals:
    void                    destroyed (Plasma::ExtenderItem* item);
public:
    void                    setTransient (const bool transient);
    bool                    isTransient () const;
};
// ExtenderItem

};
// Plasma


