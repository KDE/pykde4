//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module kdeui  version KDE 4.0.2

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KActionSelector : QWidget
{
%TypeHeaderCode
#include <kactionselector.h>
%End


public:
    explicit                KActionSelector (QWidget* parent /TransferThis/ = 0);
    QListWidget*            availableListWidget () const;
    QListWidget*            selectedListWidget () const;

    enum MoveButton
    {
        ButtonAdd,
        ButtonRemove,
        ButtonUp,
        ButtonDown
    };


    enum InsertionPolicy
    {
        BelowCurrent,
        Sorted,
        AtTop,
        AtBottom
    };

    bool                    moveOnDoubleClick () const;
    void                    setMoveOnDoubleClick (bool enable);
    bool                    keyboardEnabled () const;
    void                    setKeyboardEnabled (bool enable);
    QString                 availableLabel () const;
    void                    setAvailableLabel (const QString& text);
    QString                 selectedLabel () const;
    void                    setSelectedLabel (const QString& text);
    KActionSelector::InsertionPolicy  availableInsertionPolicy () const;
    void                    setAvailableInsertionPolicy (KActionSelector::InsertionPolicy policy);
    KActionSelector::InsertionPolicy  selectedInsertionPolicy () const;
    void                    setSelectedInsertionPolicy (KActionSelector::InsertionPolicy policy);
    bool                    showUpDownButtons () const;
    void                    setShowUpDownButtons (bool show);
    void                    setButtonIcon (const QString& icon, KActionSelector::MoveButton button);
    void                    setButtonIconSet (const QIcon& iconset, KActionSelector::MoveButton button);
    void                    setButtonTooltip (const QString& tip, KActionSelector::MoveButton button);
    void                    setButtonWhatsThis (const QString& text, KActionSelector::MoveButton button);
    void                    setButtonsEnabled ();

signals:
    void                    added (QListWidgetItem* item);
    void                    removed (QListWidgetItem* item);
    void                    movedUp (QListWidgetItem* item);
    void                    movedDown (QListWidgetItem* item);

public:
    void                    polish ();

protected:
    void                    keyPressEvent (QKeyEvent*);
    bool                    eventFilter (QObject*, QEvent*);

private:
                            KActionSelector (const KActionSelector&);
};   // KActionSelector


