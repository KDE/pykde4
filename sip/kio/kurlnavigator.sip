//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KUrlNavigator : QWidget
{
%TypeHeaderCode
#include <kurlnavigator.h>
%End


public:
                         KUrlNavigator (KFilePlacesModel*, const KUrl&, QWidget* /TransferThis/);
    const KUrl&          url () const;
    KUrl                 uncommittedUrl () const;
    KUrl                 url (int) const;
    bool                 goBack ();
    bool                 goForward ();
    bool                 goUp ();
    void                 goHome ();
    void                 setHomeUrl (const QString&);
    void                 setUrlEditable (bool);
    bool                 isUrlEditable () const;
    void                 setActive (bool);
    bool                 isActive () const;
    int                  historySize () const;
    int                  historyIndex () const;
    QPoint               savedPosition () const;
    void                 setCustomProtocols (const QStringList&);
    QStringList          customProtocols () const;

public slots:
    void                 setUrl (const KUrl&);
    void                 requestActivation ();
    void                 savePosition (int, int);
    void                 setFocus ();

signals:
    void                 activated ();
    void                 urlChanged (const KUrl&);
    void                 historyChanged ();
    void                 urlsDropped (const KUrl::List&, const KUrl&);
    void                 returnPressed ();

protected:
    virtual void         keyReleaseEvent (QKeyEvent*);
    virtual void         mouseReleaseEvent (QMouseEvent*);
    virtual void         resizeEvent (QResizeEvent*);

private:
                         KUrlNavigator (const KUrlNavigator&) [()];

};  // class KUrlNavigator

