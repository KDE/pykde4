//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KActionCollection : QObject
{
%TypeHeaderCode
#include <kaction.h>
#include <kactioncollection.h>
%End


public:
                         KActionCollection (QObject* /TransferThis/, const KComponentData& = KComponentData ());
    static const QList<KActionCollection*>& allCollections ();
    void                 clear ();
    void                 setAssociatedWidget (QWidget*);
    void                 addAssociatedWidget (QWidget*);
    void                 removeAssociatedWidget (QWidget*);
    void                 clearAssociatedWidgets ();
    QList<QWidget*>      associatedWidgets () const;
    QString              configGroup () const;
    bool                 configIsGlobal () const;
    void                 setConfigGroup (const QString&);
    void                 setConfigGlobal (bool);
    void                 readSettings (KConfigGroup* = 0);
    void                 writeSettings (KConfigGroup* = 0, bool = 0, QAction* = 0) const;
    int                  count () const;
    bool                 isEmpty () const;
    QAction*             action (int) const;
    QAction*             action (const QString&) const;
    QList<QAction*>      actions () const;
    const QList<QAction*> actionsWithoutGroup () const;
    const QList<QActionGroup*> actionGroups () const;
    void                 setComponentData (const KComponentData&);
    KComponentData       componentData () const;
    const KXMLGUIClient* parentGUIClient () const;

signals:
    void                 inserted (QAction*);
    void                 removed (QAction*);
    void                 actionHighlighted (QAction*);
    void                 actionTriggered (QAction*);

protected:
//ig     virtual void         connectNotify (const char*);
    virtual void         slotActionTriggered ();
    virtual void         slotActionHighlighted ();

public:
    QAction*             addAction (const QString&, QAction*);
    void                 removeAction (QAction*);
    QAction*             takeAction (QAction*);
    QAction*             addAction (KStandardAction::StandardAction, const QObject* = 0, const char* = 0);
    QAction*             addAction (KStandardAction::StandardAction, const QString&, const QObject* = 0, const char* = 0);
    QAction*             addAction (const QString&, const QObject* = 0, const char* = 0);

private:
                         KActionCollection (const KXMLGUIClient* /TransferThis/);

};  // class KActionCollection

