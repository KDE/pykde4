//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeprint  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KMPrinter : KMObject
{
%TypeHeaderCode
#include <kmprinter.h>
%End


public:

    enum PrinterType
    {
        Printer, 
        Class, 
        Implicit, 
        Virtual, 
        Remote, 
        Invalid, 
        Special
    };


    enum PrinterState
    {
        Idle, 
        Stopped, 
        Processing, 
        Unknown, 
        Rejecting, 
        StateMask
    };


    enum PrinterCap
    {
        CapBW, 
        CapColor, 
        CapDuplex, 
        CapStaple, 
        CapCopies, 
        CapCollate, 
        CapPunch, 
        CapCover, 
        CapBind, 
        CapSort, 
        CapSmall, 
        CapMedium, 
        CapLarge, 
        CapVariable
    };

                         KMPrinter ();
                         KMPrinter (const KMPrinter&);
    void                 copy (const KMPrinter&);
    const QString&       name () const;
    void                 setName (const QString&);
    const QString&       printerName () const;
    void                 setPrinterName (const QString&);
    const QString&       instanceName () const;
    void                 setInstanceName (const QString&);
    int                  type () const;
    void                 setType (int);
    void                 addType (int);
    KMPrinter::PrinterState state (bool = 0) const;
    QString              stateString () const;
    void                 setState (KMPrinter::PrinterState);
    bool                 acceptJobs () const;
    void                 setAcceptJobs (bool);
    const QString&       device () const;
    QString              deviceProtocol () const;
    void                 setDevice (const QString&);
    const QStringList&   members () const;
    void                 setMembers (const QStringList&);
    void                 addMember (const QString&);
    const QString&       description () const;
    void                 setDescription (const QString&);
    const QString&       location () const;
    void                 setLocation (const QString&);
    const KUrl&          uri () const;
    void                 setUri (const KUrl&);
    const QString&       manufacturer () const;
    void                 setManufacturer (const QString&);
    const QString&       model () const;
    void                 setModel (const QString&);
    const QString&       driverInfo () const;
    void                 setDriverInfo (const QString&);
    int                  printerCap () const;
    void                 setPrinterCap (int);
    void                 addPrinterCap (int);
    bool                 isClass (bool = 1) const;
    bool                 isImplicit () const;
    bool                 isPrinter () const;
    bool                 isRemote () const;
    bool                 isLocal () const;
    bool                 isVirtual () const;
    bool                 isValid () const;
    bool                 isSpecial () const;
//ig     KMDBEntry*           dbEntry () const;
//ig     void                 setDbEntry (KMDBEntry*);
    QString              pixmap ();
    void                 setPixmap (const QString&);
    bool                 isHardDefault () const;
    void                 setHardDefault (bool);
    bool                 isSoftDefault () const;
    void                 setSoftDefault (bool);
    bool                 ownSoftDefault () const;
    void                 setOwnSoftDefault (bool);
    static int           compare (KMPrinter*, KMPrinter*);
    QString              option (const QString&) const;
    bool                 hasOption (const QString&) const;
    void                 setOption (const QString&, const QString&);
    void                 removeOption (const QString&);
    QMap<QString, QString> options () const;
    void                 setOptions (const QMap<QString, QString>&);
//ig     DrMain*              driver () const;
//ig     void                 setDriver (DrMain*);
//ig     DrMain*              takeDriver ();
    bool                 autoConfigure (KPrinter*, QWidget* /Transfer/ = 0);
    QString              defaultOption (const QString&) const;
    void                 setDefaultOption (const QString&, const QString&);
    QMap<QString, QString> defaultOptions () const;
    void                 setDefaultOptions (const QMap<QString, QString>&);
    QString              editedOption (const QString&) const;
    void                 setEditedOption (const QString&, const QString&);
    QMap<QString, QString> editedOptions () const;
    void                 setEditedOptions (const QMap<QString, QString>&);
    bool                 isEdited () const;
    void                 setEdited (bool);

protected:

};  // class KMPrinter


class KMPrinterList
{
%TypeHeaderCode
#include <kmprinter.h>
%End


public:
                         KMPrinterList ();
//ig     void                 inSort (KMPrinter*);

};  // class KMPrinterList

