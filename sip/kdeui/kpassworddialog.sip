//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KPasswordDialog : KDialog
{
%TypeHeaderCode
#include <kpassworddialog.h>
%End


public:

    enum KPasswordDialogFlag
    {
        NoFlags, 
        ShowKeepPassword, 
        ShowUsernameLine, 
        UsernameReadOnly
    };

    typedef QFlags<KPasswordDialog::KPasswordDialogFlag> KPasswordDialogFlags;

    enum ErrorType
    {
        UnknownError, 
        UsernameError, 
        PasswordError, 
        FatalError
    };

                         KPasswordDialog (QWidget* /TransferThis/ = 0, const KPasswordDialog::KPasswordDialogFlags& = 0, const KDialog::ButtonCodes = 0);
    void                 setPrompt (const QString&);
    QString              prompt () const;
    void                 setPixmap (const QPixmap&);
    QPixmap              pixmap () const;
    void                 addCommentLine (const QString&, const QString&);
    void                 showErrorMessage (const QString&, const KPasswordDialog::ErrorType = KPasswordDialog::PasswordError );
    QString              password () const;
    void                 setUsername (const QString&);
    QString              username () const;
    bool                 keepPassword () const;
    void                 setKeepPassword (bool);
    void                 setUsernameReadOnly (bool);
    void                 setPassword (const QString&);
    void                 setKnownLogins (const QMap<QString, QString>&);
    void                 accept ();

signals:
    void                 gotPassword (const QString&, bool);
    void                 gotUsernameAndPassword (const QString&, const QString&, bool);

protected:
    virtual bool         checkPassword ();

private:
                         KPasswordDialog (const KPasswordDialog&) [()];

};  // class KPasswordDialog

