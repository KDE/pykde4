// Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.


namespace Plasma
{

class RunnerManager : QObject
{
%TypeHeaderCode
#include <plasma/runnermanager.h>
%End


public:
    explicit                RunnerManager (QObject* parent /TransferThis/ = 0);
    explicit                RunnerManager (KConfigGroup& config, QObject* parent /TransferThis/ = 0);
    Plasma::AbstractRunner*  runner (const QString& name) const;
    Plasma::RunnerContext*  searchContext () const;
    QList<Plasma::QueryMatch>  matches () const;
    void                    run (const Plasma::QueryMatch& match);
    void                    run (const QString& id);
    QList<QAction*>         actionsForMatch (const Plasma::QueryMatch& match);
    QString                 query () const;
    void                    reloadConfiguration ();
    void                    launchQuery (const QString& term, const QString& runnerName);
    void                    launchQuery (const QString& term);
    bool                    execQuery (const QString& term, const QString& runnerName);
    bool                    execQuery (const QString& term);
    void                    reset ();

signals:
    void                    matchesChanged (const QList<Plasma::QueryMatch>& matches);
};   // RunnerManager

};   // Plasma


