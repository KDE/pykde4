//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KSelectAction : KAction
{
%TypeHeaderCode
#include <kselectaction.h>
%End


public:
    explicit                KSelectAction (QObject* parent /TransferThis/);
                            KSelectAction (const QString& text, QObject* parent /TransferThis/);
                            KSelectAction (const KIcon& icon, const QString& text, QObject* parent /TransferThis/);

    enum ToolBarMode
    {
        MenuMode,
        ComboBoxMode
    };

    KSelectAction::ToolBarMode  toolBarMode () const;
    void                    setToolBarMode (KSelectAction::ToolBarMode mode);
    QToolButton::ToolButtonPopupMode  toolButtonPopupMode () const;
    void                    setToolButtonPopupMode (QToolButton::ToolButtonPopupMode mode);
    QActionGroup*           selectableActionGroup () const;
    QAction*                currentAction () const;
    int                     currentItem () const;
    QString                 currentText () const;
    QList<QAction*>         actions () const;
    QAction*                action (int index) const;
    QAction*                action (const QString& text, Qt::CaseSensitivity cs = Qt::CaseSensitive) const;
    bool                    setCurrentAction (QAction* action);
    bool                    setCurrentItem (int index);
    bool                    setCurrentAction (const QString& text, Qt::CaseSensitivity cs = Qt::CaseSensitive);
    virtual void            addAction (QAction* action);
    KAction*                addAction (const QString& text);
    KAction*                addAction (const KIcon& icon, const QString& text);
    virtual QAction*        removeAction (QAction* action);
    void                    setItems (const QStringList& lst);
    QStringList             items () const;
    bool                    isEditable () const;
    void                    setEditable (bool);
    int                     comboWidth () const;
    void                    setComboWidth (int width);
    void                    setMaxComboViewCount (int n);
    void                    clear ();
    void                    removeAllActions ();
    void                    setMenuAccelsEnabled (bool b);
    bool                    menuAccelsEnabled () const;
    void                    changeItem (int index, const QString& text);

signals:
    void                    triggered (QAction* action);
    void                    triggered (int index);
    void                    triggered (const QString& text);

protected:
    virtual void            actionTriggered (QAction* action);
    void                    slotToggled (bool);
    virtual QWidget*        createWidget (QWidget* parent /Transfer/);
    virtual void            deleteWidget (QWidget* widget);
    virtual bool            eventFilter (QObject* watched, QEvent* event);
//ig                            KSelectAction (KSelectActionPrivate& dd, QObject* parent /TransferThis/);
public:
    ~KSelectAction ();
protected:
    virtual bool            event (QEvent* event);
};
// KSelectAction


