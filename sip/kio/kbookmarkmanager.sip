//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KBookmarkManager : QObject
{
%TypeHeaderCode
#include <kbookmarkmanager.h>
%End



private:
                         KBookmarkManager (const QString&, const QString&);
                         KBookmarkManager ();


public:
    void                 setUpdate (bool);
    bool                 saveAs (const QString&, bool = 1) const;
    bool                 updateAccessMetadata (const QString&);
    void                 updateFavicon (const QString&, const QString&);
    QString              path ();
    KBookmarkGroup       root () const;
    KBookmarkGroup       toolbar ();
    KBookmark            findByAddress (const QString&);
    void                 emitChanged ();
    void                 emitChanged (const KBookmarkGroup&);
    bool                 save (bool = 1) const;
    void                 emitConfigChanged ();
    void                 setEditorOptions (const QString&, bool);
    static KBookmarkManager* managerForFile (const QString&, const QString&);
    static KBookmarkManager* createTempManager ();
    static KBookmarkManager* userBookmarksManager ();
    QDomDocument         internalDocument () const;

public slots:
    void                 slotEditBookmarks ();
    void                 slotEditBookmarksAtAddress (const QString&);
    void                 notifyCompleteChange (const QString&);
//ig     void                 notifyChanged (const QString&, const QDBusMessage&);
    void                 notifyConfigChanged ();

signals:
    void                 bookmarkCompleteChange (QString);
    void                 bookmarksChanged (QString);
    void                 bookmarkConfigChanged ();
    void                 changed (const QString&, const QString&);
    void                 configChanged ();

protected:



public:



protected:



};  // class KBookmarkManager


class KBookmarkOwner
{
%TypeHeaderCode
#include <kbookmarkmanager.h>
%End


public:
    virtual QString      currentTitle () const;
    virtual QString      currentUrl () const;
    virtual bool         supportsTabs () const;
    virtual QList<QPair<QString, QString>> currentBookmarkList () const;

    enum BookmarkOption
    {
        ShowAddBookmark, 
        ShowEditBookmark
    };

    virtual bool         enableOption (KBookmarkOwner::BookmarkOption) const;
    virtual void         openBookmark (const KBookmark&, Qt::MouseButtons, Qt::KeyboardModifiers)  = 0;

    virtual void         openFolderinTabs (const KBookmarkGroup&);

//mt  undefined symbol: KBookmarkDialog* -- need mapped type?
//mt     virtual KBookmarkDialog* bookmarkDialog (KBookmarkManager*, QWidget* /Transfer/);


};  // class KBookmarkOwner

