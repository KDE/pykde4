//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KPassivePopup : QFrame
{
%TypeHeaderCode
#include <kpassivepopup.h>
%End


public:

    enum PopupStyle
    {
        Boxed, 
        Balloon, 
        CustomStyle
    };

                         KPassivePopup (QWidget* /TransferThis/ = 0, Qt::WFlags = 0);
                         KPassivePopup (WId /TransferThis/);
    void                 setView (QWidget*);
    void                 setView (const QString&, const QString& = QString::null );
    virtual void         setView (const QString&, const QString&, const QPixmap&);
    KVBox*               standardView (const QString&, const QString&, const QPixmap&, QWidget* /Transfer/ = 0);
    QWidget*             view () const;
    int                  timeout () const;
    virtual void         setAutoDelete (bool);
    bool                 autoDelete () const;
    QRect                defaultArea () const;
    QPoint               anchor () const;
    void                 setAnchor (const QPoint&);
    static KPassivePopup* message (const QString&, QWidget* /Transfer/);
    static KPassivePopup* message (const QString&, QSystemTrayIcon* /Transfer/);
    static KPassivePopup* message (const QString&, const QString&, QWidget* /Transfer/);
    static KPassivePopup* message (const QString&, const QString&, QSystemTrayIcon* /Transfer/);
    static KPassivePopup* message (const QString&, const QString&, const QPixmap&, QWidget* /Transfer/, int = -1);
    static KPassivePopup* message (const QString&, const QString&, const QPixmap&, QSystemTrayIcon* /Transfer/, int = -1);
    static KPassivePopup* message (const QString&, const QString&, const QPixmap&, WId /Transfer/, int = -1);
    static KPassivePopup* message (int, const QString&, QWidget* /Transfer/);
    static KPassivePopup* message (int, const QString&, QSystemTrayIcon* /Transfer/);
    static KPassivePopup* message (int, const QString&, const QString&, QSystemTrayIcon* /Transfer/);
    static KPassivePopup* message (int, const QString&, const QString&, QWidget* /Transfer/);
    static KPassivePopup* message (int, const QString&, const QString&, const QPixmap&, QWidget* /Transfer/, int = -1);
    static KPassivePopup* message (int, const QString&, const QString&, const QPixmap&, QSystemTrayIcon* /Transfer/, int = -1);
    static KPassivePopup* message (int, const QString&, const QString&, const QPixmap&, WId /Transfer/, int = -1);

public slots:
    void                 setTimeout (int);
    void                 setPopupStyle (int);
    void                 show ();
    void                 show (const QPoint&);
    virtual void         setVisible (bool);

signals:
    void                 clicked ();
    void                 clicked (const QPoint&);

protected:
    virtual void         positionSelf ();
    virtual void         hideEvent (QHideEvent*);
    void                 moveNear (const QRect&);
    QPoint               calculateNearbyPoint (const QRect&);
    virtual void         mouseReleaseEvent (QMouseEvent*);
    void                 updateMask ();
    virtual void         paintEvent (QPaintEvent*);

};  // class KPassivePopup

