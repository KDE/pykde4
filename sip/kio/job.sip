//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
#include <job.h>
%End

namespace KIO
{

enum LoadType
{
    Reload,
    NoReload
};

KIO::SimpleJob*         mkdir (const KUrl& url, int permissions = -1);
KIO::SimpleJob*         rmdir (const KUrl& url);
KIO::SimpleJob*         chmod (const KUrl& url, int permissions);
KIO::SimpleJob*         chown (const KUrl& url, const QString& owner, const QString& group);
KIO::SimpleJob*         setModificationTime (const KUrl& url, const QDateTime& mtime);
KIO::SimpleJob*         rename (const KUrl& src, const KUrl& dest, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::SimpleJob*         symlink (const QString& target, const KUrl& dest, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::SimpleJob*         special (const KUrl& url, const QByteArray& data, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::SimpleJob*         mount (bool ro, const QByteArray& fstype, const QString& dev, const QString& point, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::SimpleJob*         unmount (const QString& point, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::SimpleJob*         http_update_cache (const KUrl& url, bool no_cache, time_t expireDate);
KIO::StatJob*           stat (const KUrl& url, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::StatJob*           stat (const KUrl& url, KIO::StatJob::StatSide side, short details, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::StatJob*           stat (const KUrl& url, bool sideIsSource /Constrained/, short details, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::TransferJob*       get (const KUrl& url, KIO::LoadType reload = KIO::NoReload, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::FileJob*           open (const KUrl& url, QIODevice::OpenMode mode);
KIO::TransferJob*       put (const KUrl& url, int permissions, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::TransferJob*       http_post (const KUrl& url, const QByteArray& postData, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::StoredTransferJob*  storedGet (const KUrl& url, KIO::LoadType reload = KIO::NoReload, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::StoredTransferJob*  storedPut (const QByteArray& arr, const KUrl& url, int permissions, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::StoredTransferJob*  storedHttpPost (const QByteArray& arr, const KUrl& url, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::MultiGetJob*       multi_get (long id, const KUrl& url, const KIO::MetaData& metaData);
KIO::MimetypeJob*       mimetype (const KUrl& url, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::FileCopyJob*       file_copy (const KUrl& src, const KUrl& dest, int permissions = -1, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::FileCopyJob*       file_move (const KUrl& src, const KUrl& dest, int permissions = -1, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::SimpleJob*         file_delete (const KUrl& src, KIO::JobFlags flags = KIO::DefaultFlags);
KIO::ListJob*           listDir (const KUrl& url, KIO::JobFlags flags = KIO::DefaultFlags, bool includeHidden = 1);
KIO::ListJob*           listRecursive (const KUrl& url, KIO::JobFlags flags = KIO::DefaultFlags, bool includeHidden = 1);
};   // KIO



%ModuleHeaderCode
#include <job.h>
%End

