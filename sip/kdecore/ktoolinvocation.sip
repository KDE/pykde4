//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdecore  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KToolInvocation : QObject
{
%TypeHeaderCode
#include <ktoolinvocation.h>
%End


private:
                         KToolInvocation ();

public:
    static KToolInvocation* self ();

public slots:
    static void          invokeHelp (const QString& = QString (), const QString& = QString (), const QByteArray& = "");
    static void          invokeMailer (const QString&, const QString&, const QByteArray& = "");
    static void          invokeMailer (const KUrl&, const QByteArray& = "", bool = 0);
    static void          invokeMailer (const QString&, const QString&, const QString&, const QString&, const QString&, const QString& = QString (), const QStringList& = QStringList (), const QByteArray& = "");
    static void          invokeBrowser (const QString&, const QByteArray& = "");

public:
//ig     static OrgKdeKLauncherInterface* klauncher ();
    static int           startServiceByName (const QString&, const QString&, QString* = 0, QString* = 0, int* /Out/ = 0, const QByteArray& = "", bool = 0);
    static int           startServiceByName (const QString&, const QStringList& = QStringList (), QString* = 0, QString* = 0, int* /Out/ = 0, const QByteArray& = "", bool = 0);
    static int           startServiceByDesktopPath (const QString&, const QString&, QString* = 0, QString* = 0, int* /Out/ = 0, const QByteArray& = "", bool = 0);
    static int           startServiceByDesktopPath (const QString&, const QStringList& = QStringList (), QString* = 0, QString* = 0, int* /Out/ = 0, const QByteArray& = "", bool = 0);
    static int           startServiceByDesktopName (const QString&, const QString&, QString* = 0, QString* = 0, int* /Out/ = 0, const QByteArray& = "", bool = 0);
    static int           startServiceByDesktopName (const QString&, const QStringList& = QStringList (), QString* = 0, QString* = 0, int* /Out/ = 0, const QByteArray& = "", bool = 0);
    static int           kdeinitExec (const QString&, const QStringList& = QStringList (), QString* = 0, int* /Out/ = 0, const QByteArray& = "");
    static int           kdeinitExecWait (const QString&, const QStringList& = QStringList (), QString* = 0, int* /Out/ = 0, const QByteArray& = "");

signals:
    void                 kapplication_hook (QStringList&, QByteArray&);

};  // class KToolInvocation

