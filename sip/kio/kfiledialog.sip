//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KFileDialog : KDialog
{
%TypeHeaderCode
#include <kfiledialog.h>
%End


public:

    enum OperationMode
    {
        Other, 
        Opening, 
        Saving
    };

                         KFileDialog (const KUrl&, const QString&, QWidget* /TransferThis/, QWidget* = 0);
    KUrl                 selectedUrl () const;
    KUrl::List           selectedUrls () const;
    KUrl                 baseUrl () const;
    QString              selectedFile () const;
    QStringList          selectedFiles () const;
    void                 setUrl (const KUrl&, bool = 1);
    void                 setSelection (const QString&);
    void                 setOperationMode (KFileDialog::OperationMode);
    KFileDialog::OperationMode operationMode () const;
    void                 setKeepLocation (bool);
    bool                 keepsLocation () const;
    void                 setFilter (const QString&);
    QString              currentFilter () const;
    KMimeType::Ptr       currentFilterMimeType ();
    void                 setMimeFilter (const QStringList&, const QString& = QString ());
    QString              currentMimeFilter () const;
    void                 clearFilter ();
    void                 setPreviewWidget (const KPreviewWidgetBase*);

    virtual QSize        sizeHint () const;

    static QString       getOpenFileName (const KUrl& = KUrl (), const QString& = QString (), QWidget* /Transfer/ = 0, const QString& = QString ());
    static QString       getOpenFileNameWId (const KUrl&, const QString&, WId, const QString&);
    static QStringList   getOpenFileNames (const KUrl& = KUrl (), const QString& = QString (), QWidget* /Transfer/ = 0, const QString& = QString ());
    static KUrl          getOpenUrl (const KUrl& = KUrl (), const QString& = QString (), QWidget* /Transfer/ = 0, const QString& = QString ());
    static KUrl::List    getOpenUrls (const KUrl& = KUrl (), const QString& = QString (), QWidget* /Transfer/ = 0, const QString& = QString ());
    static QString       getSaveFileName (const KUrl& = KUrl (), const QString& = QString (), QWidget* /Transfer/ = 0, const QString& = QString ());
    static QString       getSaveFileNameWId (const KUrl&, const QString&, WId, const QString&);
    static KUrl          getSaveUrl (const KUrl& = KUrl (), const QString& = QString (), QWidget* /Transfer/ = 0, const QString& = QString ());
    static QString       getExistingDirectory (const KUrl& = KUrl (), QWidget* /Transfer/ = 0, const QString& = QString ());
    static KUrl          getExistingDirectoryUrl (const KUrl& = KUrl (), QWidget* /Transfer/ = 0, const QString& = QString ());
    static KUrl          getImageOpenUrl (const KUrl& = KUrl (), QWidget* /Transfer/ = 0, const QString& = QString ());
    void                 setMode (KFile::Modes);
    KFile::Modes         mode () const;
    void                 setLocationLabel (const QString&);
    KAbstractFileWidget* fileWidget ();
    KToolBar*            toolBar () const;
    KPushButton*         okButton () const;
    KPushButton*         cancelButton () const;
    KUrlComboBox*        locationEdit () const;
    KFileFilterCombo*    filterWidget () const;
    KActionCollection*   actionCollection () const;
    static KUrl          getStartUrl (const KUrl&, QString&);
    static void          setStartDir (const KUrl&);

signals:
    void                 fileSelected (const QString&);
    void                 fileHighlighted (const QString&);
    void                 selectionChanged ();
    void                 filterChanged (const QString&);

protected:
    virtual void         keyPressEvent (QKeyEvent*);

protected slots:
    virtual void         slotOk ();
    virtual void         accept ();
    virtual void         slotCancel ();

private:
                         KFileDialog (const KFileDialog&);

};  // class KFileDialog

