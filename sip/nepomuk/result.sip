// Copyright 2010 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Nepomuk
{
namespace Query
{
class Result
{
%TypeHeaderCode
#include <result.h>
%End

public:
                            Result ();
                            Result (const Nepomuk::Resource& resource, double score = 0.0);
                            Result (const Nepomuk::Query::Result&);
    ~Result ();
    double                  score () const;
    Nepomuk::Resource       resource () const;
    void                    setScore (double score);
    void                    addRequestProperty (const Nepomuk::Types::Property& property, const Soprano::Node& value);
    QHash<Types::Property,Soprano::Node>  requestProperties () const;
    Soprano::Node           operator [] (const Nepomuk::Types::Property& property) const;
    Soprano::Node           requestProperty (const Nepomuk::Types::Property& property) const;
    bool                    operator == (const Nepomuk::Query::Result&) const;
};
};
};
