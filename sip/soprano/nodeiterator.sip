// Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Soprano
{
class NodeIterator
{
%TypeHeaderCode
#include <soprano/nodeiterator.h>
%End

public:
                            NodeIterator ();
//ig                            NodeIterator (IteratorBackend<Soprano::Node>* sti);
                            NodeIterator (const Soprano::NodeIterator& sti);
    virtual ~NodeIterator ();
    QList<Soprano::Node>    allNodes ();
// iterator template methods.
//force
    void                    close ();
    bool                    next ();
    Soprano::Node           current () const;
    bool                    isValid () const;
    QList<Soprano::Node>    allElements ();
//end
%ConvertToSubClassCode
    // CTSCC for subclasses of 'NodeIterator'
    sipType = NULL;

    if (dynamic_cast<Soprano::Client::DBusNodeIterator*>(sipCpp))
        sipType = sipType_Soprano_Client_DBusNodeIterator;
    else if (dynamic_cast<Soprano::Util::SimpleNodeIterator*>(sipCpp))
        sipType = sipType_Soprano_Util_SimpleNodeIterator;
%End
};
};
%ModuleHeaderCode
//ctscc
#include <soprano/dbusnodeiterator.h>
#include <soprano/nodeiterator.h>
#include <soprano/simplenodeiterator.h>
%End
