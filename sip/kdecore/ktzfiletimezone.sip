//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz and/or Phil Thompson
//     may also apply


//                 Generated by preSip
//            module kdecore  version KDE 3.92.0

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

class KTzfileTimeZone : KTimeZone
{
%TypeHeaderCode
#include <ktzfiletimezone.h>
%End


public:
                            KTzfileTimeZone (KTzfileTimeZoneSource* source, const QString& name, const QString& countryCode = QString(), float latitude = KTimeZone::UNKNOWN, float longitude = KTimeZone::UNKNOWN, const QString& comment = QString());




    ~KTzfileTimeZone ();
};
// class KTzfileTimeZone



class KTzfileTimeZoneBackend : KTimeZoneBackend
{
%TypeHeaderCode
#include <ktzfiletimezone.h>
%End

public:
                            KTzfileTimeZoneBackend (KTzfileTimeZoneSource* source, const QString& name, const QString& countryCode, float latitude, float longitude, const QString& comment);
    virtual KTimeZoneBackend*  clone () const;
    virtual bool            hasTransitions (const KTimeZone* caller) const;

    ~KTzfileTimeZoneBackend ();
    virtual QByteArray      type () const;
};
// class KTzfileTimeZoneBackend



class KTzfileTimeZoneSource : KTimeZoneSource
{
%TypeHeaderCode
#include <ktzfiletimezone.h>
%End


public:
                            KTzfileTimeZoneSource (const QString& location);

    virtual KTimeZoneData*  parse (const KTimeZone& zone) const;





    ~KTzfileTimeZoneSource ();
    QString                 location () const;
};
// class KTzfileTimeZoneSource


//class KTzfileTimeZoneData : KTimeZoneData
//{
//%TypeHeaderCode
//#include <ktzfiletimezone.h>
//%End

//public:
//                         KTzfileTimeZoneData ();
//                         KTzfileTimeZoneData (const KTzfileTimeZoneData&);
//    virtual bool         hasTransitions () const;

//};  // class KTzfileTimeZoneData

