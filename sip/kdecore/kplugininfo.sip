//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module kdecore  version KDE 4.0.2

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KPluginInfo
{
%TypeHeaderCode
#include <kplugininfo.h>
%End


public:
    typedef QList<KPluginInfo> List;

    explicit                KPluginInfo (const QString& filename, const char* resource = 0);
    explicit                KPluginInfo (const KService::Ptr service);
                            KPluginInfo ();
    static KPluginInfo::List  fromServices (const KService::List& services, const KConfigGroup& config = KConfigGroup());
    static KPluginInfo::List  fromFiles (const QStringList& files, const KConfigGroup& config = KConfigGroup());
    static KPluginInfo::List  fromKPartsInstanceName (const QString& componentName, const KConfigGroup& config = KConfigGroup());
    bool                    isHidden () const;
    void                    setPluginEnabled (bool enabled);
    bool                    isPluginEnabled () const;
    bool                    isPluginEnabledByDefault () const;
    QVariant                property (const QString& key) const;
    QString                 name () const;
    QString                 comment () const;
    QString                 icon () const;
    QString                 entryPath () const;
    QString                 author () const;
    QString                 email () const;
    QString                 category () const;
    QString                 pluginName () const;
    QString                 version () const;
    QString                 website () const;
    QString                 license () const;
    QStringList             dependencies () const;
    KService::Ptr           service () const;
    QList<KService::Ptr>    kcmServices () const;
    void                    setConfig (const KConfigGroup& config);
    KConfigGroup            config () const;
    void                    save (KConfigGroup config = KConfigGroup());
    void                    load (const KConfigGroup& config = KConfigGroup());
    void                    defaults ();
    bool                    isValid () const;
                            KPluginInfo (const KPluginInfo& copy);
    bool                    operator == (const KPluginInfo& rhs) const;
    bool                    operator != (const KPluginInfo& rhs) const;
    bool                    operator < (const KPluginInfo& rhs) const;
    bool                    operator > (const KPluginInfo& rhs) const;
};   // KPluginInfo

uint                    qHash (const KPluginInfo&);
%ModuleHeaderCode
#include <kplugininfo.h>
%End

%ModuleHeaderCode
#include <kplugininfo.h>
%End


