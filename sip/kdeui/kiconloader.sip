//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
#include <kiconloader.h>
%End


class KIconLoader : QObject
{
%TypeHeaderCode
#include <kiconloader.h>
%End


public:

    enum Context
    {
        Any, 
        Action, 
        Application, 
        Device, 
        FileSystem, 
        MimeType, 
        Animation, 
        Category, 
        Emblem, 
        Emote, 
        International, 
        Place, 
        StatusIcon
    };


    enum Type
    {
        Fixed, 
        Scalable, 
        Threshold
    };


    enum MatchType
    {
        MatchExact, 
        MatchBest
    };


    enum Group
    {
        NoGroup, 
        Desktop, 
        FirstGroup, 
        Toolbar, 
        MainToolbar, 
        Small, 
        Panel, 
        Dialog, 
        LastGroup, 
        User
    };


    enum StdSizes
    {
        SizeSmall, 
        SizeSmallMedium, 
        SizeMedium, 
        SizeLarge, 
        SizeHuge, 
        SizeEnormous
    };


    enum States
    {
        DefaultState, 
        ActiveState, 
        DisabledState, 
        LastState
    };

                         KIconLoader (const QString& = QString (), KStandardDirs* = 0, QObject* /TransferThis/ = 0);
                         KIconLoader (const KComponentData&, QObject* /TransferThis/ = 0);
    static KIconLoader*  global ()  /PyName=global_/;
    void                 addAppDir (const QString&);
    QPixmap              loadIcon (const QString&, KIconLoader::Group, int = 0, int = KIconLoader::DefaultState , const QStringList& = QStringList (), QString* = 0, bool = 0) const;
    QPixmap              loadMimeTypeIcon (const QString&, KIconLoader::Group, int = 0, int = KIconLoader::DefaultState , const QStringList& = QStringList (), QString* = 0) const;
//ig     QIcon                loadIconSet (const QString&, KIconLoader::Group, int = 0, bool = 0);
    QString              iconPath (const QString&, int, bool = 0) const;
//ig     QMovie*              loadMovie (const QString&, KIconLoader::Group, int = 0, QObject* /Transfer/ = 0) const;
//ig     QString              moviePath (const QString&, KIconLoader::Group, int = 0) const;
//ig     QStringList          loadAnimated (const QString&, KIconLoader::Group, int = 0) const;
//ig     QStringList          queryIcons (int, KIconLoader::Context = KIconLoader::Any) const;
//ig     QStringList          queryIconsByContext (int, KIconLoader::Context = KIconLoader::Any) const;
//ig     bool                 hasContext (KIconLoader::Context) const;
    QStringList          queryIconsByDir (const QString&) const;
//ig     int                  currentSize (KIconLoader::Group) const;
//ig    KIconTheme*          theme () const;
    KIconEffect*         iconEffect () const;
    void                 reconfigure (const QString&, KStandardDirs*);
    static QPixmap       unknown ();
//ig     bool                 alphaBlending (KIconLoader::Group) const;
    void                 addExtraDesktopThemes ();
    bool                 extraDesktopThemesAdded () const;

public slots:
    void                 newIconLoader ();

};  // class KIconLoader

QPixmap              DesktopIcon (const QString&, int = 0, int = KIconLoader::DefaultState , const QStringList& = QStringList ());
QIcon                DesktopIconSet (const QString&, int = 0);
QPixmap              BarIcon (const QString&, int = 0, int = KIconLoader::DefaultState , const QStringList& = QStringList ());
QIcon                BarIconSet (const QString&, int = 0);
QPixmap              SmallIcon (const QString&, int = 0, int = KIconLoader::DefaultState , const QStringList& = QStringList ());
QIcon                SmallIconSet (const QString&, int = 0);
QPixmap              MainBarIcon (const QString&, int = 0, int = KIconLoader::DefaultState , const QStringList& = QStringList ());
QIcon                MainBarIconSet (const QString&, int = 0);
QPixmap              UserIcon (const QString&, int = KIconLoader::DefaultState , const QStringList& = QStringList ());
QIcon                UserIconSet (const QString&);
//ig int                  IconSize (KIconLoader::Group);


