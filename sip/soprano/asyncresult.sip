// Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Soprano
{
namespace Util
{

class AsyncResult : QObject, Soprano::Error::ErrorCache
{
%TypeHeaderCode
#include <soprano/asyncresult.h>
%End

signals:
    void                    resultReady (Soprano::Util::AsyncResult*);

public:
    static Soprano::Util::AsyncResult*  createResult ();
    QVariant                value () const;
    Soprano::Error::ErrorCode  errorCode () const;
    Soprano::StatementIterator  statementIterator () const;
    Soprano::NodeIterator   nodeIterator () const;
    Soprano::QueryResultIterator  queryResultIterator () const;
    Soprano::Node           node () const;
    void                    setResult (const QVariant& result, const Soprano::Error::Error& error);

private:
                            AsyncResult ();
};   // AsyncResult

};   // Util

};   // Soprano


