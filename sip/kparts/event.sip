//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


%ModuleHeaderCode
//ctscc
#include <kparts/browserextension.h>
#include <kparts/event.h>
%End

namespace KParts
{

class Event : QEvent
{
%TypeHeaderCode
#include <kparts/event.h>
%End


public:
                            Event (const char* eventName);
    virtual const char*     eventName () const;
    static bool             test (const QEvent* event);
    static bool             test (const QEvent* event, const char* name);

private:
                            Event (const KParts::Event& other);

public:

//  Subclasses of QEvent

%ConvertToSubClassCode

    sipClass = NULL;

    if (dynamic_cast<KParts::Event*>(sipCpp))
        {
            sipClass = sipClass_KParts_Event;
            if (dynamic_cast<KParts::GUIActivateEvent*>(sipCpp))
                sipClass = sipClass_KParts_GUIActivateEvent;
            else if (dynamic_cast<KParts::OpenUrlEvent*>(sipCpp))
                sipClass = sipClass_KParts_OpenUrlEvent;
            else if (dynamic_cast<KParts::PartActivateEvent*>(sipCpp))
                sipClass = sipClass_KParts_PartActivateEvent;
            else if (dynamic_cast<KParts::PartSelectEvent*>(sipCpp))
                sipClass = sipClass_KParts_PartSelectEvent;
        }
%End

};   // Event


class GUIActivateEvent : KParts::Event
{
%TypeHeaderCode
#include <kparts/event.h>
%End


public:
                            GUIActivateEvent (bool activated);
    bool                    activated () const;
    static bool             test (const QEvent* event);

private:
                            GUIActivateEvent (const KParts::GUIActivateEvent& other);
};   // GUIActivateEvent


class PartActivateEvent : KParts::Event
{
%TypeHeaderCode
#include <kparts/event.h>
%End


public:
                            PartActivateEvent (bool activated, KParts::Part* part, QWidget* widget);
    bool                    activated () const;
    KParts::Part*           part () const;
    QWidget*                widget () const;
    static bool             test (const QEvent* event);

private:
                            PartActivateEvent (const KParts::PartActivateEvent& other);
};   // PartActivateEvent


class PartSelectEvent : KParts::Event
{
%TypeHeaderCode
#include <kparts/event.h>
%End


public:
                            PartSelectEvent (bool selected, KParts::Part* part, QWidget* widget);
    bool                    selected () const;
    KParts::Part*           part () const;
    QWidget*                widget () const;
    static bool             test (const QEvent* event);

private:
                            PartSelectEvent (const KParts::PartSelectEvent& other);
};   // PartSelectEvent

};   // KParts




