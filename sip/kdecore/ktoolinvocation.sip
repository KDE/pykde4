//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.



class KToolInvocation : QObject
{
%TypeHeaderCode
#include <ktoolinvocation.h>
%End

                            KToolInvocation ();

public:
    static KToolInvocation*  self ();
    static void             invokeHelp (const QString& anchor = QString(), const QString& appname = QString(), const QByteArray& startup_id = QByteArray());
    static void             invokeMailer (const QString& address, const QString& subject, const QByteArray& startup_id = QByteArray());
    static void             invokeMailer (const KUrl& mailtoURL, const QByteArray& startup_id = QByteArray(), bool allowAttachments = 0);
    static void             invokeMailer (const QString& to, const QString& cc, const QString& bcc, const QString& subject, const QString& body, const QString& messageFile = QString(), const QStringList& attachURLs = QStringList(), const QByteArray& startup_id = QByteArray());
    static void             invokeBrowser (const QString& url, const QByteArray& startup_id = QByteArray());
    static void             invokeTerminal (const QString& command, const QString& workdir = QString(), const QByteArray& startup_id = "");
//ig    static OrgKdeKLauncherInterface*  klauncher ();
    static int              startServiceByName (const QString& _name, const QString& URL, QString* error = 0, QString* serviceName = 0, int* pid /Out/ = 0, const QByteArray& startup_id = QByteArray(), bool noWait = 0);
    static int              startServiceByName (const QString& _name, const QStringList& URLs = QStringList(), QString* error = 0, QString* serviceName = 0, int* pid /Out/ = 0, const QByteArray& startup_id = QByteArray(), bool noWait = 0);
    static int              startServiceByDesktopPath (const QString& _name, const QString& URL, QString* error = 0, QString* serviceName = 0, int* pid /Out/ = 0, const QByteArray& startup_id = QByteArray(), bool noWait = 0);
    static int              startServiceByDesktopPath (const QString& _name, const QStringList& URLs = QStringList(), QString* error = 0, QString* serviceName = 0, int* pid /Out/ = 0, const QByteArray& startup_id = QByteArray(), bool noWait = 0);
    static int              startServiceByDesktopName (const QString& _name, const QString& URL, QString* error = 0, QString* serviceName = 0, int* pid /Out/ = 0, const QByteArray& startup_id = QByteArray(), bool noWait = 0);
    static int              startServiceByDesktopName (const QString& _name, const QStringList& URLs = QStringList(), QString* error = 0, QString* serviceName = 0, int* pid /Out/ = 0, const QByteArray& startup_id = QByteArray(), bool noWait = 0);
    static int              kdeinitExec (const QString& name, const QStringList& args = QStringList(), QString* error = 0, int* pid /Out/ = 0, const QByteArray& startup_id = QByteArray());
    static int              kdeinitExecWait (const QString& name, const QStringList& args = QStringList(), QString* error = 0, int* pid /Out/ = 0, const QByteArray& startup_id = QByteArray());

signals:
    void                    kapplication_hook (QStringList& env, QByteArray& startup_id);

public:
//ig    static void             invokeTerminal (const QString& command, const QString& workdir = QString(), const QByteArray& startup_id = "");
    ~KToolInvocation ();
};
// KToolInvocation


