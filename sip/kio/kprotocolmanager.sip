//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KProtocolManager
{
%TypeHeaderCode
#include <kprotocolmanager.h>
%End


public:
    static QString       defaultUserAgent ();
    static QString       defaultUserAgent (const QString&);
    static QString       userAgentForHost (const QString&);
    static int           readTimeout ();
    static int           connectTimeout ();
    static int           proxyConnectTimeout ();
    static int           responseTimeout ();
    static bool          useProxy ();
    static bool          useReverseProxy ();

    enum ProxyType
    {
        NoProxy, 
        ManualProxy, 
        PACProxy, 
        WPADProxy, 
        EnvVarProxy
    };

    static KProtocolManager::ProxyType proxyType ();

    enum ProxyAuthMode
    {
        Prompt, 
        Automatic
    };

    static KProtocolManager::ProxyAuthMode proxyAuthMode ();
    static QString       noProxyFor ();
    static QString       proxyFor (const QString&);
    static QString       proxyForUrl (const KUrl&);
    static void          badProxy (const QString&);
    static QString       proxyConfigScript ();
    static bool          useCache ();
    static int           maxCacheAge ();
    static int           maxCacheSize ();
    static QString       cacheDir ();
    static KIO::CacheControl cacheControl ();
    static bool          autoResume ();
    static bool          markPartial ();
    static int           minimumKeepSize ();
    static bool          persistentProxyConnection ();
    static bool          persistentConnections ();
    static bool          supportsListing (const KUrl&);
    static bool          supportsReading (const KUrl&);
    static bool          supportsWriting (const KUrl&);
    static bool          supportsMakeDir (const KUrl&);
    static bool          supportsDeleting (const KUrl&);
    static bool          supportsLinking (const KUrl&);
    static bool          supportsMoving (const KUrl&);
    static bool          supportsOpening (const KUrl&);
    static bool          canCopyFromFile (const KUrl&);
    static bool          canCopyToFile (const KUrl&);
    static bool          canRenameFromFile (const KUrl&);
    static bool          canRenameToFile (const KUrl&);
    static bool          canDeleteRecursive (const KUrl&);
    static KProtocolInfo::FileNameUsedForCopying fileNameUsedForCopying (const KUrl&);
    static QString       defaultMimetype (const KUrl&);
    static KProtocolInfo::Type inputType (const KUrl&);
    static KProtocolInfo::Type outputType (const KUrl&);
    static QStringList   listing (const KUrl&);
    static bool          isSourceProtocol (const KUrl&);
    static void          reparseConfiguration ();
    static QString       slaveProtocol (const KUrl&, QString&);
    static QString       acceptLanguagesHeader ();

};  // class KProtocolManager

