//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
#include <kdirmodel.h>
%End


class KDirModel : QAbstractItemModel
{
%TypeHeaderCode
#include <kdirmodel.h>
%End


public:
                         KDirModel (QObject* /TransferThis/ = 0);
    void                 setDirLister (KDirLister*);
    KDirLister*          dirLister () const;
    KFileItem            itemForIndex (const QModelIndex&) const;
    QModelIndex          indexForItem (const KFileItem*) const;
    QModelIndex          indexForItem (const KFileItem&) const;
    QModelIndex          indexForUrl (const KUrl&) const;
    void                 expandToUrl (const KUrl&);
    void                 itemChanged (const QModelIndex&);

    enum ModelColumns
    {
        Name, 
        Size, 
        ModifiedTime, 
        Permissions, 
        Owner, 
        Group, 
        Type, 
        ColumnCount
    };


    enum 
    {
        ChildCountUnknown
    };


    enum AdditionalRoles
    {
        FileItemRole, 
        ChildCountRole
    };


    enum DropsAllowedFlag
    {
        NoDrops, 
        DropOnDirectory, 
        DropOnAnyFile, 
        DropOnLocalExecutable
    };

    typedef QFlags<KDirModel::DropsAllowedFlag> DropsAllowed;
    void                 setDropsAllowed (KDirModel::DropsAllowed);
    virtual bool         canFetchMore (const QModelIndex& /Transfer/) const;
    virtual int          columnCount (const QModelIndex& /Transfer/ = QModelIndex ()) const;
    virtual QVariant     data (const QModelIndex&, int = Qt::DisplayRole ) const;
    virtual bool         dropMimeData (const QMimeData*, Qt::DropAction, int, int, const QModelIndex& /Transfer/);
    virtual void         fetchMore (const QModelIndex& /Transfer/);
    virtual Qt::ItemFlags flags (const QModelIndex&) const;
    virtual bool         hasChildren (const QModelIndex& /Transfer/ = QModelIndex ()) const;
    virtual QVariant     headerData (int, Qt::Orientation, int = Qt::DisplayRole ) const;
    virtual QModelIndex  index (int, int, const QModelIndex& /Transfer/ = QModelIndex ()) const;
    virtual QMimeData*   mimeData (const QModelIndexList&) const;
    virtual QStringList  mimeTypes () const;
    virtual QModelIndex  parent (const QModelIndex&) const;
    virtual int          rowCount (const QModelIndex& /Transfer/ = QModelIndex ()) const;
    virtual bool         setData (const QModelIndex&, const QVariant&, int = Qt::EditRole );
    virtual void         sort (int, Qt::SortOrder = Qt::AscendingOrder );

signals:
    void                 expand (const QModelIndex&);

};  // class KDirModel

