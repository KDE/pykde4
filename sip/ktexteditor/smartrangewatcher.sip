// Copyright 2011 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace KTextEditor
{
class SmartRangeWatcher
{
%TypeHeaderCode
#include <ktexteditor/smartrangewatcher.h>
%End

public:
                            SmartRangeWatcher ();
    virtual ~SmartRangeWatcher ();
    bool                    wantsDirectChanges () const;
    void                    setWantsDirectChanges (bool wantsDirectChanges);
    virtual void            rangePositionChanged (KTextEditor::SmartRange* range);
    virtual void            rangeContentsChanged (KTextEditor::SmartRange* range);
    virtual void            rangeContentsChanged (KTextEditor::SmartRange* range, KTextEditor::SmartRange* mostSpecificChild);
    virtual void            mouseEnteredRange (KTextEditor::SmartRange* range, KTextEditor::View* view);
    virtual void            mouseExitedRange (KTextEditor::SmartRange* range, KTextEditor::View* view);
    virtual void            caretEnteredRange (KTextEditor::SmartRange* range, KTextEditor::View* view);
    virtual void            caretExitedRange (KTextEditor::SmartRange* range, KTextEditor::View* view);
    virtual void            rangeEliminated (KTextEditor::SmartRange* range);
    virtual void            rangeDeleted (KTextEditor::SmartRange* range);
    virtual void            parentRangeChanged (KTextEditor::SmartRange* range, KTextEditor::SmartRange* newParent, KTextEditor::SmartRange* oldParent);
    virtual void            childRangeInserted (KTextEditor::SmartRange* range, KTextEditor::SmartRange* child);
    virtual void            childRangeRemoved (KTextEditor::SmartRange* range, KTextEditor::SmartRange* child);
    virtual void            rangeAttributeChanged (KTextEditor::SmartRange* range, KTextEditor::Attribute::Ptr currentAttribute, KTextEditor::Attribute::Ptr previousAttribute);
};
};
