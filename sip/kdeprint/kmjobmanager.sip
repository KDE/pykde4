//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeprint  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
//ctscc
#include <kmjobmanager.h>
#include <kmmanager.h>
#include <kprintaction.h>
#include <kprintdialog.h>
#include <kprintdialogpage.h>
%End


class KMJobManager : QObject
{
%TypeHeaderCode
#include <kmjobmanager.h>
%End


public:

    enum JobType
    {
        ActiveJobs, 
        CompletedJobs
    };


    class JobFilter
    {

    public:
                             JobFilter ();
//ig         int                  m_type[2];
        bool                 m_isspecial;

    };  // class JobFilter


public:
                         KMJobManager (QObject* /TransferThis/ = 0);
    static KMJobManager* self ();
    void                 addPrinter (const QString&, KMJobManager::JobType = ActiveJobs , bool = 0);
    void                 removePrinter (const QString&, KMJobManager::JobType = ActiveJobs );
    void                 clearFilter ();
    QHash<QString, KMJobManager::JobFilter*>* filter ();
    int                  limit ();
    void                 setLimit (int);
    KMJob*               findJob (const QString&);
    bool                 sendCommand (const QString&, int, const QString& = QString::null );
    bool                 sendCommand (const QList<KMJob*>&, int, const QString& = QString ());
    const QList<KMJob*>& jobList (bool = 1);
    void                 addJob (KMJob*);
//ig     KMThreadJob*         threadJob ();
    virtual int          actions ();
    virtual QList<KAction*> createPluginActions (KActionCollection*);
    virtual void         validatePluginActions (KActionCollection*, const QList<KMJob*>&);
    virtual bool         doPluginAction (int, const QList<KMJob*>&);

protected:
    void                 discardAllJobs ();
    void                 removeDiscardedJobs ();

protected:
    virtual bool         listJobs (const QString&, KMJobManager::JobType, int = 0);
    virtual bool         sendCommandSystemJob (const QList<KMJob*>&, int, const QString& = QString ());
    bool                 sendCommandThreadJob (const QList<KMJob*>&, int, const QString& = QString ());

protected:

// Subclasses for QObject

public:
%ConvertToSubClassCode

    if (dynamic_cast<KMJobManager*>(sipCpp))
        sipClass = sipClass_KMJobManager;
    else if (dynamic_cast<KMManager*>(sipCpp))
        sipClass = sipClass_KMManager;
    else if (dynamic_cast<KPrintAction*>(sipCpp))
        sipClass = sipClass_KPrintAction;
    else if (dynamic_cast<KPrintDialog*>(sipCpp))
        sipClass = sipClass_KPrintDialog;
    else if (dynamic_cast<KPrintDialogPage*>(sipCpp))
        sipClass = sipClass_KPrintDialogPage;
    else
        sipClass = NULL;
%End


};  // class KMJobManager

