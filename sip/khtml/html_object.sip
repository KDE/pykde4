//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLAppletElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_object.h>
%End


public:
                            HTMLAppletElement ();
                            HTMLAppletElement (const DOM::HTMLAppletElement& other);
                            HTMLAppletElement (const DOM::Node& other);

protected:
//ig                        HTMLAppletElement (HTMLAppletElementImpl* impl);

public:
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    DOM::DOMString          alt () const;
    void                    setAlt (const DOM::DOMString&);
    DOM::DOMString          archive () const;
    void                    setArchive (const DOM::DOMString&);
    DOM::DOMString          code () const;
    void                    setCode (const DOM::DOMString&);
    DOM::DOMString          codeBase () const;
    void                    setCodeBase (const DOM::DOMString& value);
    DOM::DOMString          height () const;
    void                    setHeight (const DOM::DOMString&);
    long                    getHspace () const;
    void                    setHspace (long);
    DOM::DOMString          hspace () const;
    void                    setHspace (const DOM::DOMString& value);
    DOM::DOMString          name () const;
    void                    setName (const DOM::DOMString&);
    DOM::DOMString          object () const;
    void                    setObject (const DOM::DOMString&);
    long                    getVspace () const;
    void                    setVspace (long);
    DOM::DOMString          vspace () const;
    void                    setVspace (const DOM::DOMString&);
    DOM::DOMString          width () const;
    void                    setWidth (const DOM::DOMString&);
};   // HTMLAppletElement


class HTMLObjectElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_object.h>
%End


public:
                            HTMLObjectElement ();
                            HTMLObjectElement (const DOM::HTMLObjectElement& other);
                            HTMLObjectElement (const DOM::Node& other);

protected:
//ig                        HTMLObjectElement (HTMLObjectElementImpl* impl);

public:
    DOM::HTMLFormElement    form () const;
    DOM::DOMString          code () const;
    void                    setCode (const DOM::DOMString&);
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    DOM::DOMString          archive () const;
    void                    setArchive (const DOM::DOMString&);
    DOM::DOMString          border () const;
    void                    setBorder (const DOM::DOMString&);
    DOM::DOMString          codeBase () const;
    void                    setCodeBase (const DOM::DOMString&);
    DOM::DOMString          codeType () const;
    void                    setCodeType (const DOM::DOMString&);
    DOM::DOMString          data () const;
    void                    setData (const DOM::DOMString&);
    bool                    declare () const;
    void                    setDeclare (bool);
    DOM::DOMString          height () const;
    void                    setHeight (const DOM::DOMString&);
    long                    getHspace () const;
    void                    setHspace (long);
    DOM::DOMString          hspace () const;
    void                    setHspace (const DOM::DOMString&);
    DOM::DOMString          name () const;
    void                    setName (const DOM::DOMString&);
    DOM::DOMString          standby () const;
    void                    setStandby (const DOM::DOMString&);
    long                    tabIndex () const;
    void                    setTabIndex (long);
    DOM::DOMString          type () const;
    void                    setType (const DOM::DOMString&);
    DOM::DOMString          useMap () const;
    void                    setUseMap (const DOM::DOMString&);
    long                    getVspace () const;
    void                    setVspace (long);
    DOM::DOMString          vspace () const;
    void                    setVspace (const DOM::DOMString&);
    DOM::DOMString          width () const;
    void                    setWidth (const DOM::DOMString&);
    DOM::Document           contentDocument () const;
};   // HTMLObjectElement


class HTMLParamElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_object.h>
%End


public:
                            HTMLParamElement ();
                            HTMLParamElement (const DOM::HTMLParamElement& other);
                            HTMLParamElement (const DOM::Node& other);

protected:
//ig                        HTMLParamElement (HTMLParamElementImpl* impl);

public:
    DOM::DOMString          name () const;
    void                    setName (const DOM::DOMString&);
    DOM::DOMString          type () const;
    void                    setType (const DOM::DOMString&);
    DOM::DOMString          value () const;
    void                    setValue (const DOM::DOMString&);
    DOM::DOMString          valueType () const;
    void                    setValueType (const DOM::DOMString&);
};   // HTMLParamElement

};   // DOM


