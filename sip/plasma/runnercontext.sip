// Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.


namespace Plasma
{

class RunnerContext : QObject
{
%TypeHeaderCode
#include <plasma/runnercontext.h>
%End

public:

    enum Type
    {
        None,
        UnknownType,
        Directory,
        File,
        NetworkLocation,
        Executable,
        ShellCommand,
        Help,
        FileSystem
    };

    typedef QFlags<Plasma::RunnerContext::Type> Types;

    explicit                RunnerContext (QObject* parent /TransferThis/ = 0);
    explicit                RunnerContext (Plasma::RunnerContext& other, QObject* parent /TransferThis/ = 0);
    void                    reset ();
    void                    setQuery (const QString& term);
    QString                 query () const;
    Plasma::RunnerContext::Type  type () const;
    QString                 mimeType () const;
    bool                    isValid () const;
    bool                    addMatches (const QString& term, const QList<Plasma::QueryMatch>& matches);
    bool                    addMatch (const QString& term, const Plasma::QueryMatch& match);
    QList<Plasma::QueryMatch>  matches () const;
    Plasma::QueryMatch      match (const QString& id) const;

signals:
    void                    matchesChanged ();
};   // RunnerContext

};   // Plasma


