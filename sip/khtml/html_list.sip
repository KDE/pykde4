//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module khtml  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLDListElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_list.h>
%End


public:
                         HTMLDListElement ();
                         HTMLDListElement (const DOM::HTMLDListElement&);
                         HTMLDListElement (const DOM::Node&);

protected:
//ig                          HTMLDListElement (HTMLDListElementImpl*);

public:
    bool                 compact () const;
    void                 setCompact (bool);

};  // class HTMLDListElement


class HTMLDirectoryElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_list.h>
%End


public:
                         HTMLDirectoryElement ();
                         HTMLDirectoryElement (const DOM::HTMLDirectoryElement&);
                         HTMLDirectoryElement (const DOM::Node&);

protected:
//ig                          HTMLDirectoryElement (HTMLDirectoryElementImpl*);

public:
    bool                 compact () const;
    void                 setCompact (bool);

};  // class HTMLDirectoryElement


class HTMLLIElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_list.h>
%End


public:
                         HTMLLIElement ();
                         HTMLLIElement (const DOM::HTMLLIElement&);
                         HTMLLIElement (const DOM::Node&);

protected:
//ig                          HTMLLIElement (HTMLLIElementImpl*);

public:
    DOM::DOMString       type () const;
    void                 setType (const DOM::DOMString&);
    long                 value () const;
    void                 setValue (long);

};  // class HTMLLIElement


class HTMLMenuElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_list.h>
%End


public:
                         HTMLMenuElement ();
                         HTMLMenuElement (const DOM::HTMLMenuElement&);
                         HTMLMenuElement (const DOM::Node&);

protected:
//ig                          HTMLMenuElement (HTMLMenuElementImpl*);

public:
    bool                 compact () const;
    void                 setCompact (bool);

};  // class HTMLMenuElement


class HTMLOListElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_list.h>
%End


public:
                         HTMLOListElement ();
                         HTMLOListElement (const DOM::HTMLOListElement&);
                         HTMLOListElement (const DOM::Node&);

protected:
//ig                          HTMLOListElement (HTMLOListElementImpl*);

public:
    bool                 compact () const;
    void                 setCompact (bool);
    long                 start () const;
    void                 setStart (long);
    DOM::DOMString       type () const;
    void                 setType (const DOM::DOMString&);

};  // class HTMLOListElement


class HTMLUListElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_list.h>
%End


public:
                         HTMLUListElement ();
                         HTMLUListElement (const DOM::HTMLUListElement&);
                         HTMLUListElement (const DOM::Node&);

protected:
//ig                          HTMLUListElement (HTMLUListElementImpl*);

public:
    bool                 compact () const;
    void                 setCompact (bool);
    DOM::DOMString       type () const;
    void                 setType (const DOM::DOMString&);

};  // class HTMLUListElement

};  // namespace DOM

