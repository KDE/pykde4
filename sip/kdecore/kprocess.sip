//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdecore  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KProcess : QProcess
{
%TypeHeaderCode
#include <kprocess.h>
%End


public:

    enum OutputChannelMode
    {
        SeparateChannels, 
        MergedChannels, 
        ForwardedChannels, 
        OnlyStdoutChannel, 
        OnlyStderrChannel
    };

                         KProcess (QObject* /TransferThis/ = 0);
    void                 setOutputChannelMode (KProcess::OutputChannelMode);
    KProcess::OutputChannelMode outputChannelMode () const;
    void                 setReadChannel (QProcess::ProcessChannel);
    void                 setNextOpenMode (QIODevice::OpenMode);
    void                 setEnv (const QString&, const QString&, bool = 1);
    void                 unsetEnv (const QString&);
    void                 clearEnvironment ();
    void                 setProgram (const QString&, const QStringList& = QStringList ());
    void                 setProgram (const QStringList&);
    KProcess&            operator << (const QString&);
    KProcess&            operator << (const QStringList&);
    void                 clearProgram ();
    void                 setShellCommand (const QString&);
    QStringList          program () const;
    void                 start ();
    int                  execute (int = -1);
    static int           execute (const QString&, const QStringList& = QStringList (), int = -1);
    static int           execute (const QStringList&, int = -1);
    int                  startDetached ();
    static int           startDetached (const QString&, const QStringList& = QStringList ());
    static int           startDetached (const QStringList&);
    int                  pid () const;

protected:
//ig                          KProcess (KProcessPrivate*, QObject* /TransferThis/);

};  // class KProcess

