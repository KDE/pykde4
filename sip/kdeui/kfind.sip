//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KFind : QObject
{
%TypeHeaderCode
#include <kfind.h>
%End



public:
    enum Options
    {
        WholeWordsOnly,
        FromCursor,
        SelectedText,
        CaseSensitive,
        FindBackwards,
        RegularExpression,
        FindIncremental,
        MinimumUserOption
    };

                            KFind (const QString& pattern, long options, QWidget* parent /TransferThis/);
                            KFind (const QString& pattern, long options, QWidget* parent /TransferThis/, QWidget* findDialog);

    enum Result
    {
        NoMatch,
        Match
    };

    bool                    needData () const;
    void                    setData (const QString& data, int startPos = -1);
    void                    setData (int id, const QString& data, int startPos = -1);
    KFind::Result           find ();
    long                    options () const;
    virtual void            setOptions (long options);
    QString                 pattern () const;
    void                    setPattern (const QString& pattern);
    int                     numMatches () const;
    virtual void            resetCounts ();
    virtual bool            validateMatch (const QString& text, int index, int matchedlength);
    virtual bool            shouldRestart (bool forceAsking = 0, bool showNumMatches = 1) const;
    static int              find (const QString& text, const QString& pattern, int index, long options, int* matchedlength /Out/);
    static int              find (const QString& text, const QRegExp& pattern, int index, long options, int* matchedlength /Out/);
    virtual void            displayFinalDialog () const;
    KDialog*                findNextDialog (bool create = 0);
    void                    closeFindNextDialog ();
    int                     index () const;

signals:
    void                    highlight (const QString& text, int matchingIndex, int matchedLength);
    void                    highlight (int id, int matchingIndex, int matchedLength);
    void                    findNext ();
    void                    optionsChanged ();
    void                    dialogClosed ();

protected:
    QWidget*                parentWidget () const;
    QWidget*                dialogsParent () const;
public:
    ~KFind ();
};
// KFind


