//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KParts
{

class Plugin : QObject, KXMLGUIClient
{
%TypeHeaderCode
#include <kparts/plugin.h>
%End



public:
    class PluginInfo
    {

    public:
        QString m_relXMLFileName;
        QString m_absXMLFileName;
        QDomDocument m_document;
    };
// PluginInfo


                            Plugin (QObject* parent /TransferThis/ = 0);
    virtual QString         xmlFile () const;
    virtual QString         localXMLFile () const;
    static void             loadPlugins (QObject* parent /Transfer/, const KComponentData& instance);
//force
    static void             loadPlugins (QObject* parent /Transfer/, const QList<KParts::Plugin::PluginInfo>& pluginInfos);
    static void             loadPlugins (QObject* parent /Transfer/, const QList<KParts::Plugin::PluginInfo>& pluginInfos, const KComponentData& instance);
//end
    static void             loadPlugins (QObject* parent /Transfer/, KXMLGUIClient* parentGUIClient, const KComponentData& instance, bool enableNewPluginsByDefault = 1, int interfaceVersionRequired = 0);
    static QList<KParts::Plugin*>  pluginObjects (QObject* parent /Transfer/);

protected:
//force
    static QList<KParts::Plugin::PluginInfo>  pluginInfos (const KComponentData& instance);
//end
    static KParts::Plugin*  loadPlugin (QObject* parent /Transfer/, const char* libname);
    static KParts::Plugin*  loadPlugin (QObject* parent /Transfer/, const QByteArray& libname);
    static KParts::Plugin*  loadPlugin (QObject* parent /Transfer/, const QString& libname);
    virtual void            setComponentData (const KComponentData& instance);
public:
    ~Plugin ();
//ig    static void             loadPlugins (QObject* parent /Transfer/, const QList<PluginInfo>& pluginInfos);
//ig    static void             loadPlugins (QObject* parent /Transfer/, const QList<PluginInfo>& pluginInfos, const KComponentData& instance);
};
// Plugin

};
// KParts


