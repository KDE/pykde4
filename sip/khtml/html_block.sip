//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module khtml  version KDE 4.0.2

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLBlockquoteElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                            HTMLBlockquoteElement ();
                            HTMLBlockquoteElement (const DOM::HTMLBlockquoteElement& other);
                            HTMLBlockquoteElement (const DOM::Node& other);

protected:
//ig                        HTMLBlockquoteElement (HTMLElementImpl* impl);

public:
    DOM::DOMString          cite () const;
    void                    setCite (const DOM::DOMString&);
};   // HTMLBlockquoteElement


class HTMLDivElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                            HTMLDivElement ();
                            HTMLDivElement (const DOM::HTMLDivElement& other);
                            HTMLDivElement (const DOM::Node& other);

protected:
//ig                        HTMLDivElement (HTMLDivElementImpl* impl);

public:
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
};   // HTMLDivElement


class HTMLHRElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                            HTMLHRElement ();
                            HTMLHRElement (const DOM::HTMLHRElement& other);
                            HTMLHRElement (const DOM::Node& other);

protected:
//ig                        HTMLHRElement (HTMLHRElementImpl* impl);

public:
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    bool                    noShade () const;
    void                    setNoShade (bool);
    DOM::DOMString          size () const;
    void                    setSize (const DOM::DOMString&);
    DOM::DOMString          width () const;
    void                    setWidth (const DOM::DOMString&);
};   // HTMLHRElement


class HTMLHeadingElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                            HTMLHeadingElement ();
                            HTMLHeadingElement (const DOM::HTMLHeadingElement& other);
                            HTMLHeadingElement (const DOM::Node& other);

protected:
//ig                        HTMLHeadingElement (HTMLElementImpl* impl);

public:
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
};   // HTMLHeadingElement


class HTMLParagraphElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                            HTMLParagraphElement ();
                            HTMLParagraphElement (const DOM::HTMLParagraphElement& other);
                            HTMLParagraphElement (const DOM::Node& other);

protected:
//ig                        HTMLParagraphElement (HTMLElementImpl* impl);

public:
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
};   // HTMLParagraphElement


class HTMLPreElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                            HTMLPreElement ();
                            HTMLPreElement (const DOM::HTMLPreElement& other);
                            HTMLPreElement (const DOM::Node& other);

protected:
//ig                        HTMLPreElement (HTMLPreElementImpl* impl);

public:
    long                    width () const;
    void                    setWidth (long);
};   // HTMLPreElement


class HTMLLayerElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                            HTMLLayerElement ();
                            HTMLLayerElement (const DOM::HTMLLayerElement& other);
                            HTMLLayerElement (const DOM::Node& other);

protected:
//ig                        HTMLLayerElement (HTMLLayerElementImpl* impl);

public:
    long                    top () const;
    void                    setTop (long);
    long                    left () const;
    void                    setLeft (long);
    DOM::DOMString          visibility () const;
    void                    setVisibility (const DOM::DOMString&);
    DOM::DOMString          bgColor () const;
    void                    setBgColor (const DOM::DOMString&);
    DOM::HTMLCollection     layers () const;
};   // HTMLLayerElement

};   // DOM


