//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module kio  version KDE 4.0.2

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KMountPoint
{
%TypeHeaderCode
#include <kmountpoint.h>
%End


public:
    typedef KSharedPtr<KMountPoint> Ptr;


    class List
    {

    public:
                                List ();
        KMountPoint::Ptr        findByPath (const QString& path) const;
        KMountPoint::Ptr        findByDevice (const QString& device) const;
    };   // List


public:

    enum DetailsNeededFlag
    {
        BasicInfoNeeded,
        NeedMountOptions,
        NeedRealDeviceName
    };

    typedef QFlags<KMountPoint::DetailsNeededFlag> DetailsNeededFlags;

    static KMountPoint::List  possibleMountPoints (KMountPoint::DetailsNeededFlags infoNeeded = KMountPoint::BasicInfoNeeded);
    static KMountPoint::List  currentMountPoints (KMountPoint::DetailsNeededFlags infoNeeded = KMountPoint::BasicInfoNeeded);
    QString                 mountedFrom () const;
    QString                 realDeviceName () const;
    QString                 mountPoint () const;
    QString                 mountType () const;
    QStringList             mountOptions () const;
    bool                    probablySlow () const;

    enum FileSystemFlag
    {
        SupportsChmod,
        SupportsChown,
        SupportsUTime,
        SupportsSymlinks,
        CaseInsensitive
    };

    bool                    testFileSystemFlag (KMountPoint::FileSystemFlag flag) const;

private:
                            KMountPoint ();
                            KMountPoint (const KMountPoint &other);
};   // KMountPoint


