//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KNotification : QObject
{
%TypeHeaderCode
#include <knotification.h>
%End


public:
    typedef QPair<QString, QString> Context;
//ig     typedef QList<KNotification::Context> ContextList;

    enum NotificationFlag
    {
        RaiseWidgetOnActivation, 
        CloseOnTimeout, 
        Persistant, 
        CloseWhenWidgetActivated, 
        DefaultEvent
    };

    typedef QFlags<KNotification::NotificationFlag> NotificationFlags;

    enum StandardEvent
    {
        Notification, 
        Warning, 
        Error, 
        Catastrophe
    };

                         KNotification (const QString&, QWidget* = 0, const KNotification::NotificationFlags& = KNotification::CloseOnTimeout );
    QWidget*             widget () const;
    void                 setWidget (QWidget*);
    QString              eventId () const;
    QString              text () const;
    void                 setText (const QString&);
    QPixmap              pixmap () const;
    void                 setPixmap (const QPixmap&);
    QStringList          actions () const;
    void                 setActions (const QStringList&);
    KNotification::ContextList contexts () const;
    void                 setContexts (const KNotification::ContextList&);
    void                 addContext (const KNotification::Context&);
    void                 addContext (const QString&, const QString&);
    KNotification::NotificationFlags flags () const;
    void                 setFlags (const KNotification::NotificationFlags&);
    void                 setComponentData (const KComponentData&);

signals:
    void                 activated ();
    void                 activated (uint);
    void                 action1Activated ();
    void                 action2Activated ();
    void                 action3Activated ();
    void                 closed ();
    void                 ignored ();

public slots:
    void                 activate (uint = 0);
    void                 close ();
    void                 raiseWidget ();
    void                 ref ();
    void                 deref ();
    void                 sendEvent ();

protected:
    virtual bool         eventFilter (QObject*, QEvent*);

public:
    static KNotification* event (const QString&, const QString& = QString (), const QPixmap& = QPixmap (), QWidget* = 0, const KNotification::NotificationFlags& = KNotification::CloseOnTimeout , const KComponentData& = KComponentData ());
    static KNotification* event (KNotification::StandardEvent, const QString& = QString (), const QPixmap& = QPixmap (), QWidget* = 0, const KNotification::NotificationFlags& = KNotification::CloseOnTimeout );
    static void          beep (const QString& = QString (), QWidget* = 0);

public:
//force
    typedef QList<QPair<QString, QString>> ContextList;
//end


};  // class KNotification

