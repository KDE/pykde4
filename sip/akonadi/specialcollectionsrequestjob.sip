// Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Akonadi
{
class SpecialCollectionsRequestJob : Akonadi::TransactionSequence
{
%TypeHeaderCode
#include <akonadi/specialcollectionsrequestjob.h>
%End

public:
    ~SpecialCollectionsRequestJob ();
    void                    requestDefaultCollection (const QByteArray& type);
    void                    requestCollection (const QByteArray& type, const Akonadi::AgentInstance& instance);
    Akonadi::Collection     collection () const;
protected:
    explicit                SpecialCollectionsRequestJob (Akonadi::SpecialCollections* collections, QObject* parent /TransferThis/ = 0);
    void                    setDefaultResourceType (const QString& type);
    void                    setDefaultResourceOptions (const QVariantMap& options);
    void                    setTypes (const QList<QByteArray>& types);
    void                    setNameForTypeMap (const QMap<QByteArray,QString>& map);
    void                    setIconForTypeMap (const QMap<QByteArray,QString>& map);
    virtual void            doStart ();
    virtual void            slotResult (KJob* job);
};
};
