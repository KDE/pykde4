//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KCModule : QWidget
{
%TypeHeaderCode
#include <kcmodule.h>
%End


public:

    enum Button
    {
        Help, 
        Default, 
        Apply
    };

    typedef QFlags<KCModule::Button> Buttons;
                         KCModule (const KComponentData&, QWidget* /TransferThis/ = 0, const QVariantList& = QVariantList ());
    virtual QString      quickHelp () const;
    virtual const KAboutData* aboutData () const;
    void                 setAboutData (KAboutData*);
    KCModule::Buttons    buttons () const;
    QString              rootOnlyMessage () const;
    bool                 useRootOnlyMessage () const;
    KComponentData       componentData () const;
    QList<KConfigDialogManager*> configs () const;

public slots:
    virtual void         load ();
    virtual void         save ();
    virtual void         defaults ();

protected:
    KConfigDialogManager* addConfig (KConfigSkeleton*, QWidget*);
    void                 setQuickHelp (const QString&);
    virtual void         showEvent (QShowEvent*);

signals:
    void                 changed (bool);
    void                 quickHelpChanged ();

protected slots:
    void                 changed ();
    void                 widgetChanged ();

protected:
    void                 setButtons (KCModule::Buttons);
    void                 setRootOnlyMessage (const QString&);
    void                 setUseRootOnlyMessage (bool);
    bool                 managedWidgetChangeState () const;
    void                 unmanagedWidgetChangeState (bool);

};  // class KCModule

