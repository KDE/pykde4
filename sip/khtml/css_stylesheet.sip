//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module khtml  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
#include <css_stylesheet.h>
%End

namespace DOM
{

class StyleSheet
{
%TypeHeaderCode
#include <css_stylesheet.h>
%End


public:
                         StyleSheet ();
                         StyleSheet (const DOM::StyleSheet&);
//ig                          StyleSheet (StyleSheetImpl*);

public:
    DOM::DOMString       type () const;
    bool                 disabled () const;
    void                 setDisabled (bool);
    DOM::Node            ownerNode () const;
    DOM::StyleSheet      parentStyleSheet () const;
    DOM::DOMString       href () const;
    DOM::DOMString       title () const;
    DOM::MediaList       media () const;
    bool                 isCSSStyleSheet () const;
//ig     StyleSheetImpl*      handle () const;
    bool                 isNull () const;

protected:

};  // class StyleSheet


class CSSException
{
%TypeHeaderCode
#include <css_stylesheet.h>
%End


public:
                         CSSException (ushort);
                         CSSException (const DOM::CSSException&);
    ushort               code;

    enum ExceptionCode
    {
        SYNTAX_ERR, 
        INVALID_MODIFICATION_ERR, 
        _EXCEPTION_OFFSET, 
        _EXCEPTION_MAX
    };


};  // class CSSException


class CSSStyleSheet : DOM::StyleSheet
{
%TypeHeaderCode
#include <css_stylesheet.h>
%End


public:
                         CSSStyleSheet ();
                         CSSStyleSheet (const DOM::CSSStyleSheet&);
                         CSSStyleSheet (const DOM::StyleSheet&);
//ig                          CSSStyleSheet (CSSStyleSheetImpl*);

public:
    DOM::CSSRule         ownerRule () const;
    DOM::CSSRuleList     cssRules () const;
    ulong                insertRule (const DOM::DOMString&, ulong);
    void                 deleteRule (ulong);

};  // class CSSStyleSheet


class StyleSheetList
{
%TypeHeaderCode
#include <css_stylesheet.h>
%End


public:
                         StyleSheetList ();
                         StyleSheetList (const DOM::StyleSheetList&);
//ig                          StyleSheetList (StyleSheetListImpl*);

public:
    ulong                length () const;
    DOM::StyleSheet      item (ulong);
//ig     StyleSheetListImpl*  handle () const;
    bool                 isNull () const;

protected:

};  // class StyleSheetList


class MediaList
{
%TypeHeaderCode
#include <css_stylesheet.h>
%End


public:
                         MediaList ();
                         MediaList (const DOM::MediaList&);
//ig                          MediaList (MediaListImpl*);

public:
    DOM::DOMString       mediaText ();
    void                 setMediaText (const DOM::DOMString&);
    ulong                length ();
    DOM::DOMString       item (ulong);
    void                 deleteMedium (const DOM::DOMString&);
    void                 appendMedium (const DOM::DOMString&);
//ig     MediaListImpl*       handle () const;
    bool                 isNull () const;

protected:

};  // class MediaList


class LinkStyle
{
%TypeHeaderCode
#include <css_stylesheet.h>
%End


public:
                         LinkStyle ();
                         LinkStyle (const DOM::LinkStyle&);
    DOM::StyleSheet      sheet ();
    bool                 isNull () const;

protected:

};  // class LinkStyle


class DocumentStyle
{
%TypeHeaderCode
#include <css_stylesheet.h>
%End


public:
                         DocumentStyle ();
                         DocumentStyle (const DOM::DocumentStyle&);
    DOM::StyleSheetList  styleSheets ();
    DOM::DOMString       preferredStylesheetSet () const;
    DOM::DOMString       selectedStylesheetSet () const;
    void                 setSelectedStylesheetSet (const DOM::DOMString&);
    bool                 isNull () const;

protected:

};  // class DocumentStyle

};  // namespace DOM

