//
//     Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KNS
{

class Installation
{
%TypeHeaderCode
#include <knewstuff2/core/installation.h>
%End

public:
                            Installation ();

    enum Policy
    {
        CheckNever,
        CheckIfPossible,
        CheckAlways
    };


    enum Scope
    {
        ScopeUser,
        ScopeSystem
    };

    void                    setUncompression (const QString& uncompression);
    void                    setCommand (const QString& command);
    void                    setStandardResourceDir (const QString& dir);
    void                    setTargetDir (const QString& dir);
    void                    setInstallPath (const QString& dir);
    void                    setAbsoluteInstallPath (const QString& dir);
    void                    setScope (KNS::Installation::Scope scope);
    void                    setChecksumPolicy (KNS::Installation::Policy policy);
    void                    setSignaturePolicy (KNS::Installation::Policy policy);
    void                    setCustomName (bool customname);
    QString                 uncompression () const;
    QString                 command () const;
    QString                 standardResourceDir () const;
    QString                 targetDir () const;
    QString                 installPath () const;
    QString                 absoluteInstallPath () const;
    bool                    isRemote () const;
    KNS::Installation::Policy  checksumPolicy () const;
    KNS::Installation::Policy  signaturePolicy () const;
    KNS::Installation::Scope  scope () const;
    bool                    customName () const;

private:
                            Installation (const KNS::Installation&);
};   // Installation

};   // KNS


