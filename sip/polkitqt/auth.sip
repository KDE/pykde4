//
//     Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

%ModuleHeaderCode
#include <PolicyKit/polkit-qt/auth.h>
%End

namespace PolkitQt
{
namespace Auth
{

enum Result
{
    Unknown,
    Yes,
    AdminAuthOneShot,
    AdminAuth,
    AdminAuthKeepSession,
    AdminAuthKeepAlways,
    SelfAuthOneShot,
    SelfAuth,
    SelfAuthKeepSession,
    SelfAuthKeepAlways,
    No
};

bool                    computeAndObtainAuth (const QString& actionId, WId winId = 0, qint64 pid = QCoreApplication::applicationPid());
bool                    obtainAuth (const QString& actionId, WId winId = 0, qint64 pid = QCoreApplication::applicationPid());
//ig PolkitQt::Auth::Result  isCallerAuthorized (PolKitAction* action, qint64 pid, bool revokeIfOneShot);
PolkitQt::Auth::Result  isCallerAuthorized (const QString& actionId, qint64 pid, bool revokeIfOneShot);
PolkitQt::Auth::Result  isCallerAuthorized (const QString& actionId, const QString& dbusName, bool revokeIfOneShot);
//ig PolkitQt::Auth::Result  isCallerAuthorized (PolKitAction* action, const QString& dbusName, bool revokeIfOneShot);
};   // Auth

};   // PolkitQt


