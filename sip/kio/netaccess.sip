//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module kio  version KDE 4.1.0

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KIO
{

class NetAccess : QObject
{
%TypeHeaderCode
#include <netaccess.h>
%End


public:

    enum StatSide
    {
        SourceSide,
        DestinationSide
    };

    static bool             download (const KUrl& src, QString& target, QWidget* window);
    static void             removeTempFile (const QString& name);
    static bool             upload (const QString& src, const KUrl& target, QWidget* window);
    static bool             file_copy (const KUrl& src, const KUrl& target, QWidget* window = 0);
    static bool             copy (const KUrl& src, const KUrl& target, QWidget* window = 0);
    static bool             dircopy (const KUrl& src, const KUrl& target, QWidget* window);
    static bool             dircopy (const KUrl::List& src, const KUrl& target, QWidget* window = 0);
    static bool             move (const KUrl& src, const KUrl& target, QWidget* window = 0);
    static bool             move (const KUrl::List& src, const KUrl& target, QWidget* window = 0);
    static bool             exists (const KUrl& url, bool source, QWidget* window);
    static bool             exists (const KUrl& url, KIO::NetAccess::StatSide statSide, QWidget* window);
    static bool             stat (const KUrl& url, KIO::UDSEntry& entry, QWidget* window);
    static KUrl             mostLocalUrl (const KUrl& url, QWidget* window);
    static bool             del (const KUrl& url, QWidget* window) /PyName=del_/;
    static bool             mkdir (const KUrl& url, QWidget* window, int permissions = -1);
    static QString          fish_execute (const KUrl& url, const QString& command, QWidget* window);
    static bool             synchronousRun (KIO::Job* job, QWidget* window, QByteArray* data = 0, KUrl* finalURL = 0, QMap<QString,QString>* metaData = 0);
    static QString          mimetype (const KUrl& url, QWidget* window);
    static QString          lastErrorString ();
    static int              lastError ();

signals:
    void                    leaveModality ();

private:
                            NetAccess ();
                            ~NetAccess ();
};   // NetAccess

};   // KIO


