//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kate  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
//ctscc
#include <application.h>
#include <documentmanager.h>
#include <mainwindow.h>
#include <plugin.h>
#include <pluginconfigpageinterface.h>
#include <pluginmanager.h>
%End

%ModuleHeaderCode
#include <application.h>
%End

namespace Kate
{

class Application : QObject
{
%TypeHeaderCode
#include <application.h>
%End


public:
                         Application (void* /In/);

public:
    Kate::DocumentManager* documentManager ();
    Kate::PluginManager* pluginManager ();
    KTextEditor::Editor* editor ();
    Kate::MainWindow*    activeMainWindow ();
    const QList<Kate::MainWindow*>& mainWindows () const;

// Subclasses for QObject

public:
%ConvertToSubClassCode

    if (dynamic_cast<Kate::Application*>(sipCpp))
        sipClass = sipClass_Kate_Application;
    else if (dynamic_cast<Kate::DocumentManager*>(sipCpp))
        sipClass = sipClass_Kate_DocumentManager;
    else if (dynamic_cast<Kate::MainWindow*>(sipCpp))
        sipClass = sipClass_Kate_MainWindow;
    else if (dynamic_cast<Kate::Plugin*>(sipCpp))
        sipClass = sipClass_Kate_Plugin;
    else if (dynamic_cast<Kate::PluginConfigPage*>(sipCpp))
        sipClass = sipClass_Kate_PluginConfigPage;
    else if (dynamic_cast<Kate::PluginManager*>(sipCpp))
        sipClass = sipClass_Kate_PluginManager;
    else if (dynamic_cast<Kate::PluginView*>(sipCpp))
        sipClass = sipClass_Kate_PluginView;
    else
        sipClass = NULL;
%End


};  // class Application

Kate::Application*   application ();
};  // namespace Kate

