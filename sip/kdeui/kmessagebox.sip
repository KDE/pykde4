//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KMessageBox
{
%TypeHeaderCode
#include <kmessagebox.h>
%End


public:

    enum ButtonCode
    {
        Ok, 
        Cancel, 
        Yes, 
        No, 
        Continue
    };


    enum DialogType
    {
        QuestionYesNo, 
        WarningYesNo, 
        WarningContinueCancel, 
        WarningYesNoCancel, 
        Information, 
        Sorry, 
        Error, 
        QuestionYesNoCancel
    };


    enum Option
    {
        Notify, 
        AllowLink, 
        Dangerous, 
        PlainCaption, 
        NoExec
    };

    typedef QFlags<KMessageBox::Option> Options;
    static int           questionYesNo (QWidget* /Transfer/, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           questionYesNoWId (WId, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           questionYesNoCancel (QWidget* /Transfer/, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           questionYesNoCancelWId (WId, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           questionYesNoList (QWidget* /Transfer/, const QString&, const QStringList&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           questionYesNoListWId (WId, const QString&, const QStringList&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           warningYesNo (QWidget* /Transfer/, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const QString& = QString (), KMessageBox::Options = KMessageBox::Dangerous );
    static int           warningYesNoWId (WId, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const QString& = QString (), KMessageBox::Options = KMessageBox::Dangerous );
    static int           warningYesNoList (QWidget* /Transfer/, const QString&, const QStringList&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const QString& = QString (), KMessageBox::Options = KMessageBox::Dangerous );
    static int           warningYesNoListWId (WId, const QString&, const QStringList&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const QString& = QString (), KMessageBox::Options = KMessageBox::Dangerous );
    static int           warningContinueCancel (QWidget* /Transfer/, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::cont (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           warningContinueCancelWId (WId, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::cont (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           warningContinueCancelList (QWidget* /Transfer/, const QString&, const QStringList&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::cont (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           warningContinueCancelListWId (WId, const QString&, const QStringList&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::cont (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           warningYesNoCancel (QWidget* /Transfer/, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           warningYesNoCancelWId (WId, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           warningYesNoCancelList (QWidget* /Transfer/, const QString&, const QStringList&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           warningYesNoCancelListWId (WId, const QString&, const QStringList&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          error (QWidget* /Transfer/, const QString&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          errorWId (WId, const QString&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          errorList (QWidget* /Transfer/, const QString&, const QStringList&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          errorListWId (WId, const QString&, const QStringList&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          detailedError (QWidget* /Transfer/, const QString&, const QString&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          detailedErrorWId (WId, const QString&, const QString&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          queuedDetailedError (QWidget* /Transfer/, const QString&, const QString&, const QString& = QString::null );
    static void          queuedDetailedErrorWId (WId, const QString&, const QString&, const QString& = QString::null );
    static void          sorry (QWidget* /Transfer/, const QString&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          sorryWId (WId, const QString&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          detailedSorry (QWidget* /Transfer/, const QString&, const QString&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          detailedSorryWId (WId, const QString&, const QString&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          information (QWidget* /Transfer/, const QString&, const QString& = QString (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          informationWId (WId, const QString&, const QString& = QString (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          informationList (QWidget* /Transfer/, const QString&, const QStringList&, const QString& = QString (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          informationListWId (WId, const QString&, const QStringList&, const QString& = QString (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          enableAllMessages ();
    static void          enableMessage (const QString&);
    static void          about (QWidget* /Transfer/, const QString&, const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           messageBox (QWidget* /Transfer/, KMessageBox::DialogType, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static int           messageBoxWId (WId, KMessageBox::DialogType, const QString&, const QString& = QString (), const KGuiItem& = KStandardGuiItem::yes (), const KGuiItem& = KStandardGuiItem::no (), const KGuiItem& = KStandardGuiItem::cancel (), const QString& = QString (), KMessageBox::Options = KMessageBox::Notify );
    static void          queuedMessageBox (QWidget* /Transfer/, KMessageBox::DialogType, const QString&, const QString&, KMessageBox::Options);
    static void          queuedMessageBoxWId (WId, KMessageBox::DialogType, const QString&, const QString&, KMessageBox::Options);
    static void          queuedMessageBox (QWidget* /Transfer/, KMessageBox::DialogType, const QString&, const QString& = QString::null );
    static void          queuedMessageBoxWId (WId, KMessageBox::DialogType, const QString&, const QString& = QString::null );
    static bool          shouldBeShownYesNo (const QString&, KMessageBox::ButtonCode&);
    static bool          shouldBeShownContinue (const QString&);
    static void          saveDontShowAgainYesNo (const QString&, KMessageBox::ButtonCode);
    static void          saveDontShowAgainContinue (const QString&);
    static void          setDontShowAskAgainConfig (KConfig*);
    static int           createKMessageBox (KDialog*, QMessageBox::Icon, const QString&, const QStringList&, const QString&, bool* /In, Out/, KMessageBox::Options, const QString& = QString ());
    static int           createKMessageBox (KDialog*, const QIcon&, const QString&, const QStringList&, const QString&, bool* /Out/, KMessageBox::Options, const QString& = QString (), QMessageBox::Icon = QMessageBox::Information );

};  // class KMessageBox

