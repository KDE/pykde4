//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module khtml  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLAnchorElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_inline.h>
%End


public:
                         HTMLAnchorElement ();
                         HTMLAnchorElement (const DOM::HTMLAnchorElement&);
                         HTMLAnchorElement (const DOM::Node&);

protected:
//ig                          HTMLAnchorElement (HTMLAnchorElementImpl*);

public:
    DOM::DOMString       accessKey () const;
    void                 setAccessKey (const DOM::DOMString&);
    DOM::DOMString       charset () const;
    void                 setCharset (const DOM::DOMString&);
    DOM::DOMString       coords () const;
    void                 setCoords (const DOM::DOMString&);
    DOM::DOMString       href () const;
    void                 setHref (const DOM::DOMString&);
    DOM::DOMString       hreflang () const;
    void                 setHreflang (const DOM::DOMString&);
    DOM::DOMString       name () const;
    void                 setName (const DOM::DOMString&);
    DOM::DOMString       rel () const;
    void                 setRel (const DOM::DOMString&);
    DOM::DOMString       rev () const;
    void                 setRev (const DOM::DOMString&);
    DOM::DOMString       shape () const;
    void                 setShape (const DOM::DOMString&);
    long                 tabIndex () const;
    void                 setTabIndex (long);
    DOM::DOMString       target () const;
    void                 setTarget (const DOM::DOMString&);
    DOM::DOMString       type () const;
    void                 setType (const DOM::DOMString&);
    void                 blur ();
    void                 focus ();

};  // class HTMLAnchorElement


class HTMLBRElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_inline.h>
%End


public:
                         HTMLBRElement ();
                         HTMLBRElement (const DOM::HTMLBRElement&);
                         HTMLBRElement (const DOM::Node&);

protected:
//ig                          HTMLBRElement (HTMLBRElementImpl*);

public:
    DOM::DOMString       clear () const;
    void                 setClear (const DOM::DOMString&);

};  // class HTMLBRElement


class HTMLFontElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_inline.h>
%End


public:
                         HTMLFontElement ();
                         HTMLFontElement (const DOM::HTMLFontElement&);
                         HTMLFontElement (const DOM::Node&);

protected:
//ig                          HTMLFontElement (HTMLFontElementImpl*);

public:
    DOM::DOMString       color () const;
    void                 setColor (const DOM::DOMString&);
    DOM::DOMString       face () const;
    void                 setFace (const DOM::DOMString&);
    DOM::DOMString       size () const;
    void                 setSize (const DOM::DOMString&);

};  // class HTMLFontElement


class HTMLModElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_inline.h>
%End


public:
                         HTMLModElement ();
                         HTMLModElement (const DOM::HTMLModElement&);
                         HTMLModElement (const DOM::Node&);

protected:
//ig                          HTMLModElement (HTMLElementImpl*);

public:
    DOM::DOMString       cite () const;
    void                 setCite (const DOM::DOMString&);
    DOM::DOMString       dateTime () const;
    void                 setDateTime (const DOM::DOMString&);

};  // class HTMLModElement


class HTMLQuoteElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_inline.h>
%End


public:
                         HTMLQuoteElement ();
                         HTMLQuoteElement (const DOM::HTMLQuoteElement&);
                         HTMLQuoteElement (const DOM::Node&);

protected:
//ig                          HTMLQuoteElement (HTMLGenericElementImpl*);

public:
    DOM::DOMString       cite () const;
    void                 setCite (const DOM::DOMString&);

};  // class HTMLQuoteElement

};  // namespace DOM

