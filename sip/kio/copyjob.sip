//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
#include <copyjob.h>
%End

namespace KIO
{

class CopyInfo
{
%TypeHeaderCode
#include <copyjob.h>
%End


public:
    KUrl                 uSource;
    KUrl                 uDest;
    QString              linkDest;
    int                  permissions;
    time_t               ctime;
    time_t               mtime;
    KIO::filesize_t      size;

};  // class CopyInfo


class CopyJob : KIO::Job /Abstract/
{
%TypeHeaderCode
#include <copyjob.h>
%End


public:

    enum CopyMode
    {
        Copy, 
        Move, 
        Link
    };

    KUrl::List           srcUrls () const;
    KUrl                 destUrl () const;
    void                 setDefaultPermissions (bool);
    virtual bool         doSuspend ();

signals:
    void                 totalFiles (KJob*, ulong);
    void                 totalDirs (KJob*, ulong);
    void                 aboutToCreate (KIO::Job*, const QList<KIO::CopyInfo>&);
    void                 processedFiles (KIO::Job*, ulong);
    void                 processedDirs (KIO::Job*, ulong);
    void                 copying (KIO::Job*, const KUrl&, const KUrl&);
    void                 linking (KIO::Job*, const QString&, const KUrl&);
    void                 moving (KIO::Job*, const KUrl&, const KUrl&);
    void                 creatingDir (KIO::Job*, const KUrl&);
    void                 renamed (KIO::Job*, const KUrl&, const KUrl&);
    void                 copyingDone (KIO::Job*, const KUrl&, const KUrl&, time_t, bool, bool);
    void                 copyingLinkDone (KIO::Job*, const KUrl&, const QString&, const KUrl&);

protected slots:
    virtual void         slotResult (KJob*);

protected:


//igx  undefined symbol: CopyJobPrivate& -- need mapped type?
//igx                          CopyJob (CopyJobPrivate&);


protected:

};  // class CopyJob

KIO::CopyJob*        copy (const KUrl&, const KUrl&, bool = 1);
KIO::CopyJob*        copyAs (const KUrl&, const KUrl&, bool = 1);
KIO::CopyJob*        copy (const KUrl::List&, const KUrl&, bool = 1);
KIO::CopyJob*        move (const KUrl&, const KUrl&, bool = 1);
KIO::CopyJob*        moveAs (const KUrl&, const KUrl&, bool = 1);
KIO::CopyJob*        move (const KUrl::List&, const KUrl&, bool = 1);
KIO::CopyJob*        link (const KUrl&, const KUrl&, bool = 1);
KIO::CopyJob*        link (const KUrl::List&, const KUrl&, bool = 1);
KIO::CopyJob*        linkAs (const KUrl&, const KUrl&, bool = 1);
KIO::CopyJob*        trash (const KUrl&, bool = 1);
KIO::CopyJob*        trash (const KUrl::List&, bool = 1);
};  // namespace KIO

