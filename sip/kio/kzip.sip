//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KZip : KArchive
{
%TypeHeaderCode
#include <kzip.h>
%End


public:
                         KZip (const QString&);
                         KZip (QIODevice*);

    enum ExtraField
    {
        NoExtraField, 
        ModificationTime, 
        DefaultExtraField
    };

    void                 setExtraField (KZip::ExtraField);
    KZip::ExtraField     extraField () const;

    enum Compression
    {
        NoCompression, 
        DeflateCompression
    };

    void                 setCompression (KZip::Compression);
    KZip::Compression    compression () const;
    virtual bool         writeData (const char*, qint64);

protected:
    virtual bool         doWriteSymLink (const QString&, const QString&, const QString&, const QString&, mode_t, time_t, time_t, time_t);
    virtual bool         doPrepareWriting (const QString&, const QString&, const QString&, qint64, mode_t, time_t, time_t, time_t);
    virtual bool         doFinishWriting (qint64);
    virtual bool         openArchive (QIODevice::OpenMode);
    virtual bool         closeArchive ();
    virtual bool         doWriteDir (const QString&, const QString&, const QString&, mode_t, time_t, time_t, time_t);

protected:
//igx     virtual void         virtual_hook (int, void*);

};  // class KZip


class KZipFileEntry : KArchiveFile
{
%TypeHeaderCode
#include <kzip.h>
%End


public:
                         KZipFileEntry (KZip*, const QString&, int, int, const QString&, const QString&, const QString&, const QString&, qint64, qint64, int, qint64);
    int                  encoding () const;
    qint64               compressedSize () const;
    void                 setCompressedSize (qint64);
    void                 setHeaderStart (qint64);
    qint64               headerStart () const;
    ulong                crc32 () const;
    void                 setCRC32 (ulong);
    const QString&       path () const;
    virtual QByteArray   data () const;
    virtual QIODevice*   createDevice () const;

};  // class KZipFileEntry

