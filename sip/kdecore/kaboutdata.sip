//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdecore  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KAboutPerson
{
%TypeHeaderCode
#include <kaboutdata.h>
%End


public:
                         KAboutPerson (const KLocalizedString&, const KLocalizedString& = KLocalizedString (), const QByteArray& = QByteArray (), const QByteArray& = QByteArray ());
                         KAboutPerson (const KAboutPerson&);
    QString              name () const;
    QString              task () const;
    QString              emailAddress () const;
    QString              webAddress () const;

private:
                         KAboutPerson (const QString&, const QString&);

};  // class KAboutPerson


class KAboutData
{
%TypeHeaderCode
#include <kaboutdata.h>
%End


public:

    enum LicenseKey
    {
        License_Custom, 
        License_File, 
        License_Unknown, 
        License_GPL, 
        License_GPL_V2, 
        License_LGPL, 
        License_LGPL_V2, 
        License_BSD, 
        License_Artistic, 
        License_QPL, 
        License_QPL_V1_0
    };


    enum NameFormat
    {
        ShortName, 
        FullName
    };


public:
                         KAboutData (const QByteArray&, const QByteArray&, const KLocalizedString&, const QByteArray&, const KLocalizedString& = KLocalizedString (), KAboutData::LicenseKey = KAboutData::License_Unknown , const KLocalizedString& = KLocalizedString (), const KLocalizedString& = KLocalizedString (), const QByteArray& = QByteArray (), const QByteArray& = "submit@bugs.kde.org");
                         KAboutData (const KAboutData&);
    KAboutData&          addAuthor (const KLocalizedString&, const KLocalizedString& = KLocalizedString (), const QByteArray& = QByteArray (), const QByteArray& = QByteArray ());
    KAboutData&          addCredit (const KLocalizedString&, const KLocalizedString& = KLocalizedString (), const QByteArray& = QByteArray (), const QByteArray& = QByteArray ());
    KAboutData&          setTranslator (const KLocalizedString&, const KLocalizedString&);
    KAboutData&          setLicenseText (const KLocalizedString&);
    KAboutData&          setLicenseTextFile (const QString&);
    KAboutData&          setAppName (const QByteArray&);
    KAboutData&          setProgramName (const KLocalizedString&);
    KAboutData&          setProgramLogo (const QVariant&);
    KAboutData&          setVersion (const QByteArray&);
    KAboutData&          setShortDescription (const KLocalizedString&);
    KAboutData&          setCatalogName (const QByteArray&);
    KAboutData&          setLicense (KAboutData::LicenseKey);
    KAboutData&          setCopyrightStatement (const KLocalizedString&);
    KAboutData&          setOtherText (const KLocalizedString&);
    KAboutData&          setHomepage (const QByteArray&);
    KAboutData&          setBugAddress (const QByteArray&);
    KAboutData&          setOrganizationDomain (const QByteArray&);
    KAboutData&          setProductName (const QByteArray&);
    QString              appName () const;
    QString              productName () const;
    QString              programName () const;
    QString              organizationDomain () const;
    const char*          internalProgramName () const;
    void                 translateInternalProgramName () const;
    QVariant             programLogo () const;
    QString              version () const;
    const char*          internalVersion () const;
    QString              shortDescription () const;
    QString              catalogName () const;
    QString              homepage () const;
    QString              bugAddress () const;
    const char*          internalBugAddress () const;
    const QList<KAboutPerson> authors () const;
    const QList<KAboutPerson> credits () const;
    QList<KAboutPerson>  translators () const;
    static QString       aboutTranslationTeam ();
    QString              otherText () const;
    QString              license () const;
    QString              licenseName (KAboutData::NameFormat) const;
    QString              copyrightStatement () const;
    QString              customAuthorPlainText () const;
    QString              customAuthorRichText () const;
    bool                 customAuthorTextEnabled () const;
    KAboutData&          setCustomAuthorText (const KLocalizedString&, const KLocalizedString&);
    KAboutData&          unsetCustomAuthorText ();

};  // class KAboutData

