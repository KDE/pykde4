//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module kdeui  version KDE 4.0.2

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KPixmapCache
{
%TypeHeaderCode
#include <kpixmapcache.h>
%End

private:
                            KPixmapCache (const KPixmapCache& other);

public:
    explicit                KPixmapCache (const QString& name);
    virtual bool            find (const QString& key, QPixmap& pix);
    virtual void            insert (const QString& key, const QPixmap& pix);
    QPixmap                 loadFromFile (const QString& filename);
    QPixmap                 loadFromSvg (const QString& filename, const QSize& size = QSize());
    unsigned int            timestamp () const;
    void                    setTimestamp (unsigned int time);
    void                    setUseQPixmapCache (bool use);
    bool                    useQPixmapCache () const;
    int                     size () const;
    int                     cacheLimit () const;
    void                    setCacheLimit (int kbytes);

    enum RemoveStrategy
    {
        RemoveOldest,
        RemoveSeldomUsed,
        RemoveLeastRecentlyUsed
    };

    KPixmapCache::RemoveStrategy  removeEntryStrategy () const;
    void                    setRemoveEntryStrategy (KPixmapCache::RemoveStrategy strategy);
    bool                    isEnabled () const;
    bool                    isValid () const;
    static void             deleteCache (const QString& name);
    void                    discard ();
    void                    removeEntries (int newsize = 0);

protected:
    void                    ensureInited () const;
    virtual bool            loadCustomData (QDataStream& stream);
    virtual bool            writeCustomData (QDataStream& stream);
    virtual bool            loadCustomIndexHeader (QDataStream& stream);
    virtual void            writeCustomIndexHeader (QDataStream& stream);
    void                    setValid (bool valid);
    bool                    recreateCacheFiles ();
};   // KPixmapCache


