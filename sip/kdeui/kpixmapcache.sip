//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KPixmapCache
{
%TypeHeaderCode
#include <kpixmapcache.h>
%End


public:
                         KPixmapCache (const QString&);
    virtual bool         find (const QString&, QPixmap&);
    virtual void         insert (const QString&, const QPixmap&);
    QPixmap              loadFromFile (const QString&);

    QPixmap              loadFromSvg (const QString&, const QSize& = QSize ());

    uint                 timestamp () const;
    void                 setTimestamp (uint);
    void                 setUseQPixmapCache (bool);
    bool                 useQPixmapCache () const;
    int                  size () const;
    int                  cacheLimit () const;
    void                 setCacheLimit (int);

    enum RemoveStrategy
    {
        RemoveOldest, 
        RemoveSeldomUsed, 
        RemoveLeastRecentlyUsed
    };

    KPixmapCache::RemoveStrategy removeEntryStrategy () const;
    void                 setRemoveEntryStrategy (KPixmapCache::RemoveStrategy);
    bool                 isEnabled () const;
    bool                 isValid () const;
    static void          deleteCache (const QString&);
    void                 discard ();
    void                 removeEntries (int = 0);

protected:
    void                 init ();
    bool                 loadData (int, QPixmap&);
    virtual bool         loadCustomData (QDataStream&);
    int                  writeData (const QString&, const QPixmap&);
    virtual bool         writeCustomData (QDataStream&);
    void                 writeIndex (const QString&, int);
    virtual bool         loadCustomIndexHeader (QDataStream&);
    virtual void         writeCustomIndexHeader (QDataStream&);
    void                 setValid (bool);
    void                 ensureInited () const;
    bool                 recreateCacheFiles ();

public:



};  // class KPixmapCache

