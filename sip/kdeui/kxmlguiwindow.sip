//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KXmlGuiWindow : KMainWindow, KXMLGUIBuilder, KXMLGUIClient
{
%TypeHeaderCode
#include <kxmlguiwindow.h>
%End


public:
                         KXmlGuiWindow (QWidget* /TransferThis/ = 0, Qt::WindowFlags = 0);
    void                 setHelpMenuEnabled (bool = 1);
    bool                 isHelpMenuEnabled ();
    virtual KXMLGUIFactory* guiFactory ();
    void                 createGUI (const QString& = QString ());
    void                 setStandardToolBarMenuEnabled (bool);
    bool                 isStandardToolBarMenuEnabled () const;
    void                 createStandardStatusBarAction ();

    enum StandardWindowOption
    {
        ToolBar, 
        Keys, 
        StatusBar, 
        Save, 
        Create, 
        Default
    };

    typedef QFlags<KXmlGuiWindow::StandardWindowOption> StandardWindowOptions;
    void                 setupGUI (KXmlGuiWindow::StandardWindowOptions = KXmlGuiWindow::Default , const QString& = QString ());
    void                 setupGUI (const QSize&, KXmlGuiWindow::StandardWindowOptions = KXmlGuiWindow::Default , const QString& = QString ());
    QAction*             toolBarMenuAction ();
    void                 setupToolbarMenuActions ();
    virtual void         finalizeGUI (KXMLGUIClient*);
    void                 finalizeGUI (bool);
    virtual void         applyMainWindowSettings (const KConfigGroup&, bool = 0);

public slots:
    virtual void         configureToolbars ();
    virtual void         slotStateChanged (const QString&);
    void                 slotStateChanged (const QString&, bool);

protected:
    virtual bool         event (QEvent*);

protected slots:
    virtual void         saveNewToolbarConfig ();

};  // class KXmlGuiWindow

