//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KComponentData
{
%TypeHeaderCode
#include <kcomponentdata.h>
%End


public:
                            KComponentData ();
                            KComponentData (const KComponentData&);
    bool                    operator == (const KComponentData&) const;
    bool                    operator != (const KComponentData& rhs) const;

    enum MainComponentRegistration
    {
        RegisterAsMainComponent,
        SkipMainComponentRegistration
    };

    explicit                KComponentData (const QByteArray& componentName, const QByteArray& catalogName = QByteArray(), KComponentData::MainComponentRegistration registerAsMain = KComponentData::RegisterAsMainComponent);
    explicit                KComponentData (const KAboutData& aboutData, KComponentData::MainComponentRegistration registerAsMain = KComponentData::RegisterAsMainComponent);
    explicit                KComponentData (const KAboutData* aboutData, KComponentData::MainComponentRegistration registerAsMain = KComponentData::RegisterAsMainComponent);
    bool                    isValid () const;
    KStandardDirs*          dirs () const;
    const KSharedConfig::Ptr&  config () const;
    const KAboutData*       aboutData () const;
    QString                 componentName () const;
    QString                 catalogName () const;

protected:
    void                    setConfigName (const QString& name);
//ig    virtual void            virtual_hook (int id, void* data);
public:
    ~KComponentData ();
    void                    setAboutData (const KAboutData& aboutData);
};
// KComponentData


