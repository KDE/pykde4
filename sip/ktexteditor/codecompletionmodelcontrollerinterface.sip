// Copyright 2011 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace KTextEditor
{
class CodeCompletionModelControllerInterface3
{
%TypeHeaderCode
#include <ktexteditor/codecompletionmodelcontrollerinterface.h>
%End

public:
                            CodeCompletionModelControllerInterface3 ();
    virtual ~CodeCompletionModelControllerInterface3 ();
    virtual bool            shouldStartCompletion (KTextEditor::View* view, const QString& insertedText, bool userInsertion, const KTextEditor::Cursor& position);
    virtual KTextEditor::Range  completionRange (KTextEditor::View* view, const KTextEditor::Cursor& position);
    virtual KTextEditor::Range  updateCompletionRange (KTextEditor::View* view, const KTextEditor::Range& range);
    virtual QString         filterString (KTextEditor::View* view, const KTextEditor::Range& range, const KTextEditor::Cursor& position);
    virtual bool            shouldAbortCompletion (KTextEditor::View* view, const KTextEditor::Range& range, const QString& currentCompletion);
    virtual bool            shouldExecute (const QModelIndex& selected, QChar inserted);
    virtual void            aborted (KTextEditor::View* view);
    enum MatchReaction
    {
        None,
        HideListIfAutomaticInvocation,
        ForExtension
    };
    virtual KTextEditor::CodeCompletionModelControllerInterface3::MatchReaction  matchingItem (const QModelIndex& matched);
};
};
