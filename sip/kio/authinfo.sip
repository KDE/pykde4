//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module kio  version KDE 4.0.2

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KIO
{

class AuthInfo
{
%TypeHeaderCode
#include <authinfo.h>
%End


public:
                            AuthInfo ();
                            AuthInfo (const KIO::AuthInfo& info);
    bool                    isModified () const;
    void                    setModified (bool flag);
    KUrl url;
    QString username;
    QString password;
    QString prompt;
    QString caption;
    QString comment;
    QString commentLabel;
    QString realmValue;
    QString digestInfo;
    bool verifyPath;
    bool readOnly;
    bool keepPassword;
};   // AuthInfo


class NetRC
{
%TypeHeaderCode
#include <authinfo.h>
%End


public:

    enum LookUpModeFlag
    {
        exactOnly,
        defaultOnly,
        presetOnly
    };

    typedef QFlags<KIO::NetRC::LookUpModeFlag> LookUpMode;


    class AutoLogin
    {

    public:
        QString type;
        QString machine;
        QString login;
        QString password;
        QMap<QString,QStringList> macdef;
    };   // AutoLogin


public:
    static KIO::NetRC*      self ();
    bool                    lookup (const KUrl& url, KIO::NetRC::AutoLogin& login, bool userealnetrc = 0, const QString& type = QString(), KIO::NetRC::LookUpMode mode = KIO::NetRC::LookUpMode(KIO::NetRC::exactOnly)|KIO::NetRC::defaultOnly);
    void                    reload ();

protected:
//ig     QString            extract (const char*, const char*, int&);
    int                     openf (const QString&);
    bool                    parse (int);

private:
                            NetRC ();
                            ~NetRC ();
};   // NetRC

};   // KIO


