//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KLineEdit : QLineEdit, KCompletionBase
{
%TypeHeaderCode
#include <klineedit.h>
%End


public:
                         KLineEdit (const QString&, QWidget* /TransferThis/ = 0);
                         KLineEdit (QWidget* /TransferThis/ = 0);
    void                 setUrl (const KUrl&);
    virtual void         setCompletionMode (KGlobalSettings::Completion);
    void                 setCompletionModeDisabled (KGlobalSettings::Completion, bool = 1);
    virtual void         setContextMenuEnabled (bool);
    bool                 isContextMenuEnabled () const;
    void                 setUrlDropsEnabled (bool);
    bool                 urlDropsEnabled () const;
    void                 setTrapReturnKey (bool);
    bool                 trapReturnKey () const;
    virtual bool         eventFilter (QObject*, QEvent*);
    KCompletionBox*      completionBox (bool = 1);
    virtual void         setCompletionObject (KCompletion*, bool = 1);
    virtual void         copy () const;
    void                 setSqueezedTextEnabled (bool);
    bool                 isSqueezedTextEnabled () const;
    QString              originalText () const;
    void                 setCompletionBox (KCompletionBox*);
    void                 setClickMessage (const QString&);
    QString              clickMessage () const;
    void                 setClearButtonShown (bool);
    bool                 isClearButtonShown () const;

signals:
    void                 completionBoxActivated (const QString&);
    void                 returnPressed (const QString&);
    void                 completion (const QString&);
    void                 substringCompletion (const QString&);
    void                 textRotation (KCompletionBase::KeyBindingType);
    void                 completionModeChanged (KGlobalSettings::Completion);
    void                 aboutToShowContextMenu (QMenu*);
    void                 clearButtonClicked ();

public slots:
    virtual void         setReadOnly (bool);
    void                 rotateText (KCompletionBase::KeyBindingType);
    virtual void         setCompletedText (const QString&);
    void                 setCompletedItems (const QStringList&, bool = 1);
    virtual void         clear ();
    void                 setSqueezedText (const QString&);
    virtual void         setText (const QString&);
    void                 setPasswordMode (bool = 1);
    bool                 passwordMode () const;

protected slots:
    virtual void         makeCompletion (const QString&);
    void                 userCancelled (const QString&);

protected:
    virtual void         resizeEvent (QResizeEvent*);
    virtual void         keyPressEvent (QKeyEvent*);
    virtual void         mousePressEvent (QMouseEvent*);
    virtual void         mouseReleaseEvent (QMouseEvent*);
    virtual void         mouseDoubleClickEvent (QMouseEvent*);
    virtual void         contextMenuEvent (QContextMenuEvent*);
    QMenu*               createStandardContextMenu ();
    virtual void         dropEvent (QDropEvent*);
    virtual void         setCompletedText (const QString&, bool);
    void                 setUserSelection (bool);
    virtual void         create (WId = 0, bool = 1, bool = 1);
    bool                 autoSuggest () const;
    virtual void         paintEvent (QPaintEvent*);
    virtual void         focusInEvent (QFocusEvent*);
    virtual void         focusOutEvent (QFocusEvent*);

};  // class KLineEdit

