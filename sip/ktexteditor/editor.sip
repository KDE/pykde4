//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
#include <ktexteditor/editor.h>
%End

namespace KTextEditor
{

class Editor : QObject
{
%TypeHeaderCode
#include <ktexteditor/editor.h>
#include <ktexteditor/commandinterface.h>
#include <ktexteditor/containerinterface.h>
%End

public:
                            Editor (QObject* parent /TransferThis/);

    virtual KTextEditor::Document*  createDocument (QObject* parent /Transfer/)=0;
    virtual const QList<KTextEditor::Document*>&  documents ()=0;

    virtual const KAboutData*  aboutData () const=0;

    virtual void            readConfig (KConfig* config = 0)=0;
    virtual void            writeConfig (KConfig* config = 0)=0;
    virtual bool            configDialogSupported () const=0;
    virtual void            configDialog (QWidget* parent /Transfer/)=0;
    virtual int             configPages () const=0;
    virtual KTextEditor::ConfigPage*  configPage (int number, QWidget* parent /Transfer/)=0;
    virtual QString         configPageName (int number) const=0;
    virtual QString         configPageFullName (int number) const=0;
    virtual KIcon           configPageIcon (int number) const=0;

signals:
    void                    documentCreated (KTextEditor::Editor* editor, KTextEditor::Document* document);

public:
    virtual ~Editor ();
    void                    setSimpleMode (bool on);
    bool                    simpleMode () const;
    const QString&          defaultEncoding () const;

    KTextEditor::CommandInterface *commandInterface();
%MethodCode
    Py_BEGIN_ALLOW_THREADS
    sipRes = dynamic_cast<KTextEditor::CommandInterface*>(sipCpp);
    Py_END_ALLOW_THREADS
%End

    KTextEditor::ContainerInterface *containerInterface();
%MethodCode
    Py_BEGIN_ALLOW_THREADS
    sipRes = dynamic_cast<KTextEditor::ContainerInterface*>(sipCpp);
    Py_END_ALLOW_THREADS
%End

protected:
    void                    setDefaultEncoding (const QString& defaultEncoding);
};
// class Editor

KTextEditor::Editor*    editor (const char* libname);
};
// namespace KTextEditor

