//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLBodyElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_base.h>
%End


public:
                            HTMLBodyElement ();
                            HTMLBodyElement (const DOM::HTMLBodyElement& other);
                            HTMLBodyElement (const DOM::Node& other);

protected:
//ig                            HTMLBodyElement (HTMLBodyElementImpl* impl);

public:
    DOM::DOMString          aLink () const;
    void                    setALink (const DOM::DOMString&);
    DOM::DOMString          background () const;
    void                    setBackground (const DOM::DOMString&);
    DOM::DOMString          bgColor () const;
    void                    setBgColor (const DOM::DOMString&);
    DOM::DOMString          link () const;
    void                    setLink (const DOM::DOMString&);
    DOM::DOMString          text () const;
    void                    setText (const DOM::DOMString&);
    DOM::DOMString          vLink () const;
    void                    setVLink (const DOM::DOMString&);
    ~HTMLBodyElement ();
};
// HTMLBodyElement


class HTMLFrameElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_base.h>
%End


public:
                            HTMLFrameElement ();
                            HTMLFrameElement (const DOM::HTMLFrameElement& other);
                            HTMLFrameElement (const DOM::Node& other);

protected:
//ig                            HTMLFrameElement (HTMLFrameElementImpl* impl);

public:
    DOM::DOMString          frameBorder () const;
    void                    setFrameBorder (const DOM::DOMString&);
    DOM::DOMString          longDesc () const;
    void                    setLongDesc (const DOM::DOMString&);
    DOM::DOMString          marginHeight () const;
    void                    setMarginHeight (const DOM::DOMString&);
    DOM::DOMString          marginWidth () const;
    void                    setMarginWidth (const DOM::DOMString&);
    DOM::DOMString          name () const;
    void                    setName (const DOM::DOMString&);
    bool                    noResize () const;
    void                    setNoResize (bool);
    DOM::DOMString          scrolling () const;
    void                    setScrolling (const DOM::DOMString&);
    DOM::DOMString          src () const;
    void                    setSrc (const DOM::DOMString&);
    DOM::Document           contentDocument () const;
    ~HTMLFrameElement ();
};
// HTMLFrameElement


class HTMLFrameSetElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_base.h>
%End


public:
                            HTMLFrameSetElement ();
                            HTMLFrameSetElement (const DOM::HTMLFrameSetElement& other);
                            HTMLFrameSetElement (const DOM::Node& other);

protected:
//ig                            HTMLFrameSetElement (HTMLFrameSetElementImpl* impl);

public:
    DOM::DOMString          cols () const;
    void                    setCols (const DOM::DOMString&);
    DOM::DOMString          rows () const;
    void                    setRows (const DOM::DOMString&);
    ~HTMLFrameSetElement ();
};
// HTMLFrameSetElement


class HTMLIFrameElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_base.h>
%End


public:
                            HTMLIFrameElement ();
                            HTMLIFrameElement (const DOM::HTMLIFrameElement& other);
                            HTMLIFrameElement (const DOM::Node& other);

protected:
//ig                            HTMLIFrameElement (HTMLIFrameElementImpl* impl);

public:
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    DOM::DOMString          frameBorder () const;
    void                    setFrameBorder (const DOM::DOMString&);
    DOM::DOMString          height () const;
    void                    setHeight (const DOM::DOMString&);
    DOM::DOMString          longDesc () const;
    void                    setLongDesc (const DOM::DOMString&);
    DOM::DOMString          marginHeight () const;
    void                    setMarginHeight (const DOM::DOMString&);
    DOM::DOMString          marginWidth () const;
    void                    setMarginWidth (const DOM::DOMString&);
    DOM::DOMString          name () const;
    void                    setName (const DOM::DOMString&);
    DOM::DOMString          scrolling () const;
    void                    setScrolling (const DOM::DOMString&);
    DOM::DOMString          src () const;
    void                    setSrc (const DOM::DOMString&);
    DOM::DOMString          width () const;
    void                    setWidth (const DOM::DOMString&);
    DOM::Document           contentDocument () const;
    ~HTMLIFrameElement ();
};
// HTMLIFrameElement


class HTMLHeadElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_base.h>
%End


public:
                            HTMLHeadElement ();
                            HTMLHeadElement (const DOM::HTMLHeadElement& other);
                            HTMLHeadElement (const DOM::Node& other);

protected:
//ig                            HTMLHeadElement (HTMLHeadElementImpl* impl);

public:
    DOM::DOMString          profile () const;
    void                    setProfile (const DOM::DOMString&);
    ~HTMLHeadElement ();
};
// HTMLHeadElement


class HTMLHtmlElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_base.h>
%End


public:
                            HTMLHtmlElement ();
                            HTMLHtmlElement (const DOM::HTMLHtmlElement& other);
                            HTMLHtmlElement (const DOM::Node& other);

protected:
//ig                            HTMLHtmlElement (HTMLHtmlElementImpl* impl);

public:
    DOM::DOMString          version () const;
    void                    setVersion (const DOM::DOMString&);
    ~HTMLHtmlElement ();
};
// HTMLHtmlElement

};
// DOM


