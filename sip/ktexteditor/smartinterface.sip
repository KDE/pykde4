//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KTextEditor
{

class SmartInterface /Abstract/
{
%TypeHeaderCode
#include <ktexteditor/smartinterface.h>
%End


public:
                            SmartInterface ();
    QMutex*                 smartMutex () const;
    virtual void            clearSmartInterface ()=0;
    bool                    clearOnDocumentReload () const;
    void                    setClearOnDocumentReload (bool clearOnReload);
    virtual int             currentRevision () const=0;
    virtual void            releaseRevision (int revision) const=0;
    virtual void            useRevision (int revision)=0;
    void                    clearRevision ();
    virtual KTextEditor::Cursor  translateFromRevision (const KTextEditor::Cursor& cursor, KTextEditor::SmartCursor::InsertBehavior insertBehavior = KTextEditor::SmartCursor::StayOnInsert) const;
    virtual KTextEditor::SmartCursor*  newSmartCursor (const KTextEditor::Cursor& position = KTextEditor::Cursor::start(), KTextEditor::SmartCursor::InsertBehavior insertBehavior = KTextEditor::SmartCursor::MoveOnInsert)=0;
    KTextEditor::SmartCursor*  newSmartCursor (int line, int column, KTextEditor::SmartCursor::InsertBehavior insertBehavior = KTextEditor::SmartCursor::MoveOnInsert);
    virtual void            deleteCursors ()=0;
    virtual KTextEditor::SmartRange*  newSmartRange (const KTextEditor::Range& range = KTextEditor::Range(), KTextEditor::SmartRange* parent = 0, KTextEditor::SmartRange::InsertBehaviors insertBehavior = KTextEditor::SmartRange::DoNotExpand)=0;
    KTextEditor::SmartRange*  newSmartRange (const KTextEditor::Cursor& startPosition, const KTextEditor::Cursor& endPosition, KTextEditor::SmartRange* parent = 0, KTextEditor::SmartRange::InsertBehaviors insertBehavior = KTextEditor::SmartRange::DoNotExpand);
    KTextEditor::SmartRange*  newSmartRange (int startLine, int startColumn, int endLine, int endColumn, KTextEditor::SmartRange* parent = 0, KTextEditor::SmartRange::InsertBehaviors insertBehavior = KTextEditor::SmartRange::DoNotExpand);
    virtual KTextEditor::SmartRange*  newSmartRange (KTextEditor::SmartCursor* start, KTextEditor::SmartCursor* end, KTextEditor::SmartRange* parent = 0, KTextEditor::SmartRange::InsertBehaviors insertBehavior = KTextEditor::SmartRange::DoNotExpand)=0;
    virtual void            unbindSmartRange (KTextEditor::SmartRange* range)=0;
    virtual void            deleteRanges ()=0;
    virtual void            addHighlightToDocument (KTextEditor::SmartRange* topRange, bool supportDynamic = 0)=0;
    virtual void            removeHighlightFromDocument (KTextEditor::SmartRange* topRange)=0;
    virtual const QList<KTextEditor::SmartRange*>  documentHighlights () const=0;
    virtual void            clearDocumentHighlights ()=0;
    virtual void            addHighlightToView (KTextEditor::View* view, KTextEditor::SmartRange* topRange, bool supportDynamic = 0)=0;
    virtual void            removeHighlightFromView (KTextEditor::View* view, KTextEditor::SmartRange* topRange)=0;
    virtual const QList<KTextEditor::SmartRange*>  viewHighlights (KTextEditor::View* view) const=0;
    virtual void            clearViewHighlights (KTextEditor::View* view)=0;
    virtual void            addActionsToDocument (KTextEditor::SmartRange* topRange)=0;
    virtual void            removeActionsFromDocument (KTextEditor::SmartRange* topRange)=0;
    virtual const QList<KTextEditor::SmartRange*>  documentActions () const=0;
    virtual void            clearDocumentActions ()=0;
    virtual void            addActionsToView (KTextEditor::View* view, KTextEditor::SmartRange* topRange)=0;
    virtual void            removeActionsFromView (KTextEditor::View* view, KTextEditor::SmartRange* topRange)=0;
    virtual const QList<KTextEditor::SmartRange*>  viewActions (KTextEditor::View* view) const=0;
    virtual void            clearViewActions (KTextEditor::View* view)=0;

protected:
    virtual void            attributeDynamic (KTextEditor::Attribute::Ptr a)=0;
    virtual void            attributeNotDynamic (KTextEditor::Attribute::Ptr a)=0;

public:
    virtual ~SmartInterface ();
    virtual KTextEditor::Range  translateFromRevision (const KTextEditor::Range& range, KTextEditor::SmartRange::InsertBehaviors insertBehavior = KTextEditor::SmartRange::ExpandLeft|KTextEditor::SmartRange::ExpandRight) const;
};
// class SmartInterface

};
// namespace KTextEditor

