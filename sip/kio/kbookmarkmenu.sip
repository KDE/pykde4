//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KBookmarkMenu : QObject
{
%TypeHeaderCode
#include <kbookmarkmenu.h>
%End


public:
                         KBookmarkMenu (KBookmarkManager*, KBookmarkOwner*, KMenu*, KActionCollection*);

                         KBookmarkMenu (KBookmarkManager*, KBookmarkOwner*, KMenu*, const QString&);

    void                 ensureUpToDate ();

public slots:
    void                 slotBookmarksChanged (const QString&);

protected slots:
    void                 slotAboutToShow ();
    void                 slotAddBookmarksList ();
    void                 slotAddBookmark ();
    void                 slotNewFolder ();

protected:
    virtual void         clear ();
    virtual void         refill ();
    virtual QAction*     actionForBookmark (const KBookmark&);

    virtual KMenu*       contextMenu (const KBookmark&);

    void                 addActions ();
    void                 fillBookmarks ();
    void                 addAddBookmark ();
    void                 addAddBookmarksList ();
    void                 addEditBookmarks ();
    void                 addNewFolder ();

    bool                 isRoot () const;
    bool                 isDirty () const;
    QString              parentAddress () const;
    KBookmarkManager*    manager () const;
    KBookmarkOwner*      owner () const;
    KMenu*               parentMenu () const;


protected slots:



protected:



};  // class KBookmarkMenu



class KBookmarkContextMenu : KMenu
{
%TypeHeaderCode
#include <kbookmarkmenu.h>
%End

public:
                         KBookmarkContextMenu (const KBookmark&, KBookmarkManager*, KBookmarkOwner*, QWidget* /TransferThis/ = 0);
    virtual void         addActions ();

public slots:
    void                 slotEditAt ();
    void                 slotProperties ();
    void                 slotInsert ();
    void                 slotRemove ();
    void                 slotCopyLocation ();

protected:
    void                 addBookmark ();
    void                 addFolderActions ();
    void                 addProperties ();
    void                 addBookmarkActions ();
    KBookmarkManager*    manager () const;
    KBookmarkOwner*      owner () const;
    KBookmark            bookmark () const;

};  // class KBookmarkContextMenu



class KBookmarkActionInterface
{
%TypeHeaderCode
#include <kbookmarkmenu.h>
%End


public:
                         KBookmarkActionInterface (const KBookmark&);

    const KBookmark      bookmark () const;


public:



protected:



};  // class KBookmarkActionInterface


class KBookmarkActionMenu : KActionMenu, KBookmarkActionInterface
{
%TypeHeaderCode
#include <kbookmarkmenu.h>
%End


public:
                         KBookmarkActionMenu (const KBookmark&, QObject* /TransferThis/);
                         KBookmarkActionMenu (const KBookmark&, const QString&, QObject* /TransferThis/);

public:



};  // class KBookmarkActionMenu


class KBookmarkAction : KAction, KBookmarkActionInterface
{
%TypeHeaderCode
#include <kbookmarkmenu.h>
%End


public:
                         KBookmarkAction (const KBookmark&, KBookmarkOwner*, QObject* /TransferThis/);

public slots:
    void                 slotSelected (Qt::MouseButtons, Qt::KeyboardModifiers);

public:



};  // class KBookmarkAction





