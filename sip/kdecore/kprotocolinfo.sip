//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdecore  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KProtocolInfo : KSycocaEntry
{
%TypeHeaderCode
#include <kprotocolinfo.h>
%End


public:
    typedef KSharedPtr<KProtocolInfo> Ptr;

public:
    static QStringList   protocols ();
    static bool          isKnownProtocol (const KUrl&);
    static bool          isKnownProtocol (const QString&);
    static QString       exec (const QString&);

    enum Type
    {
        T_STREAM, 
        T_FILESYSTEM, 
        T_NONE, 
        T_ERROR
    };


public:



    class ExtraField
    {

    public:

        enum Type
        {
            String, 
            DateTime, 
            Invalid
        };

                             ExtraField ();
                             ExtraField (const QString&, KProtocolInfo::ExtraField::Type);
        QString              name;
        KProtocolInfo::ExtraField::Type type;

    };  // class ExtraField


public:
    typedef QList<KProtocolInfo::ExtraField> ExtraFieldList;
    static KProtocolInfo::ExtraFieldList extraFields (const KUrl&);
    static bool          isHelperProtocol (const KUrl&);
    static bool          isHelperProtocol (const QString&);
    static bool          isFilterProtocol (const KUrl&);
    static bool          isFilterProtocol (const QString&);
    static QString       icon (const QString&);
    static QString       config (const QString&);
    static int           maxSlaves (const QString&);
    static bool          determineMimetypeFromExtension (const QString&);
    static QString       docPath (const QString&);
    static QString       protocolClass (const QString&);
    static bool          showFilePreview (const QString&);
    static QStringList   capabilities (const QString&);
    static QString       proxiedBy (const QString&);

public:
                         KProtocolInfo (QDataStream&, int);

    enum FileNameUsedForCopying
    {
        Name, 
        FromUrl
    };

    bool                 supportsListing () const;
    QString              defaultMimeType () const;

protected:
    bool                 canRenameFromFile () const;
    bool                 canRenameToFile () const;
    bool                 canDeleteRecursive () const;
    KProtocolInfo::FileNameUsedForCopying fileNameUsedForCopying () const;

private:
                         KProtocolInfo (const QString&);

public:



protected:



};  // class KProtocolInfo

//igx QDataStream&         operator >> (QDataStream&, KProtocolInfo::ExtraField&);
//igx QDataStream&         operator << (QDataStream&, const KProtocolInfo::ExtraField&);
