//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module khtml  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLBlockquoteElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                         HTMLBlockquoteElement ();
                         HTMLBlockquoteElement (const DOM::HTMLBlockquoteElement&);
                         HTMLBlockquoteElement (const DOM::Node&);

protected:
//ig                          HTMLBlockquoteElement (HTMLElementImpl*);

public:
    DOM::DOMString       cite () const;
    void                 setCite (const DOM::DOMString&);

};  // class HTMLBlockquoteElement


class HTMLDivElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                         HTMLDivElement ();
                         HTMLDivElement (const DOM::HTMLDivElement&);
                         HTMLDivElement (const DOM::Node&);

protected:
//ig                          HTMLDivElement (HTMLDivElementImpl*);

public:
    DOM::DOMString       align () const;
    void                 setAlign (const DOM::DOMString&);

};  // class HTMLDivElement


class HTMLHRElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                         HTMLHRElement ();
                         HTMLHRElement (const DOM::HTMLHRElement&);
                         HTMLHRElement (const DOM::Node&);

protected:
//ig                          HTMLHRElement (HTMLHRElementImpl*);

public:
    DOM::DOMString       align () const;
    void                 setAlign (const DOM::DOMString&);
    bool                 noShade () const;
    void                 setNoShade (bool);
    DOM::DOMString       size () const;
    void                 setSize (const DOM::DOMString&);
    DOM::DOMString       width () const;
    void                 setWidth (const DOM::DOMString&);

};  // class HTMLHRElement


class HTMLHeadingElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                         HTMLHeadingElement ();
                         HTMLHeadingElement (const DOM::HTMLHeadingElement&);
                         HTMLHeadingElement (const DOM::Node&);

protected:
//ig                          HTMLHeadingElement (HTMLElementImpl*);

public:
    DOM::DOMString       align () const;
    void                 setAlign (const DOM::DOMString&);

};  // class HTMLHeadingElement


class HTMLParagraphElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                         HTMLParagraphElement ();
                         HTMLParagraphElement (const DOM::HTMLParagraphElement&);
                         HTMLParagraphElement (const DOM::Node&);

protected:
//ig                          HTMLParagraphElement (HTMLElementImpl*);

public:
    DOM::DOMString       align () const;
    void                 setAlign (const DOM::DOMString&);

};  // class HTMLParagraphElement


class HTMLPreElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                         HTMLPreElement ();
                         HTMLPreElement (const DOM::HTMLPreElement&);
                         HTMLPreElement (const DOM::Node&);

protected:
//ig                          HTMLPreElement (HTMLPreElementImpl*);

public:
    long                 width () const;
    void                 setWidth (long);

};  // class HTMLPreElement


class HTMLLayerElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_block.h>
%End


public:
                         HTMLLayerElement ();
                         HTMLLayerElement (const DOM::HTMLLayerElement&);
                         HTMLLayerElement (const DOM::Node&);

protected:
//igx                          HTMLLayerElement (HTMLLayerElementImpl*);

public:
    long                 top () const;
    void                 setTop (long);
    long                 left () const;
    void                 setLeft (long);
    DOM::DOMString       visibility () const;
    void                 setVisibility (const DOM::DOMString&);
    DOM::DOMString       bgColor () const;
    void                 setBgColor (const DOM::DOMString&);
    DOM::HTMLCollection  layers () const;

};  // class HTMLLayerElement

};  // namespace DOM

