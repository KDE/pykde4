// Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.


namespace Plasma
{

class Svg : QObject
{
%TypeHeaderCode
#include <plasma/svg.h>
%End


public:
    explicit                Svg (QObject* parent /TransferThis/ = 0);
    QPixmap                 pixmap (const QString& elementID = QString());
    void                    paint (QPainter* painter, const QPointF& point, const QString& elementID = QString());
    void                    paint (QPainter* painter, int x, int y, const QString& elementID = QString());
    void                    paint (QPainter* painter, const QRectF& rect, const QString& elementID = QString());
    void                    paint (QPainter* painter, int x, int y, int width, int height, const QString& elementID = QString());
    QSize                   size () const;
    void                    resize (qreal width, qreal height);
    void                    resize (const QSizeF& size);
    void                    resize ();
    QSize                   elementSize (const QString& elementId) const;
    QRectF                  elementRect (const QString& elementId) const;
    bool                    hasElement (const QString& elementId) const;
    QString                 elementAtPoint (const QPoint& point) const;
    bool                    isValid () const;
    void                    setContainsMultipleImages (bool multiple);
    bool                    containsMultipleImages () const;
    void                    setImagePath (const QString& svgFilePath);
    QString                 imagePath () const;
    void                    setUsingRenderingCache (bool useCache);
    bool                    isUsingRenderingCache () const;
    void                    setTheme (Plasma::Theme* theme);
    Plasma::Theme*          theme () const;

signals:
    void                    repaintNeeded ();
};   // Svg

};   // Plasma


