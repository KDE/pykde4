//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Solid
{

class OpticalDrive : Solid::StorageDrive
{
%TypeHeaderCode
#include <opticaldrive.h>
%End



public:
    enum MediumType
    {
        Cdr,
        Cdrw,
        Dvd,
        Dvdr,
        Dvdrw,
        Dvdram,
        Dvdplusr,
        Dvdplusrw,
        Dvdplusdl,
        Dvdplusdlrw,
        Bd,
        Bdr,
        Bdre,
        HdDvd,
        HdDvdr,
        HdDvdrw
    };

    typedef QFlags<Solid::OpticalDrive::MediumType> MediumTypes;


private:
    explicit                OpticalDrive (QObject* backendObject);

public:
    static Solid::DeviceInterface::Type  deviceInterfaceType ();
    Solid::OpticalDrive::MediumTypes  supportedMedia () const;
    int                     readSpeed () const;
    int                     writeSpeed () const;
    QList<int>              writeSpeeds () const;
    bool                    eject ();

signals:
    void                    ejectPressed (const QString& udi);
    void                    ejectDone (Solid::ErrorType error, QVariant errorData, const QString& udi);
public:
    ~OpticalDrive ();
signals:
    void                    ejectRequested (const QString& udi);
};
// OpticalDrive

};
// Solid


