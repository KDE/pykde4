//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module kio  version KDE 4.1.0

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KUrlCompletion : KCompletion
{
%TypeHeaderCode
#include <kurlcompletion.h>
%End


public:

    enum Mode
    {
        ExeCompletion,
        FileCompletion,
        DirCompletion
    };

                            KUrlCompletion ();
                            KUrlCompletion (KUrlCompletion::Mode);
    virtual QString         makeCompletion (const QString& text);
    virtual void            setDir (const QString& dir);
    virtual QString         dir () const;
    virtual bool            isRunning () const;
    virtual void            stop ();
    virtual KUrlCompletion::Mode  mode () const;
    virtual void            setMode (KUrlCompletion::Mode mode);
    virtual bool            replaceEnv () const;
    virtual void            setReplaceEnv (bool replace);
    virtual bool            replaceHome () const;
    virtual void            setReplaceHome (bool replace);
    QString                 replacedPath (const QString& text) const;
    static QString          replacedPath (const QString& text, bool replaceHome, bool replaceEnv = 1);

protected:
    void                    postProcessMatch (QString* match) const;
    void                    postProcessMatches (QStringList* matches) const;
//ig     void               postProcessMatches (KCompletionMatches* matches) const;
    virtual void            customEvent (QEvent* e);
};   // KUrlCompletion


