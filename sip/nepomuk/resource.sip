//
//     Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine
//            PyKDE4 module nepomuk  version KDE 4.1.0

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Nepomuk
{

enum ErrorCode
{
    NoError,
    CommunicationError,
    InvalidType,
    UnknownError
};

QString                 errorString (Nepomuk::ErrorCode code);

class Resource
{
%TypeHeaderCode
#include <nepomuk/resource.h>
%End

public:
                            Resource ();
                            Resource (const Nepomuk::Resource&);
                            Resource (const QString& uriOrIdentifier, const QUrl& type = QUrl());
                            Resource (const QUrl& uri, const QUrl& type = QUrl());
//ig                        Resource (ResourceData*);

    QUrl                    resourceUri () const;
    QUrl                    resourceType () const;
    QList<QUrl>             types () const;
    bool                    hasType (const QUrl& typeUri) const;
    QString                 className () const;
    QHash<QUrl,Nepomuk::Variant>  properties () const;
    bool                    hasProperty (const QUrl& uri) const;
    Nepomuk::Variant        property (const QUrl& uri) const;
    void                    setProperty (const QUrl& uri, const Nepomuk::Variant& value);
    void                    removeProperty (const QUrl& uri);
    void                    remove ();
    bool                    exists () const;
    bool                    isValid () const;
    QString                 genericLabel () const;
    QString                 genericDescription () const;
    QString                 genericIcon () const;
    bool                    operator == (const Nepomuk::Resource&) const;
    QString                 description () const;
    void                    setDescription (const QString& value);
    static QString          descriptionUri ();
    QStringList             identifiers () const;
    void                    setIdentifiers (const QStringList& value);
    void                    addIdentifier (const QString& value);
    static QString          identifierUri ();
    QStringList             altLabels () const;
    void                    setAltLabels (const QStringList& value);
    void                    addAltLabel (const QString& value);
    static QString          altLabelUri ();
    QList<Nepomuk::Resource>  annotations () const;
    void                    setAnnotations (const QList<Nepomuk::Resource>& value);
    void                    addAnnotation (const Nepomuk::Resource& value);
    static QString          annotationUri ();
    QList<Nepomuk::Tag>     tags () const;
    void                    setTags (const QList<Nepomuk::Tag>& value);
    void                    addTag (const Nepomuk::Tag& value);
    static QString          tagUri ();
    QList<Nepomuk::Resource>  topics () const;
    void                    setTopics (const QList<Nepomuk::Resource>& value);
    void                    addTopic (const Nepomuk::Resource& value);
    static QString          topicUri ();
    QList<Nepomuk::Resource>  isTopicOfs () const;
    void                    setIsTopicOfs (const QList<Nepomuk::Resource>& value);
    void                    addIsTopicOf (const Nepomuk::Resource& value);
    static QString          isTopicOfUri ();
    QList<Nepomuk::Resource>  isRelateds () const;
    void                    setIsRelateds (const QList<Nepomuk::Resource>& value);
    void                    addIsRelated (const Nepomuk::Resource& value);
    static QString          isRelatedUri ();
    QString                 label () const;
    void                    setLabel (const QString& value);
    static QString          labelUri ();
    quint32                 rating () const;
    void                    setRating (const quint32& value /In/);
    static QString          ratingUri ();
    QStringList             symbols () const;
    void                    setSymbols (const QStringList& value);
    void                    addSymbol (const QString& value);
    static QString          symbolUri ();
    QList<Nepomuk::Resource>  annotationOf () const;
    QList<Nepomuk::Resource>  isRelatedOf () const;
    static QList<Nepomuk::Resource>  allResources ();
};   // Resource

};   // Nepomuk


