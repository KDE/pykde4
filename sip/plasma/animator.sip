// Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.


namespace Plasma
{

class Animator : QObject
{
%TypeHeaderCode
#include <plasma/animator.h>
%End

public:

    enum Animation
    {
        AppearAnimation,
        DisappearAnimation,
        ActivateAnimation
    };


    enum CurveShape
    {
        EaseInCurve,
        EaseOutCurve,
        EaseInOutCurve,
        LinearCurve
    };


    enum Movement
    {
        SlideInMovement,
        SlideOutMovement,
        FastSlideInMovement,
        FastSlideOutMovement
    };

    static Plasma::Animator*  self ();
    int                     animateItem (QGraphicsItem* item, Plasma::Animator::Animation anim);
    void                    stopItemAnimation (int id);
    int                     moveItem (QGraphicsItem* item, Plasma::Animator::Movement movement, const QPoint& destination);
    void                    stopItemMovement (int id);
    int                     customAnimation (int frames, int duration, Plasma::Animator::CurveShape curve, QObject* receiver, const char* method);
    void                    stopCustomAnimation (int id);
    int                     animateElement (QGraphicsItem* obj, Plasma::Animator::Animation);
    void                    stopElementAnimation (int id);
    void                    setInitialPixmap (int id, const QPixmap& pixmap);
    QPixmap                 currentPixmap (int id);
    bool                    isAnimating () const;

signals:
    void                    animationFinished (QGraphicsItem* item, Plasma::Animator::Animation anim);
    void                    movementFinished (QGraphicsItem* item);
    void                    elementAnimationFinished (int id);
    void                    customAnimationFinished (int id);

protected:
    void                    timerEvent (QTimerEvent* event);

private:
    explicit                Animator (QObject* parent /TransferThis/ = 0);
                            ~Animator ();
};   // Animator

};   // Plasma


