//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module kutils  version KDE 4.0.2

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.



%ModuleHeaderCode
//ctscc
#include <ksettings/dialog.h>
#include <kcmoduleproxy.h>
#include <kcmultidialog.h>
#include <kpluginselector.h>
#include <kprintpreview.h>
#include <ksettings/pluginpage.h>
%End

class KCModuleProxy : QWidget
{
%TypeHeaderCode
#include <kcmoduleproxy.h>
%End


public:
    explicit                KCModuleProxy (const KCModuleInfo& info, QWidget* parent /TransferThis/ = 0, const QStringList& args = QStringList());
    explicit                KCModuleProxy (const QString& serviceName, QWidget* parent /TransferThis/ = 0, const QStringList& args = QStringList());
    explicit                KCModuleProxy (const KService::Ptr& service, QWidget* parent /TransferThis/ = 0, const QStringList& args = QStringList());
    void                    load ();
    void                    save ();
    QString                 quickHelp () const;
    const KAboutData*       aboutData () const;
    KCModule::Buttons       buttons () const;
    QString                 rootOnlyMessage () const;
    bool                    useRootOnlyMessage () const;
    KComponentData          componentData () const;
    bool                    changed () const;
    KCModule*               realModule () const;
    KCModuleInfo            moduleInfo () const;
    QString                 dbusService () const;
    QString                 dbusPath () const;
    void                    defaults ();
    void                    deleteClient ();

signals:
    void                    changed (bool state);
    void                    changed (KCModuleProxy* mod);
    void                    childClosed ();
    void                    quickHelpChanged ();

protected:
    void                    showEvent (QShowEvent*);

public:

//  Subclasses of QObject

%ConvertToSubClassCode

    sipClass = NULL;

    if (dynamic_cast<KCModuleProxy*>(sipCpp))
        sipClass = sipClass_KCModuleProxy;
    else if (dynamic_cast<KCMultiDialog*>(sipCpp))
        {
            sipClass = sipClass_KCMultiDialog;
            if (dynamic_cast<KSettings::Dialog*>(sipCpp))
                sipClass = sipClass_KSettings_Dialog;
        }
    else if (dynamic_cast<KPluginSelector*>(sipCpp))
        sipClass = sipClass_KPluginSelector;
    else if (dynamic_cast<KPrintPreview*>(sipCpp))
        sipClass = sipClass_KPrintPreview;
    else if (dynamic_cast<KSettings::PluginPage*>(sipCpp))
        sipClass = sipClass_KSettings_PluginPage;
%End

};   // KCModuleProxy




