// Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Plasma
{
class Animation : QAbstractAnimation
{
%TypeHeaderCode
#include <plasma/animation.h>
%End

public:
    int                     duration () const;
    enum Reference
    {
        Center,
        Up,
        Down,
        Left,
        Right
    };
    explicit                Animation (QObject* parent /TransferThis/ = 0);
    virtual ~Animation ()=0;
    void                    setEasingCurveType (QEasingCurve::Type type);
    QEasingCurve::Type      easingCurveType () const;
protected:
    virtual void            setDuration (int duration = 250);
    virtual void            updateCurrentTime (int currentTime);
    QEasingCurve&           easingCurve ();
%ConvertToSubClassCode
    // CTSCC for subclasses of 'Animation'
    sipType = NULL;

    if (dynamic_cast<Plasma::Animation*>(sipCpp))
        sipType = sipType_Plasma_Animation;
%End
public:
    void                    setTargetWidget (QGraphicsWidget* widget);
    QGraphicsWidget*        targetWidget () const;
};
};
%ModuleHeaderCode
//ctscc
#include <plasma/animation.h>
%End
