//
//     Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Nepomuk
{
namespace Types
{

class Class : Nepomuk::Types::Entity
{
%TypeHeaderCode
#include <nepomuk/class.h>
%End

public:
                            Class ();
                            Class (const QUrl& uri);
                            Class (const Nepomuk::Types::Class&);
    QList<Nepomuk::Types::Property>  rangeOf ();
    QList<Nepomuk::Types::Property>  domainOf ();
    Nepomuk::Types::Property  findPropertyByName (const QString& name);
    Nepomuk::Types::Property  findPropertyByLabel (const QString& label, const QString& language = QString());
    QList<Nepomuk::Types::Class>  parentClasses ();
    QList<Nepomuk::Types::Class>  subClasses ();
    QList<Nepomuk::Types::Class>  allParentClasses ();
    QList<Nepomuk::Types::Class>  allSubClasses ();
    bool                    isParentOf (const Nepomuk::Types::Class& other);
    bool                    isSubClassOf (const Nepomuk::Types::Class& other);
    ~Class ();
//ig    QList<Nepomuk::Types::Property>  rangeOf () const;
//ig    QList<Nepomuk::Types::Property>  domainOf () const;
//ig    Nepomuk::Types::Property  findPropertyByName (const QString& name) const;
//ig    Nepomuk::Types::Property  findPropertyByLabel (const QString& label, const QString& language = QString()) const;
//ig    QList<Nepomuk::Types::Class>  parentClasses () const;
//ig    QList<Nepomuk::Types::Class>  subClasses () const;
//ig    QList<Nepomuk::Types::Class>  allParentClasses () const;
//ig    QList<Nepomuk::Types::Class>  allSubClasses () const;
//ig    bool                    isParentOf (const Nepomuk::Types::Class& other) const;
//ig    bool                    isSubClassOf (const Nepomuk::Types::Class& other) const;
};
// Class

};
// Types

//ig class Class;
// Nepomuk::Class is deprecated.
};
