//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Sonnet
{

class Speller
{
%TypeHeaderCode
#include <sonnet/speller.h>
%End


public:
                            Speller (const QString& lang = QString());
                            Speller (const Sonnet::Speller& speller);
    bool                    isValid () const;
    void                    setLanguage (const QString& lang);
    QString                 language () const;
    bool                    isCorrect (const QString& word) const;
    bool                    isMisspelled (const QString& word) const;
    QStringList             suggest (const QString& word) const;
    bool                    checkAndSuggest (const QString& word, QStringList& suggestions) const;
    bool                    storeReplacement (const QString& bad, const QString& good);
    bool                    addToPersonal (const QString& word);
    bool                    addToSession (const QString& word);

    enum Attribute
    {
        CheckUppercase,
        SkipRunTogether
    };

    void                    save (KConfig* config);
    void                    restore (KConfig* config);
    QStringList             availableBackends () const;
    QStringList             availableLanguages () const;
    QStringList             availableLanguageNames () const;
    QMap<QString,QString>   availableDictionaries () const;
    void                    setDefaultLanguage (const QString& lang);
    QString                 defaultLanguage () const;
    void                    setDefaultClient (const QString& client);
    QString                 defaultClient () const;
    void                    setAttribute (Sonnet::Speller::Attribute attr, bool b = 1);
    bool                    testAttribute (Sonnet::Speller::Attribute attr) const;
    ~Speller ();
};
// Speller

};
// Sonnet


