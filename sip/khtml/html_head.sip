//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module khtml  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLBaseElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                         HTMLBaseElement ();
                         HTMLBaseElement (const DOM::HTMLBaseElement&);
                         HTMLBaseElement (const DOM::Node&);

protected:
//ig                          HTMLBaseElement (HTMLBaseElementImpl*);

public:
    DOM::DOMString       href () const;
    void                 setHref (const DOM::DOMString&);
    DOM::DOMString       target () const;
    void                 setTarget (const DOM::DOMString&);

};  // class HTMLBaseElement


class HTMLLinkElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                         HTMLLinkElement ();
                         HTMLLinkElement (const DOM::HTMLLinkElement&);
                         HTMLLinkElement (const DOM::Node&);

protected:
//ig                          HTMLLinkElement (HTMLLinkElementImpl*);

public:
    bool                 disabled () const;
    void                 setDisabled (bool);
    DOM::DOMString       charset () const;
    void                 setCharset (const DOM::DOMString&);
    DOM::DOMString       href () const;
    void                 setHref (const DOM::DOMString&);
    DOM::DOMString       hreflang () const;
    void                 setHreflang (const DOM::DOMString&);
    DOM::DOMString       media () const;
    void                 setMedia (const DOM::DOMString&);
    DOM::DOMString       rel () const;
    void                 setRel (const DOM::DOMString&);
    DOM::DOMString       rev () const;
    void                 setRev (const DOM::DOMString&);
    DOM::DOMString       target () const;
    void                 setTarget (const DOM::DOMString&);
    DOM::DOMString       type () const;
    void                 setType (const DOM::DOMString&);
    DOM::StyleSheet      sheet () const;

};  // class HTMLLinkElement


class HTMLMetaElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                         HTMLMetaElement ();
                         HTMLMetaElement (const DOM::HTMLMetaElement&);
                         HTMLMetaElement (const DOM::Node&);

protected:
//ig                          HTMLMetaElement (HTMLMetaElementImpl*);

public:
    DOM::DOMString       content () const;
    void                 setContent (const DOM::DOMString&);
    DOM::DOMString       httpEquiv () const;
    void                 setHttpEquiv (const DOM::DOMString&);
    DOM::DOMString       name () const;
    void                 setName (const DOM::DOMString&);
    DOM::DOMString       scheme () const;
    void                 setScheme (const DOM::DOMString&);

};  // class HTMLMetaElement


class HTMLScriptElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                         HTMLScriptElement ();
                         HTMLScriptElement (const DOM::HTMLScriptElement&);
                         HTMLScriptElement (const DOM::Node&);

protected:
//ig                          HTMLScriptElement (HTMLScriptElementImpl*);

public:
    DOM::DOMString       text () const;
    void                 setText (const DOM::DOMString&);
    DOM::DOMString       htmlFor () const;
    void                 setHtmlFor (const DOM::DOMString&);
    DOM::DOMString       event () const;
    void                 setEvent (const DOM::DOMString&);
    DOM::DOMString       charset () const;
    void                 setCharset (const DOM::DOMString&);
    bool                 defer () const;
    void                 setDefer (bool);
    DOM::DOMString       src () const;
    void                 setSrc (const DOM::DOMString&);
    DOM::DOMString       type () const;
    void                 setType (const DOM::DOMString&);

};  // class HTMLScriptElement


class HTMLStyleElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                         HTMLStyleElement ();
                         HTMLStyleElement (const DOM::HTMLStyleElement&);
                         HTMLStyleElement (const DOM::Node&);

protected:
//ig                          HTMLStyleElement (HTMLStyleElementImpl*);

public:
    bool                 disabled () const;
    void                 setDisabled (bool);
    DOM::DOMString       media () const;
    void                 setMedia (const DOM::DOMString&);
    DOM::DOMString       type () const;
    void                 setType (const DOM::DOMString&);
    DOM::StyleSheet      sheet () const;

};  // class HTMLStyleElement


class HTMLTitleElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                         HTMLTitleElement ();
                         HTMLTitleElement (const DOM::HTMLTitleElement&);
                         HTMLTitleElement (const DOM::Node&);

protected:
//ig                          HTMLTitleElement (HTMLTitleElementImpl*);

public:
    DOM::DOMString       text () const;
    void                 setText (const DOM::DOMString&);

};  // class HTMLTitleElement

};  // namespace DOM

