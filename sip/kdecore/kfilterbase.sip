//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdecore  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KFilterBase
{
%TypeHeaderCode
#include <kfilterbase.h>
%End


public:
                         KFilterBase ();
    void                 setDevice (QIODevice*, bool = 0);
    QIODevice*           device ();
    virtual void         init (int)  = 0;
    virtual int          mode () const = 0;
    virtual void         terminate ();
    virtual void         reset ();
    virtual bool         readHeader ()  = 0;
    virtual bool         writeHeader (const QByteArray&)  = 0;
    virtual void         setOutBuffer (char*, uint)  = 0;
    virtual void         setInBuffer (const char*, uint)  = 0;
    virtual bool         inBufferEmpty () const;
    virtual int          inBufferAvailable () const = 0;
    virtual bool         outBufferFull () const;
    virtual int          outBufferAvailable () const = 0;

    enum Result
    {
        Ok, 
        End, 
        Error
    };

    virtual KFilterBase::Result uncompress ()  = 0;
    virtual KFilterBase::Result compress (bool)  = 0;
    static KFilterBase*  findFilterByFileName (const QString&);
    static KFilterBase*  findFilterByMimeType (const QString&);

protected:

protected:
//igx     virtual void         virtual_hook (int, void*);
private:
                         KFilterBase (const KFilterBase&) [()];
};  // class KFilterBase

