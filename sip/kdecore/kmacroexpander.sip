//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdecore  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
//ctscc
#include <kmacroexpander.h>
%End


class KMacroExpanderBase
{
%TypeHeaderCode
#include <kmacroexpander.h>
%End


public:
                         KMacroExpanderBase (QChar = '%');
    void                 expandMacros (QString&);
    bool                 expandMacrosShellQuote (QString&, int& /Out/);
//ig     bool                 expandMacrosShellQuote (QString&);
    void                 setEscapeChar (QChar);
    QChar                escapeChar () const;

protected:
    virtual int          expandPlainMacro (const QString&, uint, QStringList&);
    virtual int          expandEscapedMacro (const QString&, uint, QStringList&);

// Subclasses for KMacroExpanderBase

public:
%ConvertToSubClassCode

    if (dynamic_cast<KCharMacroExpander*>(sipCpp))
        sipClass = sipClass_KCharMacroExpander;
    else if (dynamic_cast<KWordMacroExpander*>(sipCpp))
        sipClass = sipClass_KWordMacroExpander;
    else
        sipClass = NULL;
%End


};  // class KMacroExpanderBase


class KWordMacroExpander : KMacroExpanderBase
{
%TypeHeaderCode
#include <kmacroexpander.h>
%End


public:
                         KWordMacroExpander (QChar = '%');

protected:
    virtual int          expandPlainMacro (const QString&, uint, QStringList&);
    virtual int          expandEscapedMacro (const QString&, uint, QStringList&);
    virtual bool         expandMacro (const QString&, QStringList&)  = 0;

};  // class KWordMacroExpander


class KCharMacroExpander : KMacroExpanderBase
{
%TypeHeaderCode
#include <kmacroexpander.h>
%End


public:
                         KCharMacroExpander (QChar = '%');

protected:
    virtual int          expandPlainMacro (const QString&, uint, QStringList&);
    virtual int          expandEscapedMacro (const QString&, uint, QStringList&);
    virtual bool         expandMacro (QChar, QStringList&)  = 0;

};  // class KCharMacroExpander

namespace KMacroExpander
{
QString              expandMacros (const QString&, const QHash<QChar, QString>&, QChar = '%');
QString              expandMacrosShellQuote (const QString&, const QHash<QChar, QString>&, QChar = QLatin1Char ('%' ));
QString              expandMacros (const QString&, const QHash<QString, QString>&, QChar = QLatin1Char ('%' ));
QString              expandMacrosShellQuote (const QString&, const QHash<QString, QString>&, QChar = QLatin1Char ('%' ));
QString              expandMacros (const QString&, const QHash<QChar, QStringList>&, QChar = QLatin1Char ('%' ));
QString              expandMacros (const QString&, const QHash<QString, QStringList>&, QChar = QLatin1Char ('%' ));
QString              expandMacrosShellQuote (const QString&, const QHash<QChar, QStringList>&, QChar = QLatin1Char ('%' ));
QString              expandMacrosShellQuote (const QString&, const QHash<QString, QStringList>&, QChar = QLatin1Char ('%' ));
};  // namespace KMacroExpander

