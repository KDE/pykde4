// Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Akonadi
{
class FavoriteCollectionsModel : Akonadi::SelectionProxyModel
{
%TypeHeaderCode
#include <akonadi/favoritecollectionsmodel.h>
%End

public:
                            FavoriteCollectionsModel (QAbstractItemModel* model, const KConfigGroup& group, QObject* parent /TransferThis/ = 0);
    virtual ~FavoriteCollectionsModel ();
    Akonadi::Collection::List  collections () const;
    virtual QVariant        data (const QModelIndex& index, int role = Qt::DisplayRole) const;
    virtual QVariant        headerData (int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const;
    void                    setCollections (const Akonadi::Collection::List& collections);
    void                    addCollection (const Akonadi::Collection& collection);
    void                    removeCollection (const Akonadi::Collection& collection);
    void                    setFavoriteLabel (const Akonadi::Collection& collection, const QString& label);
    QString                 favoriteLabel (const Akonadi::Collection& col);
//ig    QList<Akonadi::Collection::Id>  collectionIds () const;
    QList<Akonadi::Entity::Id>  collectionIds () const;
    virtual bool            setData (const QModelIndex& index, const QVariant& value, int role = Qt::EditRole);
    virtual bool            dropMimeData (const QMimeData* data, Qt::DropAction action, int row, int column, const QModelIndex& parent);
    virtual QStringList     mimeTypes () const;
    virtual Qt::ItemFlags   flags (const QModelIndex& index) const;
//force
private:
    virtual void setSourceModel(QAbstractItemModel *);
//end
};
};
