//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KBookmarkManager : QObject
{
%TypeHeaderCode
#include <kbookmarkmanager.h>
%End

                            KBookmarkManager (const QString& bookmarksFile, const QString& dbusObjectName);

                            KBookmarkManager (const QString& bookmarksFile);

                            KBookmarkManager ();

public:
    void                    setUpdate (bool update);
    bool                    saveAs (const QString& filename, bool toolbarCache = 1) const;
    bool                    updateAccessMetadata (const QString& url);
    void                    updateFavicon (const QString& url, const QString& faviconurl);
    QString                 path () const;
    KBookmarkGroup          root () const;
    KBookmarkGroup          toolbar ();
    KBookmark               findByAddress (const QString& address);
    void                    emitChanged ();
    void                    emitChanged (const KBookmarkGroup& group);
    bool                    save (bool toolbarCache = 1) const;
    void                    emitConfigChanged ();
    void                    setEditorOptions (const QString& caption, bool browser);
    static KBookmarkManager*  managerForFile (const QString& bookmarksFile, const QString& dbusObjectName);

    static KBookmarkManager*  managerForExternalFile (const QString& bookmarksFile);

    static KBookmarkManager*  createTempManager ();
    static KBookmarkManager*  userBookmarksManager ();
    QDomDocument            internalDocument () const;
    void                    slotEditBookmarks ();
    void                    slotEditBookmarksAtAddress (const QString& address);
    void                    notifyCompleteChange (const QString& caller);
//ig     void               notifyChanged (const QString& groupAddress, const QDBusMessage& msg);
    void                    notifyConfigChanged ();

signals:
    void                    bookmarkCompleteChange (QString caller);
    void                    bookmarksChanged (QString groupAddress);
    void                    bookmarkConfigChanged ();
    void                    changed (const QString& groupAddress, const QString& caller);
    void                    configChanged ();
};   // KBookmarkManager


class KBookmarkOwner
{
%TypeHeaderCode
#include <kbookmarkmanager.h>
%End


public:
    virtual QString         currentTitle () const;
    virtual QString         currentUrl () const;
    virtual bool            supportsTabs () const;
    virtual QList<QPair<QString,QString>>  currentBookmarkList () const;

    enum BookmarkOption
    {
        ShowAddBookmark,
        ShowEditBookmark
    };

    virtual bool            enableOption (KBookmarkOwner::BookmarkOption option) const;
    virtual void            openBookmark (const KBookmark& bm, Qt::MouseButtons mb, Qt::KeyboardModifiers km) = 0;
    virtual void            openFolderinTabs (const KBookmarkGroup& bm);
    virtual KBookmarkDialog*  bookmarkDialog (KBookmarkManager* mgr, QWidget* parent /Transfer/);
};   // KBookmarkOwner


