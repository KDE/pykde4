//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module khtml  version KDE 4.0.2

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLBaseElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                            HTMLBaseElement ();
                            HTMLBaseElement (const DOM::HTMLBaseElement& other);
                            HTMLBaseElement (const DOM::Node& other);

protected:
//ig                        HTMLBaseElement (HTMLBaseElementImpl* impl);

public:
    DOM::DOMString          href () const;
    void                    setHref (const DOM::DOMString&);
    DOM::DOMString          target () const;
    void                    setTarget (const DOM::DOMString&);
};   // HTMLBaseElement


class HTMLLinkElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                            HTMLLinkElement ();
                            HTMLLinkElement (const DOM::HTMLLinkElement& other);
                            HTMLLinkElement (const DOM::Node& other);

protected:
//ig                        HTMLLinkElement (HTMLLinkElementImpl* impl);

public:
    bool                    disabled () const;
    void                    setDisabled (bool);
    DOM::DOMString          charset () const;
    void                    setCharset (const DOM::DOMString&);
    DOM::DOMString          href () const;
    void                    setHref (const DOM::DOMString&);
    DOM::DOMString          hreflang () const;
    void                    setHreflang (const DOM::DOMString&);
    DOM::DOMString          media () const;
    void                    setMedia (const DOM::DOMString&);
    DOM::DOMString          rel () const;
    void                    setRel (const DOM::DOMString&);
    DOM::DOMString          rev () const;
    void                    setRev (const DOM::DOMString&);
    DOM::DOMString          target () const;
    void                    setTarget (const DOM::DOMString&);
    DOM::DOMString          type () const;
    void                    setType (const DOM::DOMString&);
    DOM::StyleSheet         sheet () const;
};   // HTMLLinkElement


class HTMLMetaElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                            HTMLMetaElement ();
                            HTMLMetaElement (const DOM::HTMLMetaElement& other);
                            HTMLMetaElement (const DOM::Node& other);

protected:
//ig                        HTMLMetaElement (HTMLMetaElementImpl* impl);

public:
    DOM::DOMString          content () const;
    void                    setContent (const DOM::DOMString&);
    DOM::DOMString          httpEquiv () const;
    void                    setHttpEquiv (const DOM::DOMString&);
    DOM::DOMString          name () const;
    void                    setName (const DOM::DOMString&);
    DOM::DOMString          scheme () const;
    void                    setScheme (const DOM::DOMString&);
};   // HTMLMetaElement


class HTMLScriptElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                            HTMLScriptElement ();
                            HTMLScriptElement (const DOM::HTMLScriptElement& other);
                            HTMLScriptElement (const DOM::Node& other);

protected:
//ig                        HTMLScriptElement (HTMLScriptElementImpl* impl);

public:
    DOM::DOMString          text () const;
    void                    setText (const DOM::DOMString&);
    DOM::DOMString          htmlFor () const;
    void                    setHtmlFor (const DOM::DOMString&);
    DOM::DOMString          event () const;
    void                    setEvent (const DOM::DOMString&);
    DOM::DOMString          charset () const;
    void                    setCharset (const DOM::DOMString&);
    bool                    defer () const;
    void                    setDefer (bool);
    DOM::DOMString          src () const;
    void                    setSrc (const DOM::DOMString&);
    DOM::DOMString          type () const;
    void                    setType (const DOM::DOMString&);
};   // HTMLScriptElement


class HTMLStyleElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                            HTMLStyleElement ();
                            HTMLStyleElement (const DOM::HTMLStyleElement& other);
                            HTMLStyleElement (const DOM::Node& other);

protected:
//ig                        HTMLStyleElement (HTMLStyleElementImpl* impl);

public:
    bool                    disabled () const;
    void                    setDisabled (bool);
    DOM::DOMString          media () const;
    void                    setMedia (const DOM::DOMString&);
    DOM::DOMString          type () const;
    void                    setType (const DOM::DOMString&);
    DOM::StyleSheet         sheet () const;
};   // HTMLStyleElement


class HTMLTitleElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_head.h>
%End


public:
                            HTMLTitleElement ();
                            HTMLTitleElement (const DOM::HTMLTitleElement& other);
                            HTMLTitleElement (const DOM::Node& other);

protected:
//ig                        HTMLTitleElement (HTMLTitleElementImpl* impl);

public:
    DOM::DOMString          text () const;
    void                    setText (const DOM::DOMString&);
};   // HTMLTitleElement

};   // DOM


