//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class Attr : DOM::Node
{
%TypeHeaderCode
#include <dom_element.h>
%End


public:
                            Attr ();
                            Attr (const DOM::Node& other);
                            Attr (const DOM::Attr& other);
    DOM::DOMString          name () const;
    bool                    specified () const;
    DOM::DOMString          value () const;
    void                    setValue (const DOM::DOMString&);
    DOM::Element            ownerElement () const;

protected:
//ig                        Attr (AttrImpl* _impl);
};   // Attr


class Element : DOM::Node
{
%TypeHeaderCode
#include <dom_element.h>
%End


public:
                            Element ();
                            Element (const DOM::Node& other);
                            Element (const DOM::Element& other);
    DOM::DOMString          tagName () const;
    DOM::DOMString          getAttribute (const DOM::DOMString& name);
    void                    setAttribute (const DOM::DOMString& name, const DOM::DOMString& value);
    void                    removeAttribute (const DOM::DOMString& name);
    DOM::Attr               getAttributeNode (const DOM::DOMString& name);
    DOM::Attr               setAttributeNode (const DOM::Attr& newAttr);
    DOM::Attr               removeAttributeNode (const DOM::Attr& oldAttr);
    DOM::NodeList           getElementsByTagName (const DOM::DOMString& name);
    DOM::NodeList           getElementsByTagNameNS (const DOM::DOMString& namespaceURI, const DOM::DOMString& localName);

    DOM::NodeList           getElementsByClassName (const DOM::DOMString& className);

    DOM::DOMString          getAttributeNS (const DOM::DOMString& namespaceURI, const DOM::DOMString& localName);
    void                    setAttributeNS (const DOM::DOMString& namespaceURI, const DOM::DOMString& qualifiedName, const DOM::DOMString& value);
    void                    removeAttributeNS (const DOM::DOMString& namespaceURI, const DOM::DOMString& localName);
    DOM::Attr               getAttributeNodeNS (const DOM::DOMString& namespaceURI, const DOM::DOMString& localName);
    DOM::Attr               setAttributeNodeNS (const DOM::Attr& newAttr);
    bool                    hasAttribute (const DOM::DOMString& name);
    bool                    hasAttributeNS (const DOM::DOMString& namespaceURI, const DOM::DOMString& localName);
    DOM::CSSStyleDeclaration  style ();
    bool                    isHTMLElement () const;
    DOM::Element            form () const;
    static bool             khtmlValidAttrName (const DOM::DOMString& name);
    static bool             khtmlValidPrefix (const DOM::DOMString& name);
    static bool             khtmlValidQualifiedName (const DOM::DOMString& name);
    static bool             khtmlMalformedQualifiedName (const DOM::DOMString& name);
    static bool             khtmlMalformedPrefix (const DOM::DOMString& name);

protected:
//ig                        Element (ElementImpl* _impl);
};   // Element

};   // DOM


