//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KMultiTabBar : QWidget
{
%TypeHeaderCode
#include <kmultitabbar.h>
%End


public:

    enum KMultiTabBarMode
    {
        Horizontal, 
        Vertical
    };


    enum KMultiTabBarPosition
    {
        Left, 
        Right, 
        Top, 
        Bottom
    };


    enum KMultiTabBarStyle
    {
        VSNET, 
        KDEV3, 
        KONQSBC, 
        KDEV3ICON, 
        STYLELAST
    };

                         KMultiTabBar (KMultiTabBar::KMultiTabBarMode, QWidget* = 0);
    int                  appendButton (const QPixmap&, int = -1, QMenu* = 0, const QString& = QString ());
    void                 removeButton (int);
    int                  appendTab (const QPixmap&, int = -1, const QString& = QString::null );
    void                 removeTab (int);
    void                 setTab (int, bool);
    bool                 isTabRaised (int) const;
    KMultiTabBarButton*  button (int) const;
    KMultiTabBarTab*     tab (int) const;
    void                 setPosition (KMultiTabBar::KMultiTabBarPosition);
    KMultiTabBar::KMultiTabBarPosition position () const;
    void                 setStyle (KMultiTabBar::KMultiTabBarStyle);
    KMultiTabBar::KMultiTabBarStyle tabStyle () const;
    QList<KMultiTabBarTab*> tabs () const;
    QList<KMultiTabBarButton*> buttons () const;
    void                 showActiveTabTexts (bool = 1);

protected:
    virtual void         fontChange (const QFont&);
    void                 updateSeparator ();

};  // class KMultiTabBar


class KMultiTabBarButton : QPushButton
{
%TypeHeaderCode
#include <kmultitabbar.h>
%End


public:
    int                  id () const;

public slots:
    void                 setPosition (KMultiTabBar::KMultiTabBarPosition);
    void                 setStyle (KMultiTabBar::KMultiTabBarStyle);
    void                 setText (const QString&);
    QString              text () const;
    QSize                sizeHint () const;

signals:
    void                 clicked (int);

protected slots:
    virtual void         slotClicked ();

protected:
                         KMultiTabBarButton (const QPixmap&, const QString&, QMenu*, int, QWidget* /TransferThis/, KMultiTabBar::KMultiTabBarPosition, KMultiTabBar::KMultiTabBarStyle);
    virtual void         hideEvent (QHideEvent*);
    virtual void         showEvent (QShowEvent*);

};  // class KMultiTabBarButton


class KMultiTabBarTab : KMultiTabBarButton
{
%TypeHeaderCode
#include <kmultitabbar.h>
%End


public:
    void                 setState (bool);
    void                 showActiveTabText (bool);
    void                 resize ();

public slots:
    virtual void         setIcon (const QString&);
    virtual void         setIcon (const QPixmap&);

protected slots:
    virtual void         slotClicked ();
    void                 setTabsPosition (KMultiTabBar::KMultiTabBarPosition);

protected:
    virtual void         paintEvent (QPaintEvent*);
    virtual void         drawButton (QPainter*);
    virtual void         drawButtonLabel (QPainter*);

private:
                         KMultiTabBarTab (const QPixmap&, const QString&, int, QWidget* /TransferThis/, KMultiTabBar::KMultiTabBarPosition, KMultiTabBar::KMultiTabBarStyle);

};  // class KMultiTabBarTab

