//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KTextEditor
{

class Command
{
%TypeHeaderCode
#include <ktexteditor/commandinterface.h>
%End


public:
    virtual const QStringList&  cmds ()=0;
    virtual bool            exec (KTextEditor::View* view, const QString& cmd, QString& msg)=0 /PyName=exec_/;
    virtual bool            help (KTextEditor::View* view, const QString& cmd, QString& msg)=0;

    virtual ~Command ();
};
// class Command


class CommandExtension
{
%TypeHeaderCode
#include <ktexteditor/commandinterface.h>
%End


public:
    virtual void            flagCompletions (QStringList& list)=0;
    virtual KCompletion*    completionObject (KTextEditor::View* view, const QString& cmdname)=0;
    virtual bool            wantsToProcessText (const QString& cmdname)=0;
    virtual void            processText (KTextEditor::View* view, const QString& text)=0;

    virtual ~CommandExtension ();
};
// class CommandExtension


class CommandInterface
{
%TypeHeaderCode
#include <ktexteditor/commandinterface.h>
%End


public:
    virtual bool            registerCommand (KTextEditor::Command* cmd)=0;
    virtual bool            unregisterCommand (KTextEditor::Command* cmd)=0;
    virtual KTextEditor::Command*  queryCommand (const QString& cmd) const=0;
    virtual QList<KTextEditor::Command*>  commands () const=0;
    virtual QStringList     commandList () const=0;

    virtual ~CommandInterface ();
};
// class CommandInterface

class RangeCommand
{
%TypeHeaderCode
#include <ktexteditor/commandinterface.h>
%End

public:
    virtual ~RangeCommand ();
    virtual bool            exec (KTextEditor::View* view, const QString& cmd, QString& msg, const KTextEditor::Range& range)=0;
    virtual bool            supportsRange (const QString& cmd)=0;
};
};
// namespace KTextEditor

