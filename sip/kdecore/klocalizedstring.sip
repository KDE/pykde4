//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdecore  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

%ModuleHeaderCode
#include <klocalizedstring.h>
%End


class KLocalizedString
{
%TypeHeaderCode
#include <klocalizedstring.h>
%End


public:
                         KLocalizedString ();
                         KLocalizedString (const KLocalizedString&);
    QString              toString () const;
    QString              toString (const KLocale*) const;
    bool                 isEmpty () const;
    KLocalizedString     subs (int, int = 0, int = 10, const QChar& = QLatin1Char (' ' )) const;
//ig     KLocalizedString     subs (double, int = 0, char = 'g', int = -1, const QChar& = QLatin1Char (' ' )) const;
    KLocalizedString     subs (QChar, int = 0, const QChar& = QLatin1Char (' ' )) const;
    KLocalizedString     subs (const QString&, int = 0, const QChar& = QLatin1Char (' ' )) const;


//mt  undefined symbol: QList<KCatalogName>& -- need mapped type?
//mt     static void          notifyCatalogsUpdated (const QStringList&, const QList<KCatalogName>&);


private:
                         KLocalizedString (const char*, const char*, const char*);

public:



};  // class KLocalizedString


template<TYPE0,TYPE1>
class I18nTypeCheck
{
%TypeHeaderCode
#include <klocalizedstring.h>
%End


public:
    static void          I18N_ERR_MSG ();

};  // class I18nTypeCheck

KLocalizedString     ki18n (const char*);
KLocalizedString     ki18nc (const char*, const char*);
KLocalizedString     ki18np (const char*, const char*);
KLocalizedString     ki18ncp (const char*, const char*, const char*);
QString              tr2i18n (const char*, const char* = 0);

QString              i18n (const char*);
QString              i18nc (const char*, const char*);
