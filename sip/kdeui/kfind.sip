//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KFind : QObject
{
%TypeHeaderCode
#include <kfind.h>
%End


public:

    enum Options
    {
        WholeWordsOnly, 
        FromCursor, 
        SelectedText, 
        CaseSensitive, 
        FindBackwards, 
        RegularExpression, 
        FindIncremental, 
        MinimumUserOption
    };

                         KFind (const QString&, long, QWidget* /TransferThis/);
                         KFind (const QString&, long, QWidget* /TransferThis/, QWidget*);

    enum Result
    {
        NoMatch, 
        Match
    };

    bool                 needData () const;
    void                 setData (const QString&, int = -1);
    void                 setData (int, const QString&, int = -1);
    KFind::Result        find ();
    long                 options () const;
    virtual void         setOptions (long);
    QString              pattern () const;
    void                 setPattern (const QString&);
    int                  numMatches () const;
    virtual void         resetCounts ();
    virtual bool         validateMatch (const QString&, int, int);
    virtual bool         shouldRestart (bool = 0, bool = 1) const;
    static int           find (const QString&, const QString&, int, long, int* /Out/);
    static int           find (const QString&, const QRegExp&, int, long, int* /Out/);
    virtual void         displayFinalDialog () const;
    KDialog*             findNextDialog (bool = 0);
    void                 closeFindNextDialog ();
    int                  index () const;

signals:
    void                 highlight (const QString&, int, int);
    void                 highlight (int, int, int);
    void                 findNext ();
    void                 optionsChanged ();
    void                 dialogClosed ();

protected:
    QWidget*             parentWidget () const;
    QWidget*             dialogsParent () const;

protected slots:
    void                 slotFindNext ();
    void                 slotDialogClosed ();

};  // class KFind

