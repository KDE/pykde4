// Copyright 2011 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace KTextEditor
{
class MovingInterface
{
%TypeHeaderCode
#include <ktexteditor/movinginterface.h>
%End

public:
                            MovingInterface ();
    virtual ~MovingInterface ();
    virtual KTextEditor::MovingCursor*  newMovingCursor (const KTextEditor::Cursor& position, KTextEditor::MovingCursor::InsertBehavior insertBehavior = KTextEditor::MovingCursor::MoveOnInsert)=0;
    virtual KTextEditor::MovingRange*  newMovingRange (const KTextEditor::Range& range, KTextEditor::MovingRange::InsertBehaviors insertBehaviors = KTextEditor::MovingRange::DoNotExpand, KTextEditor::MovingRange::EmptyBehavior emptyBehavior = KTextEditor::MovingRange::AllowEmpty)=0;
    virtual qint64          revision () const=0;
    virtual qint64          lastSavedRevision () const=0;
    virtual void            lockRevision (qint64 revision)=0;
    virtual void            unlockRevision (qint64 revision)=0;
    virtual void            transformCursor (KTextEditor::Cursor& cursor, KTextEditor::MovingCursor::InsertBehavior insertBehavior, qint64 fromRevision, qint64 toRevision = -1)=0;
    virtual void            transformCursor (int& line, int& column, KTextEditor::MovingCursor::InsertBehavior insertBehavior, qint64 fromRevision, qint64 toRevision = -1)=0;
    virtual void            transformRange (KTextEditor::Range& range, KTextEditor::MovingRange::InsertBehaviors insertBehaviors, KTextEditor::MovingRange::EmptyBehavior emptyBehavior, qint64 fromRevision, qint64 toRevision = -1)=0;
//ig    void                    aboutToDeleteMovingInterfaceContent (KTextEditor::Document* document);
//ig    void                    aboutToInvalidateMovingInterfaceContent (KTextEditor::Document* document);
};
};
