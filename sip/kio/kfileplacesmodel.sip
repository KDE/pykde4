//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KFilePlacesModel : QAbstractItemModel
{
%TypeHeaderCode
#include <kfileplacesmodel.h>
%End


public:

    enum AdditionalRoles
    {
        UrlRole, 
        HiddenRole, 
        SetupNeededRole
    };

                         KFilePlacesModel (QObject* /TransferThis/ = 0);
    KUrl                 url (const QModelIndex&) const;
    bool                 setupNeeded (const QModelIndex&) const;
    KIcon                icon (const QModelIndex&) const;
    QString              text (const QModelIndex&) const;
    bool                 isHidden (const QModelIndex&) const;
    bool                 isDevice (const QModelIndex&) const;
    Solid::Device        deviceForIndex (const QModelIndex&) const;
    KBookmark            bookmarkForIndex (const QModelIndex&) const;
    QAction*             teardownActionForIndex (const QModelIndex&) const;
    void                 requestTeardown (const QModelIndex&);
    void                 requestSetup (const QModelIndex&);
    void                 addPlace (const QString&, const KUrl&, const QString& = QString (), const QString& = QString ());
    void                 editPlace (const QModelIndex&, const QString&, const KUrl&, const QString& = QString (), const QString& = QString ());
    void                 removePlace (const QModelIndex&) const;
    void                 setPlaceHidden (const QModelIndex&, bool);
    int                  hiddenCount () const;
    QVariant             data (const QModelIndex&, int) const;
    QModelIndex          index (int, int, const QModelIndex& /Transfer/ = QModelIndex ()) const;
    QModelIndex          parent (const QModelIndex&) const;
    int                  rowCount (const QModelIndex& /Transfer/ = QModelIndex ()) const;
    int                  columnCount (const QModelIndex& /Transfer/ = QModelIndex ()) const;
    QModelIndex          closestItem (const KUrl&) const;
    Qt::DropActions      supportedDropActions () const;
    Qt::ItemFlags        flags (const QModelIndex&) const;
    QStringList          mimeTypes () const;
    QMimeData*           mimeData (const QModelIndexList&) const;
    bool                 dropMimeData (const QMimeData*, Qt::DropAction, int, int, const QModelIndex& /Transfer/);

signals:
    void                 errorMessage (const QString&);
    void                 setupDone (const QModelIndex&, bool);

};  // class KFilePlacesModel

