// Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Akonadi
{
class StatisticsProxyModel : QSortFilterProxyModel
{
%TypeHeaderCode
#include <akonadi/statisticsproxymodel.h>
%End

public:
    explicit                StatisticsProxyModel (QObject* parent /TransferThis/ = 0);
    virtual ~StatisticsProxyModel ();
    void                    setToolTipEnabled (bool enable);
    bool                    isToolTipEnabled () const;
    void                    setExtraColumnsEnabled (bool enable);
    bool                    isExtraColumnsEnabled () const;
    virtual QModelIndex     index (int row, int column, const QModelIndex& parent = QModelIndex()) const;
    virtual QVariant        data (const QModelIndex& index, int role = Qt::DisplayRole) const;
    virtual QVariant        headerData (int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const;
    virtual Qt::ItemFlags   flags (const QModelIndex& index) const;
    virtual int             columnCount (const QModelIndex& parent = QModelIndex()) const;
    virtual QModelIndexList  match (const QModelIndex& start, int role, const QVariant& value, int hits = 1, Qt::MatchFlags flags = Qt::MatchFlags(Qt::MatchStartsWith|Qt::MatchWrap)) const;
    virtual void            setSourceModel (QAbstractItemModel* sourceModel);
//ig    virtual void            connectNotify (const char* signal);
};
};
