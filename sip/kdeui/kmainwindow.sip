//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KMainWindow : QMainWindow
{
%TypeHeaderCode
#include <kmainwindow.h>
%End


public:
                         KMainWindow (QWidget* /TransferThis/ = 0, Qt::WindowFlags = 0);
    KMenu*               helpMenu (const QString& = QString (), bool = 1);
    KMenu*               customHelpMenu (bool = 1);
    static bool          canBeRestored (int);
    static const QString classNameOfToplevel (int);
    bool                 restore (int, bool = 1);
    bool                 hasMenuBar ();
    KMenuBar*            menuBar ();
    KStatusBar*          statusBar ();
    static QList<KMainWindow*> memberList ();
    KToolBar*            toolBar (const QString& = QString ());
    QList<KToolBar*>     toolBars () const;
    void                 setAutoSaveSettings (const QString& = QLatin1String ("MainWindow" ), bool = 1);
    void                 resetAutoSaveSettings ();
    bool                 autoSaveSettings () const;
    QString              autoSaveGroup () const;
    virtual void         applyMainWindowSettings (const KConfigGroup&, bool = 0);
    void                 saveMainWindowSettings (const KConfigGroup&);
    bool                 initialGeometrySet () const;
    void                 ignoreInitialGeometry ();

public slots:
    virtual void         setCaption (const QString&);
    virtual void         setCaption (const QString&, bool);
    virtual void         setPlainCaption (const QString&);
    void                 appHelpActivated ();
    void                 setSettingsDirty ();

protected:
    virtual bool         event (QEvent*);
    virtual void         closeEvent (QCloseEvent*);
    virtual bool         queryExit ();
    virtual bool         queryClose ();
    virtual void         saveProperties (KConfigGroup&);
    virtual void         readProperties (const KConfigGroup&);
    virtual void         saveGlobalProperties (KConfig*);
    virtual void         readGlobalProperties (KConfig*);
    void                 savePropertiesInternal (KConfig*, int);
    bool                 readPropertiesInternal (KConfig*, int);
    bool                 settingsDirty () const;
    void                 saveWindowSize (const KConfigGroup&) const;
    void                 restoreWindowSize (const KConfigGroup&);
    void                 parseGeometry (bool);

protected slots:
    virtual void         showAboutApplication ();
    void                 saveAutoSaveSettings ();

protected:
//ig                          KMainWindow (KMainWindowPrivate&, QWidget* /TransferThis/, Qt::WFlags);

};  // class KMainWindow

