//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module ktexteditor  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KTextEditor
{

class Attribute : QTextCharFormat
{
%TypeHeaderCode
#include <attribute.h>
%End


public:
    typedef KSharedPtr<KTextEditor::Attribute> Ptr;
                         Attribute ();
                         Attribute (const KTextEditor::Attribute&);
//ig     void                 changed () const;

    enum CustomProperties
    {
        Outline, 
        SelectedForeground, 
        SelectedBackground, 
        BackgroundFillWhitespace, 
        AttributeDynamicEffect, 
        AttributeInternalProperty, 
        AttributeUserProperty
    };

    bool                 fontBold () const;
    void                 setFontBold (bool = 1);
    QBrush               outline () const;
    void                 setOutline (const QBrush&);
    QBrush               selectedForeground () const;
    void                 setSelectedForeground (const QBrush&);
    QBrush               selectedBackground () const;
    void                 setSelectedBackground (const QBrush&);
    bool                 backgroundFillWhitespace () const;
    void                 setBackgroundFillWhitespace (bool);
    void                 clear ();
    bool                 hasAnyProperty () const;
//ig     void                 associateAction (KAction*);
//ig     void                 dissociateAction (KAction*);
    const QList<KAction*>& associatedActions () const;
    void                 clearAssociatedActions ();

    enum ActivationType
    {
        ActivateMouseIn, 
        ActivateCaretIn
    };


    enum Effect
    {
        EffectNone, 
        EffectFadeIn, 
        EffectFadeOut, 
        EffectPulse, 
        EffectCycleGradient
    };

    typedef QFlags<KTextEditor::Attribute::Effect> Effects;
    KTextEditor::Attribute::Ptr dynamicAttribute (KTextEditor::Attribute::ActivationType) const;
    void                 setDynamicAttribute (KTextEditor::Attribute::ActivationType, KTextEditor::Attribute::Ptr);
    KTextEditor::Attribute::Effects effects () const;
    void                 setEffects (KTextEditor::Attribute::Effects);
    KTextEditor::Attribute& operator += (const KTextEditor::Attribute&);

};  // class Attribute

};  // namespace KTextEditor

