//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KFileViewSignaler : QObject
{
%TypeHeaderCode
#include <kfileview.h>
%End


public:
    void                 activate (const KFileItem*);
    void                 highlightFile (const KFileItem*);
    void                 activateMenu (const KFileItem*, const QPoint&);
    void                 changeSorting (QDir::SortFlags);
    void                 dropURLs (const KFileItem*, QDropEvent*, const KUrl::List&);

signals:
    void                 dirActivated (const KFileItem*);
    void                 sortingChanged (QDir::SortFlags);
    void                 fileHighlighted (const KFileItem*);
    void                 fileSelected (const KFileItem*);
    void                 activatedMenu (const KFileItem*, const QPoint&);
    void                 dropped (const KFileItem*, QDropEvent*, const KUrl::List&);

};  // class KFileViewSignaler


class KFileView
{
%TypeHeaderCode
#include <kfileview.h>
%End


public:
                         KFileView ();
    void                 addItemList (const KFileItemList&);
    virtual QWidget*     widget ()  = 0;
//ig     QWidget*             widget () const;
    void                 setCurrentItem (const QString&);
    virtual void         setCurrentItem (const KFileItem*)  = 0;
    virtual KFileItem*   currentFileItem () const = 0;
    virtual void         clear ();
    virtual void         updateView (bool = 1);
    virtual void         updateView (const KFileItem*);
    virtual void         removeItem (const KFileItem*);
    virtual void         listingCompleted ();
    QDir::SortFlags      sorting () const;
    virtual void         setSorting (QDir::SortFlags);
    bool                 isReversed () const;
    void                 sortReversed ();
    uint                 count () const;
    uint                 numFiles () const;
    uint                 numDirs () const;
    virtual void         setSelectionMode (KFile::SelectionMode);
    virtual KFile::SelectionMode selectionMode () const;

    enum ViewMode
    {
        Files, 
        Directories, 
        All
    };

    virtual void         setViewMode (KFileView::ViewMode);
    virtual KFileView::ViewMode viewMode () const;
    QString              viewName () const;
    void                 setViewName (const QString&);
    virtual void         setParentView (KFileView* /Transfer/);
    virtual void         insertItem (KFileItem*);
    virtual void         clearView ()  = 0;
    virtual void         ensureItemVisible (const KFileItem*)  = 0;
    virtual void         clearSelection ()  = 0;
    virtual void         selectAll ();
    virtual void         invertSelection ();
    virtual void         setSelected (const KFileItem*, bool)  = 0;
    virtual bool         isSelected (const KFileItem*) const = 0;
    const KFileItemList* selectedItems () const;
    const KFileItemList* items () const;
    virtual KFileItem*   firstFileItem () const = 0;
    virtual KFileItem*   nextItem (const KFileItem*) const = 0;
    virtual KFileItem*   prevItem (const KFileItem*) const = 0;
    void                 setOnlyDoubleClickSelectsFiles (bool);
    bool                 onlyDoubleClickSelectsFiles () const;
    bool                 updateNumbers (const KFileItem*);
    virtual KActionCollection* actionCollection () const;
    KFileViewSignaler*   signaler () const;
    virtual void         readConfig (KConfigGroup*);
    virtual void         writeConfig (KConfigGroup*);

    enum DropOptions
    {
        AutoOpenDirs
    };

    virtual void         setDropOptions (int);
    int                  dropOptions ();
    static QString       sortingKey (const QString&, bool, QDir::SortFlags);
    static QString       sortingKey (KIO::filesize_t, bool, QDir::SortFlags);
    static int           autoOpenDelay ();

protected:

};  // class KFileView

