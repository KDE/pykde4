//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KPopupFrame : QFrame
{
%TypeHeaderCode
#include <kdatetable.h>
%End


protected:
    virtual void         keyPressEvent (QKeyEvent*);

public slots:
    void                 close (int);

public:
                         KPopupFrame (QWidget* /TransferThis/ = 0);
    void                 setMainWidget (QWidget*);
    virtual void         resizeEvent (QResizeEvent*);
    void                 popup (const QPoint&);
    int                  exec (const QPoint&);
    int                  exec (int, int);

signals:
    void                 leaveModality ();

private:
                         KPopupFrame (const KPopupFrame&) [()];

};  // class KPopupFrame


class KDateValidator : QValidator
{
%TypeHeaderCode
#include <kdatetable.h>
%End


public:
                         KDateValidator (QWidget* /TransferThis/ = 0);
    virtual State        validate (QString&, int& /In/) const;
    virtual void         fixup (QString&) const;
    State                date (const QString&, QDate&) const;

};  // class KDateValidator


class KDateTable : QWidget
{
%TypeHeaderCode
#include <kdatetable.h>
%End


public:
                         KDateTable (QWidget* /TransferThis/ = 0);
                         KDateTable (const QDate&, QWidget* /TransferThis/ = 0);
    virtual QSize        sizeHint () const;
    void                 setFontSize (int);
    bool                 setDate (const QDate&);
    const QDate&         date () const;
    const KCalendarSystem* calendar () const;
    bool                 setCalendar (KCalendarSystem* = 0);
    bool                 setCalendar (const QString&);
    void                 setPopupMenuEnabled (bool);
    bool                 popupMenuEnabled () const;

    enum BackgroundMode
    {
        NoBgMode, 
        RectangleMode, 
        CircleMode
    };

    void                 setCustomDatePainting (const QDate&, const QColor&, KDateTable::BackgroundMode = KDateTable::NoBgMode , const QColor& = QColor ());
    void                 unsetCustomDatePainting (const QDate&);

protected:
    virtual int          posFromDate (const QDate&);
    virtual QDate        dateFromPos (int);
    virtual void         paintEvent (QPaintEvent*);
    virtual void         mousePressEvent (QMouseEvent*);
    virtual void         wheelEvent (QWheelEvent*);
    virtual void         keyPressEvent (QKeyEvent*);
    virtual void         focusInEvent (QFocusEvent*);
    virtual void         focusOutEvent (QFocusEvent*);

signals:
    void                 dateChanged (const QDate&);
    void                 dateChanged (const QDate&, const QDate&);
    void                 tableClicked ();
    void                 aboutToShowContextMenu (KMenu*, const QDate&);

private:
                         KDateTable (const KDateTable&) [()];

};  // class KDateTable

