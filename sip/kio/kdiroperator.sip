//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KDirOperator : QWidget
{
%TypeHeaderCode
#include <kdiroperator.h>
%End


public:

    enum ActionType
    {
        SortActions, 
        ViewActions, 
        NavActions, 
        FileActions, 
        AllActions
    };

                         KDirOperator (const KUrl& = KUrl (), QWidget* /TransferThis/ = 0);
    virtual void         setShowHiddenFiles (bool);
    bool                 showHiddenFiles () const;
    void                 close ();
    void                 setNameFilter (const QString&);
    QString              nameFilter () const;
    void                 setMimeFilter (const QStringList&);
    QStringList          mimeFilter () const;
    void                 clearFilter ();
    KUrl                 url () const;
    virtual void         setUrl (const KUrl&, bool);
    void                 setCurrentItem (const QString&);
    virtual void         setView (QAbstractItemView*);
    QAbstractItemView*   view () const;
    virtual void         setView (KFile::FileView);
    void                 setSorting (QDir::SortFlags);
    QDir::SortFlags      sorting () const;
    bool                 isRoot () const;
    KDirLister*          dirLister () const;
    QProgressBar*        progressBar () const;
    virtual void         setMode (KFile::Modes);
    KFile::Modes         mode () const;
    virtual void         setPreviewWidget (KPreviewWidgetBase*);
    QList<KFileItem>     selectedItems () const;

    bool                 isSelected (const KFileItem&) const;

    int                  numDirs () const;
    int                  numFiles () const;
    KCompletion*         completionObject () const;
    KCompletion*         dirCompletionObject () const;
    KActionCollection*   actionCollection () const;
    virtual void         setViewConfig (KConfigGroup&);
    KConfigGroup*        viewConfigGroup () const;
    virtual void         readConfig (const KConfigGroup&);
    virtual void         writeConfig (KConfigGroup&);
    void                 setOnlyDoubleClickSelectsFiles (bool);
    bool                 onlyDoubleClickSelectsFiles () const;
    virtual bool         mkdir (const QString&, bool = 1);
    virtual KIO::DeleteJob* del (const QList<KFileItem>&, QWidget* /Transfer/ = 0, bool = 1, bool = 1)  /PyName=del_/;
    void                 clearHistory ();
    virtual void         setEnableDirHighlighting (bool);
    bool                 dirHighlighting () const;
    bool                 dirOnlyMode () const;
    static bool          dirOnlyMode (uint);
    void                 setupMenu (int);
    virtual void         setAcceptDrops (bool);
    virtual void         setDropOptions (int);
    virtual KIO::CopyJob* trash (const QList<KFileItem>&, QWidget* /Transfer/, bool = 1, bool = 1);

protected:
    virtual QAbstractItemView* createView (QWidget* /Transfer/, KFile::FileView);
    virtual void         setDirLister (KDirLister*);
    virtual void         resizeEvent (QResizeEvent*);
    void                 setupActions ();
    void                 updateSortActions ();
    void                 updateViewActions ();
    void                 setupMenu ();
    void                 prepareCompletionObjects ();
    bool                 checkPreviewSupport ();
    virtual void         activatedMenu (const KFileItem&, const QPoint&);

public slots:
    virtual void         back ();
    virtual void         forward ();
    virtual void         home ();
    virtual void         cdUp ();
    void                 updateDir ();
    virtual void         rereadDir ();
    virtual void         mkdir ();
    virtual void         deleteSelected ();
    void                 updateSelectionDependentActions ();
    QString              makeCompletion (const QString&);
    QString              makeDirCompletion (const QString&);
    virtual void         trashSelected ();

protected slots:
    void                 resetCursor ();
    void                 pathChanged ();

    virtual void         selectDir (const KFileItem&);
    void                 selectFile (const KFileItem&);
    void                 highlightFile (const KFileItem&);

    void                 sortByName ();
    void                 sortBySize ();
    void                 sortByDate ();
    void                 sortByType ();
    void                 sortReversed ();
    void                 toggleDirsFirst ();
    void                 toggleIgnoreCase ();
    void                 slotCompletionMatch (const QString&);

signals:
    void                 urlEntered (const KUrl&);
    void                 updateInformation (int, int);
    void                 completion (const QString&);
    void                 finishedLoading ();
    void                 viewChanged (QAbstractItemView*);

    void                 fileHighlighted (const KFileItem&);
    void                 dirActivated (const KFileItem&);
    void                 fileSelected (const KFileItem&);
    void                 dropped (const KFileItem&, QDropEvent*, const KUrl::List&);


public:



protected slots:



signals:



};  // class KDirOperator

