//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KIO
{

class NetAccess : QObject
{
%TypeHeaderCode
#include <netaccess.h>
%End


public:
    static bool          download (const KUrl&, QString&, QWidget*);
    static void          removeTempFile (const QString&);
    static bool          upload (const QString&, const KUrl&, QWidget*);
    static bool          file_copy (const KUrl&, const KUrl&, QWidget* = 0);
    static bool          copy (const KUrl&, const KUrl&, QWidget* = 0);
    static bool          file_copy (const KUrl&, const KUrl&, int, bool = 0, bool = 0, QWidget* = 0);
    static bool          file_move (const KUrl&, const KUrl&, int = -1, bool = 0, bool = 0, QWidget* = 0);
    static bool          dircopy (const KUrl&, const KUrl&, QWidget*);
    static bool          dircopy (const KUrl::List&, const KUrl&, QWidget* = 0);
    static bool          move (const KUrl&, const KUrl&, QWidget* = 0);
    static bool          move (const KUrl::List&, const KUrl&, QWidget* = 0);
    static bool          exists (const KUrl&, bool, QWidget*);
    static bool          stat (const KUrl&, KIO::UDSEntry&, QWidget*);
    static KUrl          mostLocalUrl (const KUrl&, QWidget*);
    static bool          del (const KUrl&, QWidget*);
    static bool          mkdir (const KUrl&, QWidget*, int = -1);
    static QString       fish_execute (const KUrl&, const QString&, QWidget*);
    static bool          synchronousRun (KIO::Job*, QWidget*, QByteArray* = 0, KUrl* = 0, QMap<QString, QString>* = 0);
    static QString       mimetype (const KUrl&, QWidget*);
    static QString       lastErrorString ();
    static int           lastError ();

signals:
    void                 leaveModality ();

private:
                         NetAccess ();
                         ~NetAccess ();

};  // class NetAccess

};  // namespace KIO

