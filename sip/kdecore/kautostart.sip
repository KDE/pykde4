//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdecore  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KAutostart : QObject
{
%TypeHeaderCode
#include <kautostart.h>
%End


public:
                         KAutostart (const QString& = QString (), QObject* /TransferThis/ = 0);

    enum Condition
    {
        NoConditions, 
        CheckCommand
    };

    typedef QFlags<KAutostart::Condition> Conditions;

    enum StartPhase
    {
        BaseDesktop, 
        DesktopServices, 
        Applications
    };

    void                 setAutostarts (bool);
    bool                 autostarts (const QString& = QString (), KAutostart::Conditions = KAutostart::NoConditions ) const;
    QString              command () const;
    void                 setCommand (const QString&);
    QString              visibleName () const;
    void                 setVisibleName (const QString&);
    static bool          isServiceRegistered (const QString&);
    QString              commandToCheck () const;
    void                 setCommandToCheck (const QString&);
    KAutostart::StartPhase startPhase () const;
    void                 setStartPhase (KAutostart::StartPhase);
    QStringList          allowedEnvironments () const;
    void                 setAllowedEnvironments (const QStringList&);
    void                 addToAllowedEnvironments (const QString&);
    void                 removeFromAllowedEnvironments (const QString&);
    QStringList          excludedEnvironments () const;
    void                 setExcludedEnvironments (const QStringList&);
    void                 addToExcludedEnvironments (const QString&);
    void                 removeFromExcludedEnvironments (const QString&);

};  // class KAutostart

