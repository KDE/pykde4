// Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Plasma
{
class ContainmentActions : QObject
{
%TypeHeaderCode
#include <plasma/containmentactions.h>
%End

public:
    explicit                ContainmentActions (QObject* parent /TransferThis/ = 0);
    ~ContainmentActions ();
    static KPluginInfo::List  listContainmentActionsInfo ();
    static Plasma::ContainmentActions*  load (Plasma::Containment* parent, const QString& name, const QVariantList& args = QVariantList());
    static Plasma::ContainmentActions*  load (Plasma::Containment* parent, const KPluginInfo& info, const QVariantList& args = QVariantList());
    static Plasma::PackageStructure::Ptr  packageStructure ();
    QString                 name () const;
    QString                 pluginName () const;
    QString                 icon () const;
    bool                    isInitialized () const;
    void                    restore (const KConfigGroup& config);
    virtual void            save (KConfigGroup& config);
    virtual QWidget*        createConfigurationInterface (QWidget* parent /Transfer/);
    virtual void            configurationAccepted ();
    virtual void            contextEvent (QEvent* event);
    virtual QList<QAction*>  contextualActions ();
    Plasma::DataEngine*     dataEngine (const QString& name) const;
    bool                    configurationRequired () const;
    static QString          eventToString (QEvent* event);
    bool                    event (QEvent* e);
protected:
                            ContainmentActions (QObject* parent /TransferThis/, const QVariantList& args);
    virtual void            init (const KConfigGroup& config);
    void                    setConfigurationRequired (bool needsConfiguring = 1);
    Plasma::Containment*    containment ();
    void                    paste (QPointF scenePos, QPoint screenPos);
public:
    QPoint                  popupPosition (const QSize& s, QEvent* event);
    void                    setContainment (Plasma::Containment* newContainment);
};
};
