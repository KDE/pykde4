//
//     Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Soprano
{

class BackendSetting
{
%TypeHeaderCode
#include <soprano/backend.h>
%End

public:
                            BackendSetting ();
                            BackendSetting (Soprano::BackendOption option);
                            BackendSetting (Soprano::BackendOption s, const QVariant& value_);
                            BackendSetting (const QString& userOption, const QVariant& value_);
                            BackendSetting (const Soprano::BackendSetting& other);
    Soprano::BackendOption  option () const;
    QString                 userOptionName () const;
    QVariant                value () const;
    void                    setValue (const QVariant& value);
};   // BackendSetting

typedef QList<Soprano::BackendSetting> BackendSettings;

bool                    isOptionInSettings (const Soprano::BackendSettings& settings, Soprano::BackendOption option, const QString& userOptionName = QString());
Soprano::BackendSetting&  settingInSettings (Soprano::BackendSettings& settings, Soprano::BackendOption option, const QString& userOptionName = QString());
QVariant                valueInSettings (const Soprano::BackendSettings& settings, Soprano::BackendOption option, const QString& userOptionName = QString());

class Backend : Soprano::Plugin, Soprano::Error::ErrorCache
{
%TypeHeaderCode
#include <soprano/backend.h>
%End

public:
                            Backend (const QString& name);
    virtual Soprano::StorageModel*  createModel (const Soprano::BackendSettings& settings = Soprano::BackendSettings()) const = 0;
    virtual bool            deleteModelData (const Soprano::BackendSettings& settings) const = 0;
    virtual Soprano::BackendFeatures  supportedFeatures () const = 0;
    virtual QStringList     supportedUserFeatures () const;
    bool                    supportsFeatures (Soprano::BackendFeatures feature, const QStringList& userFeatures = QStringList()) const;
};   // Backend

};   // Soprano


