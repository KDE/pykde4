//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KFontChooser : QWidget
{
%TypeHeaderCode
#include <kfontchooser.h>
%End



public:
    enum FontColumn
    {
        FamilyList,
        StyleList,
        SizeList
    };


    enum FontDiff
    {
        NoFontDiffFlags,
        FontDiffFamily,
        FontDiffStyle,
        FontDiffSize,
        AllFontDiffs
    };

    typedef QFlags<KFontChooser::FontDiff> FontDiffFlags;


    enum DisplayFlag
    {
        NoDisplayFlags,
        FixedFontsOnly,
        DisplayFrame,
        ShowDifferences
    };

    typedef QFlags<KFontChooser::DisplayFlag> DisplayFlags;

    explicit                KFontChooser (QWidget* parent /TransferThis/ = 0, const KFontChooser::DisplayFlags& flags = KFontChooser::DisplayFrame, const QStringList& fontList = QStringList(), int visibleListSize = 8, Qt::CheckState* sizeIsRelativeState = 0) [(QWidget* = 0, const KFontChooser::DisplayFlags& = KFontChooser::DisplayFrame, const QStringList& = QStringList(), int = 8, Qt::CheckState* = 0)];
%MethodCode
Py_BEGIN_ALLOW_THREADS
    sipCpp = new sipKFontChooser (a0, *a1, *a2, a3, &a4);
    Py_END_ALLOW_THREADS
%End

    void                    enableColumn (int column, bool state);
    void                    setFont (const QFont& font, bool onlyFixed = 0);
    KFontChooser::FontDiffFlags  fontDiffFlags () const;
    QFont                   font () const;
    void                    setColor (const QColor& col);
    QColor                  color () const;
    void                    setBackgroundColor (const QColor& col);
    QColor                  backgroundColor () const;
    void                    setSizeIsRelative (Qt::CheckState relative);
    Qt::CheckState          sizeIsRelative () const;
    QString                 sampleText () const;
    void                    setSampleText (const QString& text);
    void                    setSampleBoxVisible (bool visible);

    enum FontListCriteria
    {
        FixedWidthFonts,
        ScalableFonts,
        SmoothScalableFonts
    };

    static void             getFontList (QStringList& list, uint fontListCriteria);
    virtual QSize           sizeHint () const;

signals:
    void                    fontSelected (const QFont& font);

private:
//force
                            KFontChooser (const KFontChooser&);
//end
public:
    ~KFontChooser ();
};
// KFontChooser


