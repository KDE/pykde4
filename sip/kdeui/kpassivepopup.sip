//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KPassivePopup : QFrame
{
%TypeHeaderCode
#include <kpassivepopup.h>
%End


public:

    enum PopupStyle
    {
        Boxed,
        Balloon,
        CustomStyle
    };

    explicit                KPassivePopup (QWidget* parent /TransferThis/ = 0, Qt::WFlags f = 0);
    explicit                KPassivePopup (WId parent);
    void                    setView (QWidget* child);
    void                    setView (const QString& caption, const QString& text = QString());
    virtual void            setView (const QString& caption, const QString& text, const QPixmap& icon);
    KVBox*                  standardView (const QString& caption, const QString& text, const QPixmap& icon, QWidget* parent /Transfer/ = 0);
    QWidget*                view () const;
    int                     timeout () const;
    virtual void            setAutoDelete (bool autoDelete);
    bool                    autoDelete () const;
    QRect                   defaultArea () const;
    QPoint                  anchor () const;
    void                    setAnchor (const QPoint& anchor);
    static KPassivePopup*   message (const QString& text, QWidget* parent /Transfer/);
    static KPassivePopup*   message (const QString& text, QSystemTrayIcon* parent /Transfer/);
    static KPassivePopup*   message (const QString& caption, const QString& text, QWidget* parent /Transfer/);
    static KPassivePopup*   message (const QString& caption, const QString& text, QSystemTrayIcon* parent /Transfer/);
    static KPassivePopup*   message (const QString& caption, const QString& text, const QPixmap& icon, QWidget* parent /Transfer/, int timeout = -1);
    static KPassivePopup*   message (const QString& caption, const QString& text, const QPixmap& icon, QSystemTrayIcon* parent /Transfer/, int timeout = -1);
    static KPassivePopup*   message (const QString& caption, const QString& text, const QPixmap& icon, WId parent /Transfer/, int timeout = -1);
    static KPassivePopup*   message (int popupStyle, const QString& text, QWidget* parent /Transfer/);
    static KPassivePopup*   message (int popupStyle, const QString& text, QSystemTrayIcon* parent /Transfer/);
    static KPassivePopup*   message (int popupStyle, const QString& caption, const QString& text, QSystemTrayIcon* parent /Transfer/);
    static KPassivePopup*   message (int popupStyle, const QString& caption, const QString& text, QWidget* parent /Transfer/);
    static KPassivePopup*   message (int popupStyle, const QString& caption, const QString& text, const QPixmap& icon, QWidget* parent /Transfer/, int timeout = -1);
    static KPassivePopup*   message (int popupStyle, const QString& caption, const QString& text, const QPixmap& icon, QSystemTrayIcon* parent /Transfer/, int timeout = -1);
    static KPassivePopup*   message (int popupStyle, const QString& caption, const QString& text, const QPixmap& icon, WId parent /Transfer/, int timeout = -1);
    void                    setTimeout (int delay);
    void                    setPopupStyle (int popupstyle);
    void                    show ();
    void                    show (const QPoint& p);
    virtual void            setVisible (bool visible);

signals:
    void                    clicked ();
    void                    clicked (const QPoint& pos);

protected:
    virtual void            positionSelf ();
    virtual void            hideEvent (QHideEvent*);
    void                    moveNear (const QRect& target);
    QPoint                  calculateNearbyPoint (const QRect& target);
    virtual void            mouseReleaseEvent (QMouseEvent* e);
    void                    updateMask ();
    virtual void            paintEvent (QPaintEvent* pe);
};   // KPassivePopup


