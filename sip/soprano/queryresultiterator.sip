// Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Soprano
{
class QueryResultIterator
{
%TypeHeaderCode
#include <soprano/queryresultiterator.h>
%End

public:
                            QueryResultIterator ();
                            QueryResultIterator (const Soprano::QueryResultIterator&);
    virtual ~QueryResultIterator ();
    Soprano::Statement      currentStatement () const;
    Soprano::BindingSet     currentBindings () const;
    bool                    boolValue () const;
    Soprano::Node           operator [] (int offset) const;
    Soprano::Node           operator [] (const QString name) const;
    Soprano::Node           binding (const QString& name) const;
    Soprano::Node           binding (int offset) const;
    int                     bindingCount () const;
    QStringList             bindingNames () const;
    bool                    isGraph () const;
    bool                    isBinding () const;
    bool                    isBool () const;
    QList<Soprano::BindingSet>  allBindings ();
    Soprano::StatementIterator  iterateStatements () const;
    Soprano::NodeIterator   iterateBindings (const QString& variableName) const;
    Soprano::NodeIterator   iterateBindings (int offset) const;
    Soprano::StatementIterator  iterateStatementsFromBindings (const QString& subjectBindingName, const QString& predicateBindingName, const QString& objectBindingName, const QString& contextBindingName = QString(), const Soprano::Statement& templateStatement = Soprano::Statement()) const;

// iterator template methods.
//force
    void                    close ();
    bool                    next ();
    Soprano::BindingSet     current () const;
    bool                    isValid () const;
    QList<Soprano::BindingSet>  allElements ();

//end
%ConvertToSubClassCode
    // CTSCC for subclasses of 'QueryResultIterator'
    sipType = NULL;

    if (dynamic_cast<Soprano::Client::DBusQueryResultIterator*>(sipCpp))
        sipType = sipType_Soprano_Client_DBusQueryResultIterator;
%End
                            QueryResultIterator (Soprano::QueryResultIteratorBackend* qr);
};
};
%ModuleHeaderCode
//ctscc
#include <soprano/dbusqueryresultiterator.h>
#include <soprano/queryresultiterator.h>
%End
