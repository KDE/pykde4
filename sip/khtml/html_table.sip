//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLTableCaptionElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_table.h>
%End


public:
                            HTMLTableCaptionElement ();
                            HTMLTableCaptionElement (const DOM::HTMLTableCaptionElement& other);
                            HTMLTableCaptionElement (const DOM::Node& other);

protected:
//ig                            HTMLTableCaptionElement (HTMLTableCaptionElementImpl* impl);

public:
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    ~HTMLTableCaptionElement ();
};
// HTMLTableCaptionElement


class HTMLTableCellElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_table.h>
%End


public:
                            HTMLTableCellElement ();
                            HTMLTableCellElement (const DOM::HTMLTableCellElement& other);
                            HTMLTableCellElement (const DOM::Node& other);

protected:
//ig                            HTMLTableCellElement (HTMLTableCellElementImpl* impl);

public:
    long                    cellIndex () const;
    void                    setCellIndex (long);
    DOM::DOMString          abbr () const;
    void                    setAbbr (const DOM::DOMString&);
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    DOM::DOMString          axis () const;
    void                    setAxis (const DOM::DOMString&);
    DOM::DOMString          bgColor () const;
    void                    setBgColor (const DOM::DOMString&);
    DOM::DOMString          ch () const;
    void                    setCh (const DOM::DOMString&);
    DOM::DOMString          chOff () const;
    void                    setChOff (const DOM::DOMString&);
    long                    colSpan () const;
    void                    setColSpan (long);
    DOM::DOMString          headers () const;
    void                    setHeaders (const DOM::DOMString&);
    DOM::DOMString          height () const;
    void                    setHeight (const DOM::DOMString&);
    bool                    noWrap () const;
    void                    setNoWrap (bool);
    long                    rowSpan () const;
    void                    setRowSpan (long);
    DOM::DOMString          scope () const;
    void                    setScope (const DOM::DOMString&);
    DOM::DOMString          vAlign () const;
    void                    setVAlign (const DOM::DOMString&);
    DOM::DOMString          width () const;
    void                    setWidth (const DOM::DOMString&);
    ~HTMLTableCellElement ();
};
// HTMLTableCellElement


class HTMLTableColElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_table.h>
%End


public:
                            HTMLTableColElement ();
                            HTMLTableColElement (const DOM::HTMLTableColElement& other);
                            HTMLTableColElement (const DOM::Node& other);

protected:
//ig                            HTMLTableColElement (HTMLTableColElementImpl* impl);

public:
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    DOM::DOMString          ch () const;
    void                    setCh (const DOM::DOMString&);
    DOM::DOMString          chOff () const;
    void                    setChOff (const DOM::DOMString&);
    long                    span () const;
    void                    setSpan (long);
    DOM::DOMString          vAlign () const;
    void                    setVAlign (const DOM::DOMString&);
    DOM::DOMString          width () const;
    void                    setWidth (const DOM::DOMString&);
    ~HTMLTableColElement ();
};
// HTMLTableColElement


class HTMLTableElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_table.h>
%End


public:
                            HTMLTableElement ();
                            HTMLTableElement (const DOM::HTMLTableElement& other);
                            HTMLTableElement (const DOM::Node& other);

protected:
//ig                            HTMLTableElement (HTMLTableElementImpl* impl);

public:
    DOM::HTMLTableCaptionElement  caption () const;
    void                    setCaption (const DOM::HTMLTableCaptionElement&);
    DOM::HTMLTableSectionElement  tHead () const;
    void                    setTHead (const DOM::HTMLTableSectionElement&);
    DOM::HTMLTableSectionElement  tFoot () const;
    void                    setTFoot (const DOM::HTMLTableSectionElement&);
    DOM::HTMLCollection     rows () const;
    DOM::HTMLCollection     tBodies () const;
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    DOM::DOMString          bgColor () const;
    void                    setBgColor (const DOM::DOMString&);
    DOM::DOMString          border () const;
    void                    setBorder (const DOM::DOMString&);
    DOM::DOMString          cellPadding () const;
    void                    setCellPadding (const DOM::DOMString&);
    DOM::DOMString          cellSpacing () const;
    void                    setCellSpacing (const DOM::DOMString&);
    DOM::DOMString          frame () const;
    void                    setFrame (const DOM::DOMString&);
    DOM::DOMString          rules () const;
    void                    setRules (const DOM::DOMString&);
    DOM::DOMString          summary () const;
    void                    setSummary (const DOM::DOMString&);
    DOM::DOMString          width () const;
    void                    setWidth (const DOM::DOMString&);
    DOM::HTMLElement        createTHead ();
    void                    deleteTHead ();
    DOM::HTMLElement        createTFoot ();
    void                    deleteTFoot ();
    DOM::HTMLElement        createCaption ();
    void                    deleteCaption ();
    DOM::HTMLElement        insertRow (long index);
    void                    deleteRow (long index);
    ~HTMLTableElement ();
};
// HTMLTableElement


class HTMLTableRowElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_table.h>
%End


public:
                            HTMLTableRowElement ();
                            HTMLTableRowElement (const DOM::HTMLTableRowElement& other);
                            HTMLTableRowElement (const DOM::Node& other);

protected:
//ig                            HTMLTableRowElement (HTMLTableRowElementImpl* impl);

public:
    long                    rowIndex () const;
    void                    setRowIndex (long);
    long                    sectionRowIndex () const;
    void                    setSectionRowIndex (long);
    DOM::HTMLCollection     cells () const;
    void                    setCells (const DOM::HTMLCollection&);
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    DOM::DOMString          bgColor () const;
    void                    setBgColor (const DOM::DOMString&);
    DOM::DOMString          ch () const;
    void                    setCh (const DOM::DOMString&);
    DOM::DOMString          chOff () const;
    void                    setChOff (const DOM::DOMString&);
    DOM::DOMString          vAlign () const;
    void                    setVAlign (const DOM::DOMString&);
    DOM::HTMLElement        insertCell (long index);
    void                    deleteCell (long index);
    ~HTMLTableRowElement ();
};
// HTMLTableRowElement


class HTMLTableSectionElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_table.h>
%End


public:
                            HTMLTableSectionElement ();
                            HTMLTableSectionElement (const DOM::HTMLTableSectionElement& other);
                            HTMLTableSectionElement (const DOM::Node& other);

protected:
//ig                            HTMLTableSectionElement (HTMLTableSectionElementImpl* impl);

public:
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    DOM::DOMString          ch () const;
    void                    setCh (const DOM::DOMString&);
    DOM::DOMString          chOff () const;
    void                    setChOff (const DOM::DOMString&);
    DOM::DOMString          vAlign () const;
    void                    setVAlign (const DOM::DOMString&);
    DOM::HTMLCollection     rows () const;
    DOM::HTMLElement        insertRow (long index);
    void                    deleteRow (long index);
    ~HTMLTableSectionElement ();
};
// HTMLTableSectionElement

};
// DOM


