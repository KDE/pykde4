//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KAction : QWidgetAction
{
%TypeHeaderCode
#include <kaction.h>
%End


public:

    enum ShortcutType
    {
        ActiveShortcut, 
        DefaultShortcut
    };

    typedef QFlags<KAction::ShortcutType> ShortcutTypes;

    enum GlobalShortcutLoading
    {
        Autoloading, 
        NoAutoloading
    };

                         KAction (QObject* /TransferThis/);
                         KAction (const QString&, QObject* /TransferThis/);
                         KAction (const KIcon&, const QString&, QObject* /TransferThis/);
    KShortcut            shortcut (KAction::ShortcutTypes = KAction::ActiveShortcut ) const;
    void                 setShortcut (const KShortcut&, KAction::ShortcutTypes);
    void                 setShortcut (const QKeySequence&, KAction::ShortcutTypes);

    void                 setShortcuts (const QList<QKeySequence>&, KAction::ShortcutTypes);

    bool                 isShortcutConfigurable () const;
    void                 setShortcutConfigurable (bool);
    const KShortcut&     globalShortcut (KAction::ShortcutTypes = KAction::ActiveShortcut ) const;
    void                 setGlobalShortcut (const KShortcut&, KAction::ShortcutTypes, KAction::GlobalShortcutLoading = KAction::Autoloading );
    bool                 globalShortcutAllowed () const;
    void                 setGlobalShortcutAllowed (bool, KAction::GlobalShortcutLoading = KAction::Autoloading );
    KShapeGesture        shapeGesture (KAction::ShortcutTypes = KAction::ActiveShortcut ) const;
    KRockerGesture       rockerGesture (KAction::ShortcutTypes = KAction::ActiveShortcut ) const;
    void                 setShapeGesture (const KShapeGesture&, KAction::ShortcutTypes);
    void                 setRockerGesture (const KRockerGesture&, KAction::ShortcutTypes);

signals:
    void                 triggered (Qt::MouseButtons, Qt::KeyboardModifiers);

};  // class KAction

