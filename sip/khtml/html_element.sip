//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLElement : DOM::Element
{
%TypeHeaderCode
#include <html_element.h>
%End


public:
                            HTMLElement ();
                            HTMLElement (const DOM::HTMLElement& other);
                            HTMLElement (const DOM::Node& other);

protected:
//ig                            HTMLElement (HTMLElementImpl* impl);

public:
    DOM::DOMString          id () const;
    void                    setId (const DOM::DOMString&);
    DOM::DOMString          title () const;
    void                    setTitle (const DOM::DOMString&);
    DOM::DOMString          lang () const;
    void                    setLang (const DOM::DOMString&);
    DOM::DOMString          dir () const;
    void                    setDir (const DOM::DOMString&);
    DOM::DOMString          className () const;
    void                    setClassName (const DOM::DOMString&);
    DOM::DOMString          innerHTML () const;
    void                    setInnerHTML (const DOM::DOMString& html);
    DOM::DOMString          innerText () const;
    void                    setInnerText (const DOM::DOMString& text);
    DOM::HTMLCollection     children () const;
    DOM::HTMLCollection     all () const;

    bool                    isContentEditable () const;
    DOM::DOMString          contentEditable () const;
    void                    setContentEditable (const DOM::DOMString& enabled);

    void                    removeCSSProperty (const DOM::DOMString& property);
    void                    addCSSProperty (const DOM::DOMString& property, const DOM::DOMString& value);

protected:
    void                    assignOther (const DOM::Node& other, int elementId);
public:
    ~HTMLElement ();
};
// HTMLElement

};
// DOM


