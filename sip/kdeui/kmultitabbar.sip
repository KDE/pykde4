//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KMultiTabBar : QWidget
{
%TypeHeaderCode
#include <kmultitabbar.h>
%End


public:

    enum KMultiTabBarPosition
    {
        Left,
        Right,
        Top,
        Bottom
    };


    enum KMultiTabBarStyle
    {
        VSNET,
        KDEV3ICON,
        STYLELAST
    };

    explicit                KMultiTabBar (KMultiTabBar::KMultiTabBarPosition pos, QWidget* parent /TransferThis/ = 0);
    int                     appendButton (const QPixmap& pic, int id = -1, QMenu* popup = 0, const QString& not_used_yet = QString());
    void                    removeButton (int id);
    int                     appendTab (const QPixmap& pic, int id = -1, const QString& text = QString());
    void                    removeTab (int id);
    void                    setTab (int id, bool state);
    bool                    isTabRaised (int id) const;
    KMultiTabBarButton*     button (int id) const;
    KMultiTabBarTab*        tab (int id) const;
    void                    setPosition (KMultiTabBar::KMultiTabBarPosition pos);
    KMultiTabBar::KMultiTabBarPosition  position () const;
    void                    setStyle (KMultiTabBar::KMultiTabBarStyle style);
    KMultiTabBar::KMultiTabBarStyle  tabStyle () const;

protected:
    virtual void            fontChange (const QFont&);
    void                    updateSeparator ();
};   // KMultiTabBar


class KMultiTabBarButton : QPushButton
{
%TypeHeaderCode
#include <kmultitabbar.h>
%End


public:
    int                     id () const;
    void                    setText (const QString& text);

signals:
    void                    clicked (int id);

protected:
    virtual void            slotClicked ();
    virtual void            hideEvent (QHideEvent*);
    virtual void            showEvent (QShowEvent*);
                            KMultiTabBarButton (const QPixmap& pic, const QString&, int id, QWidget* parent /TransferThis/);
};   // KMultiTabBarButton


class KMultiTabBarTab : KMultiTabBarButton
{
%TypeHeaderCode
#include <kmultitabbar.h>
%End


public:
    virtual QSize           sizeHint () const;
    virtual QSize           minimumSizeHint () const;
    void                    setPosition (KMultiTabBar::KMultiTabBarPosition);
    void                    setStyle (KMultiTabBar::KMultiTabBarStyle);
    void                    setState (bool state);
    void                    setIcon (const QString&);
    void                    setIcon (const QPixmap&);

protected:
    virtual void            paintEvent (QPaintEvent*);

private:
                            KMultiTabBarTab (const QPixmap& pic, const QString&, int id, QWidget* parent /TransferThis/, KMultiTabBar::KMultiTabBarPosition pos, KMultiTabBar::KMultiTabBarStyle style);
};   // KMultiTabBarTab


