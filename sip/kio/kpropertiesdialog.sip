//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KPropertiesDialog : KPageDialog
{
%TypeHeaderCode
#include <kpropertiesdialog.h>
%End


public:
    static bool          canDisplay (const KFileItemList&);
                         KPropertiesDialog (KFileItem*, QWidget* /TransferThis/ = 0);
                         KPropertiesDialog (const KFileItemList&, QWidget* /TransferThis/ = 0);
                         KPropertiesDialog (const KUrl&, QWidget* /TransferThis/ = 0);
                         KPropertiesDialog (const KUrl&, const KUrl&, const QString&, QWidget* /TransferThis/ = 0);
                         KPropertiesDialog (const QString&, QWidget* /TransferThis/ = 0);
    static bool          showDialog (KFileItem*, QWidget* /Transfer/ = 0, bool = 1);
    static bool          showDialog (const KUrl&, QWidget* /Transfer/ = 0, bool = 1);
    static bool          showDialog (const KFileItemList&, QWidget* /Transfer/ = 0, bool = 1);
    void                 insertPlugin (KPropertiesDialogPlugin*);
    KUrl                 kurl () const;
    KFileItem*           item ();
    KFileItemList        items () const;
    KUrl                 currentDir () const;
    QString              defaultName () const;
    void                 updateUrl (const KUrl&);
    void                 rename (const QString&);
    void                 abortApplying ();
    void                 showFileSharingPage ();
    void                 setFileSharingPage (QWidget*);
    void                 setFileNameReadOnly (bool);

public slots:
    virtual void         slotOk ();
    virtual void         slotCancel ();

signals:
    void                 propertiesClosed ();
    void                 applied ();
    void                 canceled ();
    void                 saveAs (const KUrl&, KUrl&);

signals:
    void                 leaveModality ();

private:
                         KPropertiesDialog (const KPropertiesDialog&) [()];

};  // class KPropertiesDialog


class KPropertiesDialogPlugin : QObject
{
%TypeHeaderCode
#include <kpropertiesdialog.h>
%End


public:
                         KPropertiesDialogPlugin (KPropertiesDialog*);
    virtual void         applyChanges ();
    static bool          isDesktopFile (KFileItem*);
    void                 setDirty (bool);
    bool                 isDirty () const;

public slots:
    void                 setDirty ();

signals:
    void                 changed ();

protected:

};  // class KPropertiesDialogPlugin


class KFilePropsPlugin : KPropertiesDialogPlugin
{
%TypeHeaderCode
#include <kpropertiesdialog.h>
%End


public:
                         KFilePropsPlugin (KPropertiesDialog*);
    virtual void         applyChanges ();
    static bool          supports (const KFileItemList&);
    void                 postApplyChanges ();
    void                 setFileNameReadOnly (bool);

protected slots:
    void                 slotEditFileType ();

    void                 slotCopyFinished (KJob*);

    void                 slotFileRenamed (KIO::Job*, const KUrl&, const KUrl&);
    void                 slotDirSizeUpdate ();
    void                 slotDirSizeFinished (KJob*);
    void                 slotFoundMountPoint (const QString&, ulong, ulong, ulong);
    void                 slotSizeStop ();
    void                 slotSizeDetermine ();

signals:
    void                 leaveModality ();

protected slots:



};  // class KFilePropsPlugin


class KFilePermissionsPropsPlugin : KPropertiesDialogPlugin
{
%TypeHeaderCode
#include <kpropertiesdialog.h>
%End


public:

    enum PermissionsMode
    {
        PermissionsOnlyFiles, 
        PermissionsOnlyDirs, 
        PermissionsOnlyLinks, 
        PermissionsMixed
    };


    enum PermissionsTarget
    {
        PermissionsOwner, 
        PermissionsGroup, 
        PermissionsOthers
    };

                         KFilePermissionsPropsPlugin (KPropertiesDialog*);
    virtual void         applyChanges ();
    static bool          supports (const KFileItemList&);

signals:
    void                 leaveModality ();

};  // class KFilePermissionsPropsPlugin


class KUrlPropsPlugin : KPropertiesDialogPlugin
{
%TypeHeaderCode
#include <kpropertiesdialog.h>
%End


public:
                         KUrlPropsPlugin (KPropertiesDialog*);
    virtual void         applyChanges ();
    static bool          supports (const KFileItemList&);

};  // class KUrlPropsPlugin


class KBindingPropsPlugin : KPropertiesDialogPlugin
{
%TypeHeaderCode
#include <kpropertiesdialog.h>
%End


public:
                         KBindingPropsPlugin (KPropertiesDialog*);
    virtual void         applyChanges ();
    static bool          supports (const KFileItemList&);

};  // class KBindingPropsPlugin


class KDevicePropsPlugin : KPropertiesDialogPlugin
{
%TypeHeaderCode
#include <kpropertiesdialog.h>
%End


public:
                         KDevicePropsPlugin (KPropertiesDialog*);
    virtual void         applyChanges ();
    static bool          supports (const KFileItemList&);

};  // class KDevicePropsPlugin


class KDesktopPropsPlugin : KPropertiesDialogPlugin
{
%TypeHeaderCode
#include <kpropertiesdialog.h>
%End


public:
                         KDesktopPropsPlugin (KPropertiesDialog*);
    virtual void         applyChanges ();
    static bool          supports (const KFileItemList&);

public slots:
    void                 slotAddFiletype ();
    void                 slotDelFiletype ();
    void                 slotBrowseExec ();
    void                 slotAdvanced ();

};  // class KDesktopPropsPlugin

