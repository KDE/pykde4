//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kio  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace SafeSite
{

class ServiceInfo
{
%TypeHeaderCode
#include <safesite.h>
%End


public:
                         ServiceInfo ();
    const QString&       name () const;
    const KUrl&          url () const;
    const QString&       details () const;

protected:

};  // class ServiceInfo


class Report : QObject
{
%TypeHeaderCode
#include <safesite.h>
%End


public:
                         Report ();

    enum Result
    {
        Working, 
        Unknown, 
        Error, 
        KnownPhishing, 
        Indeterminate, 
        KnownGood, 
        Inconsistent, 
        Aborted
    };

    SafeSite::Report::Result result (const QString& = QString ()) const;
    QString              extendedResultText (const QString& = QString ()) const;
    QString              report (const QString& = QString ()) const;
    QMap<QString, QString> metaData (const QString& = QString ()) const;
    QStringList          services () const;
    SafeSite::ServiceInfo serviceInfo (const QString&);
    void                 abort ();
    const KUrl&          url () const;

protected slots:
//ig     void                 serviceReported (Service*);

signals:
    void                 done ();
    void                 serviceReported (const QString&);

protected:
    bool                 run ();

};  // class Report


class Agent
{
%TypeHeaderCode
#include <safesite.h>
%End


public:
    static SafeSite::Report* obtainReport (const KUrl&);
    static QStringList   services ();
    static SafeSite::ServiceInfo serviceInfo (const QString&);

private:
                         Agent ();
                         ~Agent ();

};  // class Agent

};  // namespace SafeSite

