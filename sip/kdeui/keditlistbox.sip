//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KEditListBox : QGroupBox
{
%TypeHeaderCode
#include <keditlistbox.h>
%End


public:

    class CustomEditor
    {

    public:
//ig                             CustomEditor ();
                             CustomEditor (QWidget*=0, KLineEdit*=0);
//ig                             CustomEditor (KComboBox*);
        void                 setRepresentationWidget (QWidget*);
        void                 setLineEdit (KLineEdit*);
        virtual QWidget*     representationWidget () const;
        virtual KLineEdit*   lineEdit () const;

    private:
                             CustomEditor (const KEditListBox::CustomEditor&) [()];

    };  // class CustomEditor


public:

public:

    enum Button
    {
        Add, 
        Remove, 
        UpDown, 
        All
    };

    typedef QFlags<KEditListBox::Button> Buttons;

//ig                         KEditListBox (QWidget* /TransferThis/ = 0);
//ig                         KEditListBox (const QString&, QWidget* /TransferThis/ = 0);

                         KEditListBox (QWidget* /TransferThis/ = 0, const char* = 0, bool = 0, KEditListBox::Buttons = KEditListBox::All );
                         KEditListBox (const QString&, QWidget* /TransferThis/ = 0, const char* = 0, bool = 0, KEditListBox::Buttons = KEditListBox::All );
//ig                         KEditListBox (const QString&, const KEditListBox::CustomEditor&, QWidget* /TransferThis/ = 0, const char* = 0, bool = 0, KEditListBox::Buttons = KEditListBox::All );
    QListView*           listView () const;
    KLineEdit*           lineEdit () const;
    QPushButton*         addButton () const;
    QPushButton*         removeButton () const;
    QPushButton*         upButton () const;
    QPushButton*         downButton () const;
    int                  count () const;
    void                 insertStringList (const QStringList&, int = -1);
    void                 insertItem (const QString&, int = -1);
    void                 clear ();
    QString              text (int) const;
    int                  currentItem () const;
    QString              currentText () const;
    QStringList          items () const;
    void                 setItems (const QStringList&);
    KEditListBox::Buttons buttons () const;
    void                 setButtons (KEditListBox::Buttons);

    void                 setCheckAtEntering (bool);
    bool                 checkAtEntering ();


signals:
    void                 changed ();
    void                 added (const QString&);
    void                 removed (const QString&);

protected slots:
    void                 moveItemUp ();
    void                 moveItemDown ();
    void                 addItem ();
    void                 removeItem ();
    void                 enableMoveButtons (const QModelIndex&, const QModelIndex&);
    void                 typedSomething (const QString&);

private:
                         KEditListBox (const KEditListBox&) [()];

};  // class KEditListBox

