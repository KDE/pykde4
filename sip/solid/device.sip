//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Solid
{

class Device
{
%TypeHeaderCode
#include <device.h>
%End


public:
    static QList<Solid::Device>  allDevices ();
    static QList<Solid::Device>  listFromType (const Solid::DeviceInterface::Type& type, const QString& parentUdi = QString());
    static QList<Solid::Device>  listFromQuery (const Solid::Predicate& predicate, const QString& parentUdi = QString());
    static QList<Solid::Device>  listFromQuery (const QString& predicate, const QString& parentUdi = QString());
    explicit                Device (const QString& udi = QString());
                            Device (const Solid::Device& device);
    bool                    isValid () const;
    QString                 udi () const;
    QString                 parentUdi () const;
    Solid::Device           parent () const;
    QString                 vendor () const;
    QString                 product () const;
    QString                 icon () const;
    bool                    isDeviceInterface (const Solid::DeviceInterface::Type& type) const;
    Solid::DeviceInterface*  asDeviceInterface (const Solid::DeviceInterface::Type& type);
//ig    const Solid::DeviceInterface*  asDeviceInterface (const Solid::DeviceInterface::Type& type) const;
    ~Device ();
    QStringList             emblems () const;
    QString                 description () const;
};
// Device

};
// Solid


