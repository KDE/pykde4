// Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Phonon
{
namespace Experimental
{

class AudioFormat
{
%TypeHeaderCode
#include <phonon/experimental/audioformat.h>
%End

public:


//mt undefined symbol: BitRate bitRate -- need mapped type?
//mt                        AudioFormat (int sampleRate = 48000, int channelCount = 2, Phonon::Experimental::BitRate bitRate = Phonon::Experimental::Signed16Bit, QSysInfo::Endian byteOrder = QSysInfo::ByteOrder);


                            AudioFormat (const Phonon::Experimental::AudioFormat&);
    int                     sampleRate () const;
    int                     channelCount () const;


//mt undefined symbol: BitRate None -- need mapped type?
//mt     Phonon::Experimental::BitRate  bitRate () const;


    QSysInfo::Endian        byteOrder () const;
    bool                    operator == (const Phonon::Experimental::AudioFormat&) const;
    bool                    operator != (const Phonon::Experimental::AudioFormat& f) const;
    bool                    operator < (const Phonon::Experimental::AudioFormat&) const;
    quint32                 key () const;
//ig    AudioFormatPrivate* d_ptr;
};   // AudioFormat

//ig uint                    qHash (const Phonon::Experimental::AudioFormat& p);
};   // Experimental

};   // Phonon


