//
//     Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Soprano
{

class Statement
{
%TypeHeaderCode
#include <soprano/statement.h>
%End

public:
                            Statement ();
                            Statement (const Soprano::Node& subject, const Soprano::Node& predicate, const Soprano::Node& object, const Soprano::Node& context = Soprano::Node());
                            Statement (const Soprano::Statement& other);
    bool                    operator == (const Soprano::Statement& other) const;
    bool                    operator != (const Soprano::Statement& other) const;
    bool                    matches (const Soprano::Statement& other) const;
    bool                    isValid () const;
    Soprano::Node           subject () const;
    Soprano::Node           predicate () const;
    Soprano::Node           object () const;
    Soprano::Node           context () const;
    void                    setSubject (const Soprano::Node& subject);
    void                    setPredicate (const Soprano::Node& predicate);
    void                    setObject (const Soprano::Node& object);
    void                    setContext (const Soprano::Node& context);
    virtual ~Statement ();
};
// Statement

};
// Soprano


//ig QDebug                  operator << (QDebug s, const Soprano::Statement&);
QTextStream&            operator << (QTextStream& s, const Soprano::Statement&);
