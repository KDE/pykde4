//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KShortcut
{
%TypeHeaderCode
#include <kshortcut.h>
%End


public:

    enum EmptyHandling
    {
        KeepEmpty, 
        RemoveEmpty
    };

                         KShortcut ();
                         KShortcut (const QKeySequence&);
                         KShortcut (const QKeySequence&, const QKeySequence&);
                         KShortcut (int, int = 0);
                         KShortcut (const KShortcut&);
                         KShortcut (const QString&);
                         KShortcut (const QList<QKeySequence>&);
    QKeySequence         primary () const;
    QKeySequence         alternate () const;
    bool                 isEmpty () const;
    bool                 contains (const QKeySequence&) const;
    QString              toString () const;
    bool                 operator == (const KShortcut&) const;
    bool                 operator != (const KShortcut&) const;
//ig                          operator QList<QKeySequence> () const;
    QList<QKeySequence>  toList (KShortcut::EmptyHandling = KShortcut::RemoveEmpty ) const;
//ig                          operator QVariant () const;
    void                 setPrimary (const QKeySequence&);
    void                 setAlternate (const QKeySequence&);
    void                 remove (KShortcut::EmptyHandling = KShortcut::RemoveEmpty );

};  // class KShortcut

