//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdecore  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KJob : QObject
{
%TypeHeaderCode
#include <kjob.h>
%End


public:

    enum Unit
    {
        Bytes, 
        Files, 
        Directories
    };


    enum Capability
    {
        NoCapabilities, 
        Killable, 
        Suspendable
    };

    typedef QFlags<KJob::Capability> Capabilities;
                         KJob (QObject* /TransferThis/ = 0);
    void                 setUiDelegate (KJobUiDelegate*);
    KJobUiDelegate*      uiDelegate () const;
    KJob::Capabilities   capabilities () const;
    bool                 isSuspended () const;
    virtual void         start ()  = 0;

    enum KillVerbosity
    {
        Quietly, 
        EmitResult
    };


public slots:
    bool                 kill (KJob::KillVerbosity = KJob::Quietly );
    bool                 suspend ();
    bool                 resume ();

protected:
    virtual bool         doKill ();
    virtual bool         doSuspend ();
    virtual bool         doResume ();
    void                 setCapabilities (KJob::Capabilities);

public:
    bool                 exec () /PyName=exec_/;

    enum 
    {
        NoError, 
        KilledJobError, 
        UserDefinedError
    };

    int                  error () const;
    QString              errorText () const;
    virtual QString      errorString () const;
    qulonglong           processedAmount (KJob::Unit) const;
    qulonglong           totalAmount (KJob::Unit) const;
    ulong                percent () const;

signals:
    void                 description (KJob*, const QString&, const QPair<QString, QString>& = qMakePair (QString (),QString ()), const QPair<QString, QString>& = qMakePair (QString (),QString ()));
    void                 infoMessage (KJob*, const QString&, const QString& = QString ());
    void                 warning (KJob*, const QString&, const QString& = QString ());

protected:
    void                 setError (int);
    void                 setErrorText (const QString&);
    void                 setProcessedAmount (KJob::Unit, qulonglong);
    void                 setTotalAmount (KJob::Unit, qulonglong);
    void                 setPercent (ulong);
    void                 emitResult ();
    void                 emitPercent (qulonglong, qulonglong);
    void                 emitSpeed (ulong);

protected:
//ig                          KJob (KJobPrivate&, QObject* /TransferThis/);

};  // class KJob

