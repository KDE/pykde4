//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine
//            PyKDE4 module khtml  version KDE 4.0.2

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace DOM
{

class HTMLAreaElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_image.h>
%End


public:
                            HTMLAreaElement ();
                            HTMLAreaElement (const DOM::HTMLAreaElement& other);
                            HTMLAreaElement (const DOM::Node& other);

protected:
//ig                        HTMLAreaElement (HTMLAreaElementImpl* impl);

public:
    DOM::DOMString          accessKey () const;
    void                    setAccessKey (const DOM::DOMString&);
    DOM::DOMString          alt () const;
    void                    setAlt (const DOM::DOMString&);
    DOM::DOMString          coords () const;
    void                    setCoords (const DOM::DOMString&);
    DOM::DOMString          href () const;
    void                    setHref (const DOM::DOMString&);
    bool                    noHref () const;
    void                    setNoHref (bool);
    DOM::DOMString          shape () const;
    void                    setShape (const DOM::DOMString&);
    long                    tabIndex () const;
    void                    setTabIndex (long);
    DOM::DOMString          target () const;
    void                    setTarget (const DOM::DOMString&);
};   // HTMLAreaElement


class HTMLImageElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_image.h>
%End


public:
                            HTMLImageElement ();
                            HTMLImageElement (const DOM::HTMLImageElement& other);
                            HTMLImageElement (const DOM::Node& other);

protected:
//ig                        HTMLImageElement (HTMLImageElementImpl* impl);

public:
    DOM::DOMString          name () const;
    void                    setName (const DOM::DOMString&);
    DOM::DOMString          align () const;
    void                    setAlign (const DOM::DOMString&);
    DOM::DOMString          alt () const;
    void                    setAlt (const DOM::DOMString&);
    DOM::DOMString          getBorder () const;
    void                    setBorder (const DOM::DOMString&);
    long                    border () const;
    void                    setBorder (long);
    long                    height () const;
    void                    setHeight (long);
    long                    hspace () const;
    void                    setHspace (long);
    bool                    isMap () const;
    void                    setIsMap (bool);
    DOM::DOMString          longDesc () const;
    void                    setLongDesc (const DOM::DOMString&);
    DOM::DOMString          src () const;
    void                    setSrc (const DOM::DOMString&);
    DOM::DOMString          useMap () const;
    void                    setUseMap (const DOM::DOMString&);
    long                    vspace () const;
    void                    setVspace (long);
    long                    width () const;
    void                    setWidth (long);
    long                    x () const;
    long                    y () const;
};   // HTMLImageElement


class HTMLMapElement : DOM::HTMLElement
{
%TypeHeaderCode
#include <html_image.h>
%End


public:
                            HTMLMapElement ();
                            HTMLMapElement (const DOM::HTMLMapElement& other);
                            HTMLMapElement (const DOM::Node& other);

protected:
//ig                        HTMLMapElement (HTMLMapElementImpl* impl);

public:
    DOM::HTMLCollection     areas () const;
    DOM::DOMString          name () const;
    void                    setName (const DOM::DOMString&);
};   // HTMLMapElement

};   // DOM


