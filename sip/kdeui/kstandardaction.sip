//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip
//            PyKDE4 module kdeui  version KDE 3.92.0


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KStandardAction
{

enum StandardAction
{
    ActionNone, 
    New, 
    Open, 
    OpenRecent, 
    Save, 
    SaveAs, 
    Revert, 
    Close, 
    Print, 
    PrintPreview, 
    Mail, 
    Quit, 
    Undo, 
    Redo, 
    Cut, 
    Copy, 
    Paste, 
    SelectAll, 
    Deselect, 
    Find, 
    FindNext, 
    FindPrev, 
    Replace, 
    ActualSize, 
    FitToPage, 
    FitToWidth, 
    FitToHeight, 
    ZoomIn, 
    ZoomOut, 
    Zoom, 
    Redisplay, 
    Up, 
    Back, 
    Forward, 
    Home, 
    Prior, 
    Next, 
    Goto, 
    GotoPage, 
    GotoLine, 
    FirstPage, 
    LastPage, 
    AddBookmark, 
    EditBookmarks, 
    Spelling, 
    ShowMenubar, 
    ShowToolbar, 
    ShowStatusbar, 
    SaveOptions, 
    KeyBindings, 
    Preferences, 
    ConfigureToolbars, 
    Help, 
    HelpContents, 
    WhatsThis, 
    ReportBug, 
    AboutApp, 
    AboutKDE, 
    TipofDay, 
    ConfigureNotifications, 
    FullScreen, 
    Clear, 
    PasteText, 
    SwitchApplicationLanguage
};

KAction*             create (KStandardAction::StandardAction, SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
const char*          name (KStandardAction::StandardAction);
QStringList          stdNames ();
KAction*             openNew (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             open (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KRecentFilesAction*  openRecent (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             save (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             saveAs (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             revert (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             close (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             print (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*) /PyName=print_/;
KAction*             printPreview (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             mail (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             quit (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             undo (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             redo (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             cut (QObject*);
KAction*             copy (QObject*);
KAction*             paste (QObject*);
KAction*             clear (QObject*);
KAction*             selectAll (QObject*);
KAction*             cut (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             copy (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             paste (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             pasteText (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             clear (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             selectAll (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             deselect (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             find (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             findNext (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             findPrev (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             replace (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             actualSize (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             fitToPage (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             fitToWidth (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             fitToHeight (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             zoomIn (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             zoomOut (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             zoom (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             redisplay (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             up (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             back (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             forward (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             home (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             prior (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             next (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             goTo (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             gotoPage (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             gotoLine (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             firstPage (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             lastPage (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             addBookmark (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             editBookmarks (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             spelling (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KToggleAction*       showMenubar (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KToggleAction*       showStatusbar (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KToggleFullScreenAction* fullScreen (SIP_RXOBJ_CON, SIP_SLOT_CON (), QWidget*, QObject*);
KAction*             saveOptions (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             keyBindings (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             preferences (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             configureToolbars (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             configureNotifications (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             help (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             helpContents (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             whatsThis (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             tipOfDay (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             reportBug (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             aboutApp (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
KAction*             aboutKDE (SIP_RXOBJ_CON, SIP_SLOT_CON (), QObject*);
};  // namespace KStandardAction

