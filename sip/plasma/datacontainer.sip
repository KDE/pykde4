// Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.


namespace Plasma
{

class DataContainer : QObject
{
%TypeHeaderCode
#include <plasma/datacontainer.h>
%End

public:
    explicit                DataContainer (QObject* parent /TransferThis/ = 0);
    const Plasma::DataEngine::Data  data () const;
    void                    setData (const QString& key, const QVariant& value);
    void                    removeAllData ();
    bool                    visualizationIsConnected (QObject* visualization) const;
    void                    connectVisualization (QObject* visualization, uint pollingInterval, Plasma::IntervalAlignment alignment);
    void                    disconnectVisualization (QObject* visualization);

signals:
    void                    dataUpdated (const QString& source, const Plasma::DataEngine::Data& data);
    void                    becameUnused (const QString& source);
    void                    updateRequested (Plasma::DataContainer* source);

protected:
    void                    checkForUpdate ();
    uint                    timeSinceLastUpdate () const;
    void                    setNeedsUpdate (bool update = 1);
    void                    checkUsage ();
public:
    ~DataContainer ();
    void                    forceImmediateUpdate ();
    void                    setStorageEnabled (bool store);
    bool                    isStorageEnabled () const;
    bool                    needsToBeStored () const;
    void                    setNeedsToBeStored (bool store);
    Plasma::DataEngine*     getDataEngine ();
protected:
    void                    timerEvent (QTimerEvent* event);
};
// DataContainer

};
// Plasma


