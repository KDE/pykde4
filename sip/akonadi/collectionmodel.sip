//
//     Copyright 2008 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Akonadi
{

class CollectionModel : QAbstractItemModel
{
%TypeHeaderCode
#include <akonadi/collectionmodel.h>
%End


public:

    enum Roles
    {
        OldCollectionIdRole,
        OldCollectionRole,
        CollectionIdRole,
        CollectionRole,
        UserRole
    };

    explicit                CollectionModel (QObject* parent /TransferThis/ = 0);
    void                    fetchCollectionStatistics (bool enable);
    void                    includeUnsubscribed (bool include = 1);
    virtual int             columnCount (const QModelIndex& parent = QModelIndex()) const;
    virtual QVariant        data (const QModelIndex& index, int role = Qt::DisplayRole) const;
    virtual QModelIndex     index (int row, int column, const QModelIndex& parent = QModelIndex()) const;
    virtual QModelIndex     parent (const QModelIndex& index) const;
    virtual int             rowCount (const QModelIndex& parent = QModelIndex()) const;
    virtual QVariant        headerData (int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const;
    virtual bool            setHeaderData (int section, Qt::Orientation orientation, const QVariant& value, int role = Qt::EditRole);
    virtual bool            setData (const QModelIndex& index, const QVariant& value, int role = Qt::EditRole);
    virtual Qt::ItemFlags   flags (const QModelIndex& index) const;
    virtual Qt::DropActions  supportedDropActions () const;
    virtual QMimeData*      mimeData (const QModelIndexList& indexes) const;
    virtual bool            dropMimeData (const QMimeData* data, Qt::DropAction action, int row, int column, const QModelIndex& parent);
    virtual QStringList     mimeTypes () const;

protected:
    Akonadi::Collection     collectionForId (Akonadi::Entity::Id id) const;

//ig     explicit           CollectionModel (CollectionModelPrivate* d, QObject* parent /TransferThis/ = 0);
};   // CollectionModel

};   // Akonadi


