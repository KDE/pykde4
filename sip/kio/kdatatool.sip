//
//     Copyright 2008 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2007 Jim Bublitz also apply

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


class KDataToolInfo
{
%TypeHeaderCode
#include <kdatatool.h>
%End


public:
                            KDataToolInfo ();
                            KDataToolInfo (const KService::Ptr& service, const KComponentData& instance);
                            KDataToolInfo (const KDataToolInfo& info);
    QString                 dataType () const;
    QStringList             mimeTypes () const;
    bool                    isReadOnly () const;
    QPixmap                 icon () const;
    QPixmap                 miniIcon () const;
    QString                 iconName () const;
    QStringList             userCommands () const;
    QStringList             commands () const;
    KDataTool*              createTool (QObject* parent /Transfer/ = 0) const;
    KService::Ptr           service () const;
    KComponentData          componentData () const;
    bool                    isValid () const;
    static QList<KDataToolInfo>  query (const QString& datatype, const QString& mimetype, const KComponentData& instance);
};   // KDataToolInfo


class KDataToolAction : KAction
{
%TypeHeaderCode
#include <kdatatool.h>
%End


public:
                            KDataToolAction (const QString& text, const KDataToolInfo& info, const QString& command, QObject* parent /TransferThis/);
    static QList<QAction*>  dataToolActionList (const QList<KDataToolInfo>& tools, const QObject* receiver, const char* slot, KActionCollection* parent /Transfer/);

signals:
    void                    toolActivated (const KDataToolInfo& info, const QString& command);

protected:
    virtual void            slotActivated ();
};   // KDataToolAction


class KDataTool : QObject
{
%TypeHeaderCode
#include <kdatatool.h>
%End


public:
                            KDataTool (QObject* parent /TransferThis/ = 0);
    void                    setComponentData (const KComponentData& componentData);
    const KComponentData&   componentData () const;
    virtual bool            run (const QString& command, void* data /In/, const QString& datatype, const QString& mimetype) = 0;
};   // KDataTool


