//
//     Copyright 2007 Jim Bublitz <jbublitz@nwinternet.com>
//     Earlier copyrights 1998 - 2006 Jim Bublitz also apply


//                 Generated by preSip


// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace KTextEditor
{

class SmartRangeNotifier : QObject
{
%TypeHeaderCode
#include <ktexteditor/rangefeedback.h>
%End


public:
                         SmartRangeNotifier ();
    bool                 wantsDirectChanges () const;
    void                 setWantsDirectChanges (bool);

signals:
    void                 rangePositionChanged (KTextEditor::SmartRange*);
    void                 rangeContentsChanged (KTextEditor::SmartRange*);
    void                 rangeContentsChanged (KTextEditor::SmartRange*, KTextEditor::SmartRange*);
    void                 mouseEnteredRange (KTextEditor::SmartRange*, KTextEditor::View*);
    void                 mouseExitedRange (KTextEditor::SmartRange*, KTextEditor::View*);
    void                 caretEnteredRange (KTextEditor::SmartRange*, KTextEditor::View*);
    void                 caretExitedRange (KTextEditor::SmartRange*, KTextEditor::View*);
    void                 rangeEliminated (KTextEditor::SmartRange*);
    void                 rangeDeleted (KTextEditor::SmartRange*);
    void                 parentRangeChanged (KTextEditor::SmartRange*, KTextEditor::SmartRange*, KTextEditor::SmartRange*);
    void                 childRangeInserted (KTextEditor::SmartRange*, KTextEditor::SmartRange*);
    void                 childRangeRemoved (KTextEditor::SmartRange*, KTextEditor::SmartRange*);
    void                 rangeAttributeChanged (KTextEditor::SmartRange*, KTextEditor::Attribute::Ptr, KTextEditor::Attribute::Ptr);

};  // class SmartRangeNotifier


class SmartRangeWatcher
{
%TypeHeaderCode
#include <ktexteditor/rangefeedback.h>
%End


public:
                         SmartRangeWatcher ();
    bool                 wantsDirectChanges () const;
    void                 setWantsDirectChanges (bool);
    virtual void         rangePositionChanged (KTextEditor::SmartRange*);
    virtual void         rangeContentsChanged (KTextEditor::SmartRange*);
    virtual void         rangeContentsChanged (KTextEditor::SmartRange*, KTextEditor::SmartRange*);
    virtual void         mouseEnteredRange (KTextEditor::SmartRange*, KTextEditor::View*);
    virtual void         mouseExitedRange (KTextEditor::SmartRange*, KTextEditor::View*);
    virtual void         caretEnteredRange (KTextEditor::SmartRange*, KTextEditor::View*);
    virtual void         caretExitedRange (KTextEditor::SmartRange*, KTextEditor::View*);
    virtual void         rangeEliminated (KTextEditor::SmartRange*);
    virtual void         rangeDeleted (KTextEditor::SmartRange*);
    virtual void         parentRangeChanged (KTextEditor::SmartRange*, KTextEditor::SmartRange*, KTextEditor::SmartRange*);
    virtual void         childRangeInserted (KTextEditor::SmartRange*, KTextEditor::SmartRange*);
    virtual void         childRangeRemoved (KTextEditor::SmartRange*, KTextEditor::SmartRange*);
    virtual void         rangeAttributeChanged (KTextEditor::SmartRange*, KTextEditor::Attribute::Ptr, KTextEditor::Attribute::Ptr);

};  // class SmartRangeWatcher

};  // namespace KTextEditor

